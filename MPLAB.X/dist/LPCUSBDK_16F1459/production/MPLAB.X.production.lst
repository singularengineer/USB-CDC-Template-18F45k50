

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Sun Apr 13 14:38:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext1,local,class=CONST,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext2,local,class=CONST,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	swtext3,local,class=CONST,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	swtext4,local,class=CONST,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x20,48,_BDT
    68                           	dabs	1,0x58,8,_CtrlTrfData
    69                           	dabs	1,0x50,8,_SetupPkt
    70                           	dabs	1,0xA0,64,_cdc_data_tx
    71                           	dabs	1,0x120,64,_cdc_data_rx
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0391                     	;# 
   167  0392                     	;# 
   168  0393                     	;# 
   169  0394                     	;# 
   170  0395                     	;# 
   171  0396                     	;# 
   172  039A                     	;# 
   173  039B                     	;# 
   174  0611                     	;# 
   175  0612                     	;# 
   176  0613                     	;# 
   177  0613                     	;# 
   178  0614                     	;# 
   179  0615                     	;# 
   180  0616                     	;# 
   181  0616                     	;# 
   182  0691                     	;# 
   183  0692                     	;# 
   184  0693                     	;# 
   185  0694                     	;# 
   186  0695                     	;# 
   187  0E8E                     	;# 
   188  0E8F                     	;# 
   189  0E90                     	;# 
   190  0E91                     	;# 
   191  0E92                     	;# 
   192  0E93                     	;# 
   193  0E94                     	;# 
   194  0E94                     	;# 
   195  0E95                     	;# 
   196  0E96                     	;# 
   197  0E97                     	;# 
   198  0E98                     	;# 
   199  0E99                     	;# 
   200  0E9A                     	;# 
   201  0E9B                     	;# 
   202  0E9C                     	;# 
   203  0E9D                     	;# 
   204  0E9E                     	;# 
   205  0E9F                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  018E                     	;# 
   276  0191                     	;# 
   277  0191                     	;# 
   278  0192                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0197                     	;# 
   285  0199                     	;# 
   286  019A                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0394                     	;# 
   314  0395                     	;# 
   315  0396                     	;# 
   316  039A                     	;# 
   317  039B                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0615                     	;# 
   324  0616                     	;# 
   325  0616                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  0695                     	;# 
   331  0E8E                     	;# 
   332  0E8F                     	;# 
   333  0E90                     	;# 
   334  0E91                     	;# 
   335  0E92                     	;# 
   336  0E93                     	;# 
   337  0E94                     	;# 
   338  0E94                     	;# 
   339  0E95                     	;# 
   340  0E96                     	;# 
   341  0E97                     	;# 
   342  0E98                     	;# 
   343  0E99                     	;# 
   344  0E9A                     	;# 
   345  0E9B                     	;# 
   346  0E9C                     	;# 
   347  0E9D                     	;# 
   348  0E9E                     	;# 
   349  0E9F                     	;# 
   350  0FE4                     	;# 
   351  0FE5                     	;# 
   352  0FE6                     	;# 
   353  0FE7                     	;# 
   354  0FE8                     	;# 
   355  0FE9                     	;# 
   356  0FEA                     	;# 
   357  0FEB                     	;# 
   358  0FED                     	;# 
   359  0FEE                     	;# 
   360  0FEF                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  008C                     	;# 
   388  008D                     	;# 
   389  008E                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011D                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  018E                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0194                     	;# 
   426  0195                     	;# 
   427  0196                     	;# 
   428  0197                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  020C                     	;# 
   438  020D                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0391                     	;# 
   455  0392                     	;# 
   456  0393                     	;# 
   457  0394                     	;# 
   458  0395                     	;# 
   459  0396                     	;# 
   460  039A                     	;# 
   461  039B                     	;# 
   462  0611                     	;# 
   463  0612                     	;# 
   464  0613                     	;# 
   465  0613                     	;# 
   466  0614                     	;# 
   467  0615                     	;# 
   468  0616                     	;# 
   469  0616                     	;# 
   470  0691                     	;# 
   471  0692                     	;# 
   472  0693                     	;# 
   473  0694                     	;# 
   474  0695                     	;# 
   475  0E8E                     	;# 
   476  0E8F                     	;# 
   477  0E90                     	;# 
   478  0E91                     	;# 
   479  0E92                     	;# 
   480  0E93                     	;# 
   481  0E94                     	;# 
   482  0E94                     	;# 
   483  0E95                     	;# 
   484  0E96                     	;# 
   485  0E97                     	;# 
   486  0E98                     	;# 
   487  0E99                     	;# 
   488  0E9A                     	;# 
   489  0E9B                     	;# 
   490  0E9C                     	;# 
   491  0E9D                     	;# 
   492  0E9E                     	;# 
   493  0E9F                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  0011                     	;# 
   521  0012                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001B                     	;# 
   530  001C                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009A                     	;# 
   542  009B                     	;# 
   543  009B                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  009F                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  0111                     	;# 
   552  0112                     	;# 
   553  0113                     	;# 
   554  0114                     	;# 
   555  0115                     	;# 
   556  0116                     	;# 
   557  0117                     	;# 
   558  0118                     	;# 
   559  0119                     	;# 
   560  011D                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  0191                     	;# 
   565  0191                     	;# 
   566  0192                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0194                     	;# 
   570  0195                     	;# 
   571  0196                     	;# 
   572  0197                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019E                     	;# 
   580  019F                     	;# 
   581  020C                     	;# 
   582  020D                     	;# 
   583  0211                     	;# 
   584  0211                     	;# 
   585  0212                     	;# 
   586  0212                     	;# 
   587  0213                     	;# 
   588  0213                     	;# 
   589  0214                     	;# 
   590  0214                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0216                     	;# 
   595  0216                     	;# 
   596  0217                     	;# 
   597  0217                     	;# 
   598  0391                     	;# 
   599  0392                     	;# 
   600  0393                     	;# 
   601  0394                     	;# 
   602  0395                     	;# 
   603  0396                     	;# 
   604  039A                     	;# 
   605  039B                     	;# 
   606  0611                     	;# 
   607  0612                     	;# 
   608  0613                     	;# 
   609  0613                     	;# 
   610  0614                     	;# 
   611  0615                     	;# 
   612  0616                     	;# 
   613  0616                     	;# 
   614  0691                     	;# 
   615  0692                     	;# 
   616  0693                     	;# 
   617  0694                     	;# 
   618  0695                     	;# 
   619  0E8E                     	;# 
   620  0E8F                     	;# 
   621  0E90                     	;# 
   622  0E91                     	;# 
   623  0E92                     	;# 
   624  0E93                     	;# 
   625  0E94                     	;# 
   626  0E94                     	;# 
   627  0E95                     	;# 
   628  0E96                     	;# 
   629  0E97                     	;# 
   630  0E98                     	;# 
   631  0E99                     	;# 
   632  0E9A                     	;# 
   633  0E9B                     	;# 
   634  0E9C                     	;# 
   635  0E9D                     	;# 
   636  0E9E                     	;# 
   637  0E9F                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  010C                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0117                     	;# 
   702  0118                     	;# 
   703  0119                     	;# 
   704  011D                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0194                     	;# 
   714  0195                     	;# 
   715  0196                     	;# 
   716  0197                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020D                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0391                     	;# 
   743  0392                     	;# 
   744  0393                     	;# 
   745  0394                     	;# 
   746  0395                     	;# 
   747  0396                     	;# 
   748  039A                     	;# 
   749  039B                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0613                     	;# 
   754  0614                     	;# 
   755  0615                     	;# 
   756  0616                     	;# 
   757  0616                     	;# 
   758  0691                     	;# 
   759  0692                     	;# 
   760  0693                     	;# 
   761  0694                     	;# 
   762  0695                     	;# 
   763  0E8E                     	;# 
   764  0E8F                     	;# 
   765  0E90                     	;# 
   766  0E91                     	;# 
   767  0E92                     	;# 
   768  0E93                     	;# 
   769  0E94                     	;# 
   770  0E94                     	;# 
   771  0E95                     	;# 
   772  0E96                     	;# 
   773  0E97                     	;# 
   774  0E98                     	;# 
   775  0E99                     	;# 
   776  0E9A                     	;# 
   777  0E9B                     	;# 
   778  0E9C                     	;# 
   779  0E9D                     	;# 
   780  0E9E                     	;# 
   781  0E9F                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0008                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  0011                     	;# 
   809  0012                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  001A                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  008C                     	;# 
   820  008D                     	;# 
   821  008E                     	;# 
   822  0091                     	;# 
   823  0092                     	;# 
   824  0095                     	;# 
   825  0096                     	;# 
   826  0097                     	;# 
   827  0098                     	;# 
   828  0099                     	;# 
   829  009A                     	;# 
   830  009B                     	;# 
   831  009B                     	;# 
   832  009C                     	;# 
   833  009D                     	;# 
   834  009E                     	;# 
   835  009F                     	;# 
   836  010C                     	;# 
   837  010D                     	;# 
   838  010E                     	;# 
   839  0111                     	;# 
   840  0112                     	;# 
   841  0113                     	;# 
   842  0114                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  011D                     	;# 
   849  018C                     	;# 
   850  018D                     	;# 
   851  018E                     	;# 
   852  0191                     	;# 
   853  0191                     	;# 
   854  0192                     	;# 
   855  0193                     	;# 
   856  0193                     	;# 
   857  0194                     	;# 
   858  0195                     	;# 
   859  0196                     	;# 
   860  0197                     	;# 
   861  0199                     	;# 
   862  019A                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  019D                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  020C                     	;# 
   870  020D                     	;# 
   871  0211                     	;# 
   872  0211                     	;# 
   873  0212                     	;# 
   874  0212                     	;# 
   875  0213                     	;# 
   876  0213                     	;# 
   877  0214                     	;# 
   878  0214                     	;# 
   879  0215                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0216                     	;# 
   884  0217                     	;# 
   885  0217                     	;# 
   886  0391                     	;# 
   887  0392                     	;# 
   888  0393                     	;# 
   889  0394                     	;# 
   890  0395                     	;# 
   891  0396                     	;# 
   892  039A                     	;# 
   893  039B                     	;# 
   894  0611                     	;# 
   895  0612                     	;# 
   896  0613                     	;# 
   897  0613                     	;# 
   898  0614                     	;# 
   899  0615                     	;# 
   900  0616                     	;# 
   901  0616                     	;# 
   902  0691                     	;# 
   903  0692                     	;# 
   904  0693                     	;# 
   905  0694                     	;# 
   906  0695                     	;# 
   907  0E8E                     	;# 
   908  0E8F                     	;# 
   909  0E90                     	;# 
   910  0E91                     	;# 
   911  0E92                     	;# 
   912  0E93                     	;# 
   913  0E94                     	;# 
   914  0E94                     	;# 
   915  0E95                     	;# 
   916  0E96                     	;# 
   917  0E97                     	;# 
   918  0E98                     	;# 
   919  0E99                     	;# 
   920  0E9A                     	;# 
   921  0E9B                     	;# 
   922  0E9C                     	;# 
   923  0E9D                     	;# 
   924  0E9E                     	;# 
   925  0E9F                     	;# 
   926  0FE4                     	;# 
   927  0FE5                     	;# 
   928  0FE6                     	;# 
   929  0FE7                     	;# 
   930  0FE8                     	;# 
   931  0FE9                     	;# 
   932  0FEA                     	;# 
   933  0FEB                     	;# 
   934  0FED                     	;# 
   935  0FEE                     	;# 
   936  0FEF                     	;# 
   937  0000                     	;# 
   938  0001                     	;# 
   939  0002                     	;# 
   940  0003                     	;# 
   941  0004                     	;# 
   942  0005                     	;# 
   943  0006                     	;# 
   944  0007                     	;# 
   945  0008                     	;# 
   946  0009                     	;# 
   947  000A                     	;# 
   948  000B                     	;# 
   949  000C                     	;# 
   950  000D                     	;# 
   951  000E                     	;# 
   952  0011                     	;# 
   953  0012                     	;# 
   954  0015                     	;# 
   955  0016                     	;# 
   956  0016                     	;# 
   957  0017                     	;# 
   958  0018                     	;# 
   959  0019                     	;# 
   960  001A                     	;# 
   961  001B                     	;# 
   962  001C                     	;# 
   963  008C                     	;# 
   964  008D                     	;# 
   965  008E                     	;# 
   966  0091                     	;# 
   967  0092                     	;# 
   968  0095                     	;# 
   969  0096                     	;# 
   970  0097                     	;# 
   971  0098                     	;# 
   972  0099                     	;# 
   973  009A                     	;# 
   974  009B                     	;# 
   975  009B                     	;# 
   976  009C                     	;# 
   977  009D                     	;# 
   978  009E                     	;# 
   979  009F                     	;# 
   980  010C                     	;# 
   981  010D                     	;# 
   982  010E                     	;# 
   983  0111                     	;# 
   984  0112                     	;# 
   985  0113                     	;# 
   986  0114                     	;# 
   987  0115                     	;# 
   988  0116                     	;# 
   989  0117                     	;# 
   990  0118                     	;# 
   991  0119                     	;# 
   992  011D                     	;# 
   993  018C                     	;# 
   994  018D                     	;# 
   995  018E                     	;# 
   996  0191                     	;# 
   997  0191                     	;# 
   998  0192                     	;# 
   999  0193                     	;# 
  1000  0193                     	;# 
  1001  0194                     	;# 
  1002  0195                     	;# 
  1003  0196                     	;# 
  1004  0197                     	;# 
  1005  0199                     	;# 
  1006  019A                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019C                     	;# 
  1010  019D                     	;# 
  1011  019E                     	;# 
  1012  019F                     	;# 
  1013  020C                     	;# 
  1014  020D                     	;# 
  1015  0211                     	;# 
  1016  0211                     	;# 
  1017  0212                     	;# 
  1018  0212                     	;# 
  1019  0213                     	;# 
  1020  0213                     	;# 
  1021  0214                     	;# 
  1022  0214                     	;# 
  1023  0215                     	;# 
  1024  0215                     	;# 
  1025  0215                     	;# 
  1026  0216                     	;# 
  1027  0216                     	;# 
  1028  0217                     	;# 
  1029  0217                     	;# 
  1030  0391                     	;# 
  1031  0392                     	;# 
  1032  0393                     	;# 
  1033  0394                     	;# 
  1034  0395                     	;# 
  1035  0396                     	;# 
  1036  039A                     	;# 
  1037  039B                     	;# 
  1038  0611                     	;# 
  1039  0612                     	;# 
  1040  0613                     	;# 
  1041  0613                     	;# 
  1042  0614                     	;# 
  1043  0615                     	;# 
  1044  0616                     	;# 
  1045  0616                     	;# 
  1046  0691                     	;# 
  1047  0692                     	;# 
  1048  0693                     	;# 
  1049  0694                     	;# 
  1050  0695                     	;# 
  1051  0E8E                     	;# 
  1052  0E8F                     	;# 
  1053  0E90                     	;# 
  1054  0E91                     	;# 
  1055  0E92                     	;# 
  1056  0E93                     	;# 
  1057  0E94                     	;# 
  1058  0E94                     	;# 
  1059  0E95                     	;# 
  1060  0E96                     	;# 
  1061  0E97                     	;# 
  1062  0E98                     	;# 
  1063  0E99                     	;# 
  1064  0E9A                     	;# 
  1065  0E9B                     	;# 
  1066  0E9C                     	;# 
  1067  0E9D                     	;# 
  1068  0E9E                     	;# 
  1069  0E9F                     	;# 
  1070  0FE4                     	;# 
  1071  0FE5                     	;# 
  1072  0FE6                     	;# 
  1073  0FE7                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEF                     	;# 
  1081  0000                     	;# 
  1082  0001                     	;# 
  1083  0002                     	;# 
  1084  0003                     	;# 
  1085  0004                     	;# 
  1086  0005                     	;# 
  1087  0006                     	;# 
  1088  0007                     	;# 
  1089  0008                     	;# 
  1090  0009                     	;# 
  1091  000A                     	;# 
  1092  000B                     	;# 
  1093  000C                     	;# 
  1094  000D                     	;# 
  1095  000E                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0015                     	;# 
  1099  0016                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001C                     	;# 
  1107  008C                     	;# 
  1108  008D                     	;# 
  1109  008E                     	;# 
  1110  0091                     	;# 
  1111  0092                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009B                     	;# 
  1120  009C                     	;# 
  1121  009D                     	;# 
  1122  009E                     	;# 
  1123  009F                     	;# 
  1124  010C                     	;# 
  1125  010D                     	;# 
  1126  010E                     	;# 
  1127  0111                     	;# 
  1128  0112                     	;# 
  1129  0113                     	;# 
  1130  0114                     	;# 
  1131  0115                     	;# 
  1132  0116                     	;# 
  1133  0117                     	;# 
  1134  0118                     	;# 
  1135  0119                     	;# 
  1136  011D                     	;# 
  1137  018C                     	;# 
  1138  018D                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0197                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019D                     	;# 
  1155  019E                     	;# 
  1156  019F                     	;# 
  1157  020C                     	;# 
  1158  020D                     	;# 
  1159  0211                     	;# 
  1160  0211                     	;# 
  1161  0212                     	;# 
  1162  0212                     	;# 
  1163  0213                     	;# 
  1164  0213                     	;# 
  1165  0214                     	;# 
  1166  0214                     	;# 
  1167  0215                     	;# 
  1168  0215                     	;# 
  1169  0215                     	;# 
  1170  0216                     	;# 
  1171  0216                     	;# 
  1172  0217                     	;# 
  1173  0217                     	;# 
  1174  0391                     	;# 
  1175  0392                     	;# 
  1176  0393                     	;# 
  1177  0394                     	;# 
  1178  0395                     	;# 
  1179  0396                     	;# 
  1180  039A                     	;# 
  1181  039B                     	;# 
  1182  0611                     	;# 
  1183  0612                     	;# 
  1184  0613                     	;# 
  1185  0613                     	;# 
  1186  0614                     	;# 
  1187  0615                     	;# 
  1188  0616                     	;# 
  1189  0616                     	;# 
  1190  0691                     	;# 
  1191  0692                     	;# 
  1192  0693                     	;# 
  1193  0694                     	;# 
  1194  0695                     	;# 
  1195  0E8E                     	;# 
  1196  0E8F                     	;# 
  1197  0E90                     	;# 
  1198  0E91                     	;# 
  1199  0E92                     	;# 
  1200  0E93                     	;# 
  1201  0E94                     	;# 
  1202  0E94                     	;# 
  1203  0E95                     	;# 
  1204  0E96                     	;# 
  1205  0E97                     	;# 
  1206  0E98                     	;# 
  1207  0E99                     	;# 
  1208  0E9A                     	;# 
  1209  0E9B                     	;# 
  1210  0E9C                     	;# 
  1211  0E9D                     	;# 
  1212  0E9E                     	;# 
  1213  0E9F                     	;# 
  1214  0FE4                     	;# 
  1215  0FE5                     	;# 
  1216  0FE6                     	;# 
  1217  0FE7                     	;# 
  1218  0FE8                     	;# 
  1219  0FE9                     	;# 
  1220  0FEA                     	;# 
  1221  0FEB                     	;# 
  1222  0FED                     	;# 
  1223  0FEE                     	;# 
  1224  0FEF                     	;# 
  1225  0000                     	;# 
  1226  0001                     	;# 
  1227  0002                     	;# 
  1228  0003                     	;# 
  1229  0004                     	;# 
  1230  0005                     	;# 
  1231  0006                     	;# 
  1232  0007                     	;# 
  1233  0008                     	;# 
  1234  0009                     	;# 
  1235  000A                     	;# 
  1236  000B                     	;# 
  1237  000C                     	;# 
  1238  000D                     	;# 
  1239  000E                     	;# 
  1240  0011                     	;# 
  1241  0012                     	;# 
  1242  0015                     	;# 
  1243  0016                     	;# 
  1244  0016                     	;# 
  1245  0017                     	;# 
  1246  0018                     	;# 
  1247  0019                     	;# 
  1248  001A                     	;# 
  1249  001B                     	;# 
  1250  001C                     	;# 
  1251  008C                     	;# 
  1252  008D                     	;# 
  1253  008E                     	;# 
  1254  0091                     	;# 
  1255  0092                     	;# 
  1256  0095                     	;# 
  1257  0096                     	;# 
  1258  0097                     	;# 
  1259  0098                     	;# 
  1260  0099                     	;# 
  1261  009A                     	;# 
  1262  009B                     	;# 
  1263  009B                     	;# 
  1264  009C                     	;# 
  1265  009D                     	;# 
  1266  009E                     	;# 
  1267  009F                     	;# 
  1268  010C                     	;# 
  1269  010D                     	;# 
  1270  010E                     	;# 
  1271  0111                     	;# 
  1272  0112                     	;# 
  1273  0113                     	;# 
  1274  0114                     	;# 
  1275  0115                     	;# 
  1276  0116                     	;# 
  1277  0117                     	;# 
  1278  0118                     	;# 
  1279  0119                     	;# 
  1280  011D                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  018E                     	;# 
  1284  0191                     	;# 
  1285  0191                     	;# 
  1286  0192                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0197                     	;# 
  1293  0199                     	;# 
  1294  019A                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019C                     	;# 
  1298  019D                     	;# 
  1299  019E                     	;# 
  1300  019F                     	;# 
  1301  020C                     	;# 
  1302  020D                     	;# 
  1303  0211                     	;# 
  1304  0211                     	;# 
  1305  0212                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0213                     	;# 
  1309  0214                     	;# 
  1310  0214                     	;# 
  1311  0215                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0216                     	;# 
  1315  0216                     	;# 
  1316  0217                     	;# 
  1317  0217                     	;# 
  1318  0391                     	;# 
  1319  0392                     	;# 
  1320  0393                     	;# 
  1321  0394                     	;# 
  1322  0395                     	;# 
  1323  0396                     	;# 
  1324  039A                     	;# 
  1325  039B                     	;# 
  1326  0611                     	;# 
  1327  0612                     	;# 
  1328  0613                     	;# 
  1329  0613                     	;# 
  1330  0614                     	;# 
  1331  0615                     	;# 
  1332  0616                     	;# 
  1333  0616                     	;# 
  1334  0691                     	;# 
  1335  0692                     	;# 
  1336  0693                     	;# 
  1337  0694                     	;# 
  1338  0695                     	;# 
  1339  0E8E                     	;# 
  1340  0E8F                     	;# 
  1341  0E90                     	;# 
  1342  0E91                     	;# 
  1343  0E92                     	;# 
  1344  0E93                     	;# 
  1345  0E94                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E96                     	;# 
  1349  0E97                     	;# 
  1350  0E98                     	;# 
  1351  0E99                     	;# 
  1352  0E9A                     	;# 
  1353  0E9B                     	;# 
  1354  0E9C                     	;# 
  1355  0E9D                     	;# 
  1356  0E9E                     	;# 
  1357  0E9F                     	;# 
  1358  0FE4                     	;# 
  1359  0FE5                     	;# 
  1360  0FE6                     	;# 
  1361  0FE7                     	;# 
  1362  0FE8                     	;# 
  1363  0FE9                     	;# 
  1364  0FEA                     	;# 
  1365  0FEB                     	;# 
  1366  0FED                     	;# 
  1367  0FEE                     	;# 
  1368  0FEF                     	;# 
  1369  0000                     	;# 
  1370  0001                     	;# 
  1371  0002                     	;# 
  1372  0003                     	;# 
  1373  0004                     	;# 
  1374  0005                     	;# 
  1375  0006                     	;# 
  1376  0007                     	;# 
  1377  0008                     	;# 
  1378  0009                     	;# 
  1379  000A                     	;# 
  1380  000B                     	;# 
  1381  000C                     	;# 
  1382  000D                     	;# 
  1383  000E                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0015                     	;# 
  1387  0016                     	;# 
  1388  0016                     	;# 
  1389  0017                     	;# 
  1390  0018                     	;# 
  1391  0019                     	;# 
  1392  001A                     	;# 
  1393  001B                     	;# 
  1394  001C                     	;# 
  1395  008C                     	;# 
  1396  008D                     	;# 
  1397  008E                     	;# 
  1398  0091                     	;# 
  1399  0092                     	;# 
  1400  0095                     	;# 
  1401  0096                     	;# 
  1402  0097                     	;# 
  1403  0098                     	;# 
  1404  0099                     	;# 
  1405  009A                     	;# 
  1406  009B                     	;# 
  1407  009B                     	;# 
  1408  009C                     	;# 
  1409  009D                     	;# 
  1410  009E                     	;# 
  1411  009F                     	;# 
  1412  010C                     	;# 
  1413  010D                     	;# 
  1414  010E                     	;# 
  1415  0111                     	;# 
  1416  0112                     	;# 
  1417  0113                     	;# 
  1418  0114                     	;# 
  1419  0115                     	;# 
  1420  0116                     	;# 
  1421  0117                     	;# 
  1422  0118                     	;# 
  1423  0119                     	;# 
  1424  011D                     	;# 
  1425  018C                     	;# 
  1426  018D                     	;# 
  1427  018E                     	;# 
  1428  0191                     	;# 
  1429  0191                     	;# 
  1430  0192                     	;# 
  1431  0193                     	;# 
  1432  0193                     	;# 
  1433  0194                     	;# 
  1434  0195                     	;# 
  1435  0196                     	;# 
  1436  0197                     	;# 
  1437  0199                     	;# 
  1438  019A                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020C                     	;# 
  1446  020D                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0391                     	;# 
  1463  0392                     	;# 
  1464  0393                     	;# 
  1465  0394                     	;# 
  1466  0395                     	;# 
  1467  0396                     	;# 
  1468  039A                     	;# 
  1469  039B                     	;# 
  1470  0611                     	;# 
  1471  0612                     	;# 
  1472  0613                     	;# 
  1473  0613                     	;# 
  1474  0614                     	;# 
  1475  0615                     	;# 
  1476  0616                     	;# 
  1477  0616                     	;# 
  1478  0691                     	;# 
  1479  0692                     	;# 
  1480  0693                     	;# 
  1481  0694                     	;# 
  1482  0695                     	;# 
  1483  0E8E                     	;# 
  1484  0E8F                     	;# 
  1485  0E90                     	;# 
  1486  0E91                     	;# 
  1487  0E92                     	;# 
  1488  0E93                     	;# 
  1489  0E94                     	;# 
  1490  0E94                     	;# 
  1491  0E95                     	;# 
  1492  0E96                     	;# 
  1493  0E97                     	;# 
  1494  0E98                     	;# 
  1495  0E99                     	;# 
  1496  0E9A                     	;# 
  1497  0E9B                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0E9F                     	;# 
  1502  0FE4                     	;# 
  1503  0FE5                     	;# 
  1504  0FE6                     	;# 
  1505  0FE7                     	;# 
  1506  0FE8                     	;# 
  1507  0FE9                     	;# 
  1508  0FEA                     	;# 
  1509  0FEB                     	;# 
  1510  0FED                     	;# 
  1511  0FEE                     	;# 
  1512  0FEF                     	;# 
  1513                           
  1514                           	psect	idataBANK4
  1515  08F5                     __pidataBANK4:	
  1516                           
  1517                           ;initializer for _buttonMessage
  1518  08F5  3442               	retlw	66
  1519  08F6  3475               	retlw	117
  1520  08F7  3474               	retlw	116
  1521  08F8  3474               	retlw	116
  1522  08F9  346F               	retlw	111
  1523  08FA  346E               	retlw	110
  1524  08FB  3420               	retlw	32
  1525  08FC  3470               	retlw	112
  1526  08FD  3472               	retlw	114
  1527  08FE  3465               	retlw	101
  1528  08FF  3473               	retlw	115
  1529  0900  3473               	retlw	115
  1530  0901  3465               	retlw	101
  1531  0902  3464               	retlw	100
  1532  0903  342E               	retlw	46
  1533  0904  340D               	retlw	13
  1534  0905  340A               	retlw	10
  1535  0906  3400               	retlw	0
  1536                           
  1537                           	psect	strings
  1538  0306                     __pstrings:	
  1539  0306                     __stringtab:	
  1540  0306  3400               	retlw	0
  1541  0307                     __end_of__stringtab:	
  1542  0307                     _USB_SD_Ptr:	
  1543  0307  34C8               	retlw	(_sd000| (0+32768))& (0+255)
  1544  0308  344E               	retlw	(_sd001| (0+32768))& (0+255)
  1545  0309  3482               	retlw	(_sd002| (0+32768))& (0+255)
  1546  030A                     __end_of_USB_SD_Ptr:	
  1547  030A                     _USB_CD_Ptr:	
  1548  030A  340B               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1549  030B                     __end_of_USB_CD_Ptr:	
  1550  030B                     _configDescriptor1:	
  1551  030B  3409               	retlw	9
  1552  030C  3402               	retlw	2
  1553  030D  3443               	retlw	67
  1554  030E  3400               	retlw	0
  1555  030F  3402               	retlw	2
  1556  0310  3401               	retlw	1
  1557  0311  3400               	retlw	0
  1558  0312  34C0               	retlw	192
  1559  0313  3432               	retlw	50
  1560  0314  3409               	retlw	9
  1561  0315  3404               	retlw	4
  1562  0316  3400               	retlw	0
  1563  0317  3400               	retlw	0
  1564  0318  3401               	retlw	1
  1565  0319  3402               	retlw	2
  1566  031A  3402               	retlw	2
  1567  031B  3401               	retlw	1
  1568  031C  3400               	retlw	0
  1569  031D  3405               	retlw	5
  1570  031E  3424               	retlw	36
  1571  031F  3400               	retlw	0
  1572  0320  3410               	retlw	16
  1573  0321  3401               	retlw	1
  1574  0322  3404               	retlw	4
  1575  0323  3424               	retlw	36
  1576  0324  3402               	retlw	2
  1577  0325  3402               	retlw	2
  1578  0326  3405               	retlw	5
  1579  0327  3424               	retlw	36
  1580  0328  3406               	retlw	6
  1581  0329  3400               	retlw	0
  1582  032A  3401               	retlw	1
  1583  032B  3405               	retlw	5
  1584  032C  3424               	retlw	36
  1585  032D  3401               	retlw	1
  1586  032E  3400               	retlw	0
  1587  032F  3401               	retlw	1
  1588  0330  3407               	retlw	7
  1589  0331  3405               	retlw	5
  1590  0332  3481               	retlw	129
  1591  0333  3403               	retlw	3
  1592  0334  3408               	retlw	8
  1593  0335  3400               	retlw	0
  1594  0336  3402               	retlw	2
  1595  0337  3409               	retlw	9
  1596  0338  3404               	retlw	4
  1597  0339  3401               	retlw	1
  1598  033A  3400               	retlw	0
  1599  033B  3402               	retlw	2
  1600  033C  340A               	retlw	10
  1601  033D  3400               	retlw	0
  1602  033E  3400               	retlw	0
  1603  033F  3400               	retlw	0
  1604  0340  3407               	retlw	7
  1605  0341  3405               	retlw	5
  1606  0342  3402               	retlw	2
  1607  0343  3402               	retlw	2
  1608  0344  3440               	retlw	64
  1609  0345  3400               	retlw	0
  1610  0346  3400               	retlw	0
  1611  0347  3407               	retlw	7
  1612  0348  3405               	retlw	5
  1613  0349  3482               	retlw	130
  1614  034A  3402               	retlw	2
  1615  034B  3440               	retlw	64
  1616  034C  3400               	retlw	0
  1617  034D  3400               	retlw	0
  1618  034E                     __end_of_configDescriptor1:	
  1619  034E                     _sd001:	
  1620  034E  3434               	retlw	52
  1621  034F  3403               	retlw	3
  1622  0350  344D               	retlw	77
  1623  0351  3400               	retlw	0
  1624  0352  3469               	retlw	105
  1625  0353  3400               	retlw	0
  1626  0354  3463               	retlw	99
  1627  0355  3400               	retlw	0
  1628  0356  3472               	retlw	114
  1629  0357  3400               	retlw	0
  1630  0358  346F               	retlw	111
  1631  0359  3400               	retlw	0
  1632  035A  3463               	retlw	99
  1633  035B  3400               	retlw	0
  1634  035C  3468               	retlw	104
  1635  035D  3400               	retlw	0
  1636  035E  3469               	retlw	105
  1637  035F  3400               	retlw	0
  1638  0360  3470               	retlw	112
  1639  0361  3400               	retlw	0
  1640  0362  3420               	retlw	32
  1641  0363  3400               	retlw	0
  1642  0364  3454               	retlw	84
  1643  0365  3400               	retlw	0
  1644  0366  3465               	retlw	101
  1645  0367  3400               	retlw	0
  1646  0368  3463               	retlw	99
  1647  0369  3400               	retlw	0
  1648  036A  3468               	retlw	104
  1649  036B  3400               	retlw	0
  1650  036C  346E               	retlw	110
  1651  036D  3400               	retlw	0
  1652  036E  346F               	retlw	111
  1653  036F  3400               	retlw	0
  1654  0370  346C               	retlw	108
  1655  0371  3400               	retlw	0
  1656  0372  346F               	retlw	111
  1657  0373  3400               	retlw	0
  1658  0374  3467               	retlw	103
  1659  0375  3400               	retlw	0
  1660  0376  3479               	retlw	121
  1661  0377  3400               	retlw	0
  1662  0378  3420               	retlw	32
  1663  0379  3400               	retlw	0
  1664  037A  3449               	retlw	73
  1665  037B  3400               	retlw	0
  1666  037C  346E               	retlw	110
  1667  037D  3400               	retlw	0
  1668  037E  3463               	retlw	99
  1669  037F  3400               	retlw	0
  1670  0380  342E               	retlw	46
  1671  0381  3400               	retlw	0
  1672  0382                     __end_of_sd001:	
  1673  0382                     _sd002:	
  1674  0382  3434               	retlw	52
  1675  0383  3403               	retlw	3
  1676  0384  3443               	retlw	67
  1677  0385  3400               	retlw	0
  1678  0386  3444               	retlw	68
  1679  0387  3400               	retlw	0
  1680  0388  3443               	retlw	67
  1681  0389  3400               	retlw	0
  1682  038A  3420               	retlw	32
  1683  038B  3400               	retlw	0
  1684  038C  3452               	retlw	82
  1685  038D  3400               	retlw	0
  1686  038E  3453               	retlw	83
  1687  038F  3400               	retlw	0
  1688  0390  342D               	retlw	45
  1689  0391  3400               	retlw	0
  1690  0392  3432               	retlw	50
  1691  0393  3400               	retlw	0
  1692  0394  3433               	retlw	51
  1693  0395  3400               	retlw	0
  1694  0396  3432               	retlw	50
  1695  0397  3400               	retlw	0
  1696  0398  3420               	retlw	32
  1697  0399  3400               	retlw	0
  1698  039A  3445               	retlw	69
  1699  039B  3400               	retlw	0
  1700  039C  346D               	retlw	109
  1701  039D  3400               	retlw	0
  1702  039E  3475               	retlw	117
  1703  039F  3400               	retlw	0
  1704  03A0  346C               	retlw	108
  1705  03A1  3400               	retlw	0
  1706  03A2  3461               	retlw	97
  1707  03A3  3400               	retlw	0
  1708  03A4  3474               	retlw	116
  1709  03A5  3400               	retlw	0
  1710  03A6  3469               	retlw	105
  1711  03A7  3400               	retlw	0
  1712  03A8  346F               	retlw	111
  1713  03A9  3400               	retlw	0
  1714  03AA  346E               	retlw	110
  1715  03AB  3400               	retlw	0
  1716  03AC  3420               	retlw	32
  1717  03AD  3400               	retlw	0
  1718  03AE  3444               	retlw	68
  1719  03AF  3400               	retlw	0
  1720  03B0  3465               	retlw	101
  1721  03B1  3400               	retlw	0
  1722  03B2  346D               	retlw	109
  1723  03B3  3400               	retlw	0
  1724  03B4  346F               	retlw	111
  1725  03B5  3400               	retlw	0
  1726  03B6                     __end_of_sd002:	
  1727  03B6                     _device_dsc:	
  1728  03B6  3412               	retlw	18
  1729  03B7  3401               	retlw	1
  1730  03B8  3400               	retlw	0
  1731  03B9  3402               	retlw	2
  1732  03BA  3402               	retlw	2
  1733  03BB  3400               	retlw	0
  1734  03BC  3400               	retlw	0
  1735  03BD  3408               	retlw	8
  1736  03BE  34D8               	retlw	216
  1737  03BF  3404               	retlw	4
  1738  03C0  340A               	retlw	10
  1739  03C1  3400               	retlw	0
  1740  03C2  3400               	retlw	0
  1741  03C3  3401               	retlw	1
  1742  03C4  3401               	retlw	1
  1743  03C5  3402               	retlw	2
  1744  03C6  3400               	retlw	0
  1745  03C7  3401               	retlw	1
  1746  03C8                     __end_of_device_dsc:	
  1747  03C8                     _sd000:	
  1748  03C8  3404               	retlw	4
  1749  03C9  3403               	retlw	3
  1750  03CA  3409               	retlw	9
  1751  03CB  3404               	retlw	4
  1752  03CC                     __end_of_sd000:	
  1753  000B                     _INTCONbits	set	11
  1754  0012                     _PIR2bits	set	18
  1755  000C                     _PORTAbits	set	12
  1756  009D                     _ADCON0	set	157
  1757  009D                     _ADCON0bits	set	157
  1758  009E                     _ADCON1	set	158
  1759  009F                     _ADCON2	set	159
  1760  009C                     _ADRESH	set	156
  1761  009B                     _ADRESL	set	155
  1762  0092                     _PIE2bits	set	146
  1763  008D                     _TRISBbits	set	141
  1764  008E                     _TRISCbits	set	142
  1765  010E                     _LATCbits	set	270
  1766  018D                     _ANSELBbits	set	397
  1767  0E96                     _UADDR	set	3734
  1768  0E91                     _UCFG	set	3729
  1769  0E8E                     _UCON	set	3726
  1770  0E8E                     _UCONbits	set	3726
  1771  0E97                     _UEIE	set	3735
  1772  0E93                     _UEIR	set	3731
  1773  0E98                     _UEP0bits	set	3736
  1774  0E92                     _UIE	set	3730
  1775  0E92                     _UIEbits	set	3730
  1776  0E90                     _UIR	set	3728
  1777  0E90                     _UIRbits	set	3728
  1778  0E8F                     _USTAT	set	3727
  1779  0E98                     _UEP0	set	3736
  1780  0E99                     _UEP1	set	3737
  1781                           
  1782                           ; #config settings
  1783  0000                     
  1784                           	psect	cinit
  1785  0012                     start_initialization:	
  1786  0012                     __initialization:	
  1787                           
  1788                           ; Clear objects allocated to BANK1
  1789  0012  30E8               	movlw	low __pbssBANK1
  1790  0013  0084               	movwf	4
  1791  0014  3000               	movlw	high __pbssBANK1
  1792  0015  0085               	movwf	5
  1793  0016  3007               	movlw	7
  1794  0017  3187  27F9  3180   	fcall	clear_ram0
  1795                           
  1796                           ; Clear objects allocated to BANK3
  1797  001A  30A0               	movlw	low __pbssBANK3
  1798  001B  0084               	movwf	4
  1799  001C  3001               	movlw	high __pbssBANK3
  1800  001D  0085               	movwf	5
  1801  001E  304F               	movlw	79
  1802  001F  3187  27F9  3180   	fcall	clear_ram0
  1803                           
  1804                           ; Clear objects allocated to BANK5
  1805  0022  30A0               	movlw	low __pbssBANK5
  1806  0023  0084               	movwf	4
  1807  0024  3002               	movlw	high __pbssBANK5
  1808  0025  0085               	movwf	5
  1809  0026  3040               	movlw	64
  1810  0027  3187  27F9  3180   	fcall	clear_ram0
  1811                           
  1812                           ; Clear objects allocated to BANK6
  1813  002A  3020               	movlw	low __pbssBANK6
  1814  002B  0084               	movwf	4
  1815  002C  3003               	movlw	high __pbssBANK6
  1816  002D  0085               	movwf	5
  1817  002E  3040               	movlw	64
  1818  002F  3187  27F9  3180   	fcall	clear_ram0
  1819                           
  1820                           ; Initialize objects allocated to BANK4
  1821  0032  30F5               	movlw	low __pidataBANK4
  1822  0033  0084               	movwf	4
  1823  0034  3088               	movlw	(high __pidataBANK4)| (0+128)
  1824  0035  0085               	movwf	5
  1825  0036  3020               	movlw	low __pdataBANK4
  1826  0037  0086               	movwf	6
  1827  0038  3002               	movlw	high __pdataBANK4
  1828  0039  0087               	movwf	7
  1829  003A  3012               	movlw	18
  1830  003B  3188  20E4         	fcall	init_ram
  1831  003D                     end_of_initialization:	
  1832                           ;End of C runtime variable initialization code
  1833                           
  1834  003D                     __end_of__initialization:	
  1835  003D  0020               	movlb	0
  1836  003E  3189  291A         	ljmp	_main	;jump to C main() function
  1837                           
  1838                           	psect	bssBANK1
  1839  00E8                     __pbssBANK1:	
  1840  00E8                     _pBDTEntryEP0OutCurrent:	
  1841  00E8                     	ds	1
  1842  00E9                     _pBDTEntryEP0OutNext:	
  1843  00E9                     	ds	1
  1844  00EA                     _inPipes:	
  1845  00EA                     	ds	5
  1846                           
  1847                           	psect	bssBANK3
  1848  01A0                     __pbssBANK3:	
  1849  01A0                     _cdc_notice:	
  1850  01A0                     	ds	10
  1851  01AA                     _outPipes:	
  1852  01AA                     	ds	6
  1853  01B0                     _BaudRateGen:	
  1854  01B0                     	ds	4
  1855  01B4                     _ep_data_in:	
  1856  01B4                     	ds	3
  1857  01B7                     _ep_data_out:	
  1858  01B7                     	ds	3
  1859  01BA                     _pBDTEntryIn:	
  1860  01BA                     	ds	3
  1861  01BD                     _pBDTEntryOut:	
  1862  01BD                     	ds	3
  1863  01C0                     APP_LEDUpdateUSBStatus@ledCount:	
  1864  01C0                     	ds	2
  1865  01C2                     _pCDCDst:	
  1866  01C2                     	ds	2
  1867  01C4                     _pCDCSrc:	
  1868  01C4                     	ds	2
  1869  01C6                     _BothEP0OutUOWNsSet:	
  1870  01C6                     	ds	1
  1871  01C7                     _CDCDataInHandle:	
  1872  01C7                     	ds	1
  1873  01C8                     _CDCDataOutHandle:	
  1874  01C8                     	ds	1
  1875  01C9                     _RemoteWakeup:	
  1876  01C9                     	ds	1
  1877  01CA                     _USBBusIsSuspended:	
  1878  01CA                     	ds	1
  1879  01CB                     _USBDeferINDataStagePackets:	
  1880  01CB                     	ds	1
  1881  01CC                     _USBDeferOUTDataStagePackets:	
  1882  01CC                     	ds	1
  1883  01CD                     _USBDeferStatusStagePacket:	
  1884  01CD                     	ds	1
  1885  01CE                     _USBDeviceState:	
  1886  01CE                     	ds	1
  1887  01CF                     _USBStatusStageEnabledFlag1:	
  1888  01CF                     	ds	1
  1889  01D0                     _USBStatusStageEnabledFlag2:	
  1890  01D0                     	ds	1
  1891  01D1                     _USBStatusStageTimeoutCounter:	
  1892  01D1                     	ds	1
  1893  01D2                     _buttonPressed:	
  1894  01D2                     	ds	1
  1895  01D3                     _cdc_mem_type:	
  1896  01D3                     	ds	1
  1897  01D4                     _cdc_rx_len:	
  1898  01D4                     	ds	1
  1899  01D5                     _cdc_trf_state:	
  1900  01D5                     	ds	1
  1901  01D6                     _cdc_tx_len:	
  1902  01D6                     	ds	1
  1903  01D7                     _controlTransferState:	
  1904  01D7                     	ds	1
  1905  01D8                     _control_signal_bitmap:	
  1906  01D8                     	ds	1
  1907  01D9                     _endpoint_number:	
  1908  01D9                     	ds	1
  1909  01DA                     _pDst:	
  1910  01DA                     	ds	1
  1911  01DB                     _shortPacketStatus:	
  1912  01DB                     	ds	1
  1913  01DC                     _dummy_encapsulated_cmd_response:	
  1914  01DC                     	ds	8
  1915  01E4                     _line_coding:	
  1916  01E4                     	ds	7
  1917  01EB                     _USBAlternateInterface:	
  1918  01EB                     	ds	2
  1919  01ED                     _USBActiveConfiguration:	
  1920  01ED                     	ds	1
  1921  01EE                     _USTATcopy:	
  1922  01EE                     	ds	1
  1923                           
  1924                           	psect	dataBANK4
  1925  0220                     __pdataBANK4:	
  1926  0220                     _buttonMessage:	
  1927  0220                     	ds	18
  1928                           
  1929                           	psect	bssBANK5
  1930  02A0                     __pbssBANK5:	
  1931  02A0                     _readBuffer:	
  1932  02A0                     	ds	64
  1933                           
  1934                           	psect	bssBANK6
  1935  0320                     __pbssBANK6:	
  1936  0320                     _writeBuffer:	
  1937  0320                     	ds	64
  1938                           
  1939                           	psect	clrtext
  1940  07F9                     clear_ram0:	
  1941                           ;	Called with FSR0 containing the base address, and
  1942                           ;	WREG with the size to clear
  1943                           
  1944  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1945  07FA                     clrloop0:	
  1946  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1947  07FB  3101               	addfsr 0,1
  1948  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1949  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
  1950  07FE  3400               	retlw	0	;all done for this memory range, return
  1951                           
  1952                           	psect	inittext
  1953  08E4                     init_ram:	
  1954  08E4  00FE               	movwf	126
  1955  08E5                     initloop:	
  1956  08E5  0012               	moviw fsr0++
  1957  08E6  001E               	movwi fsr1++
  1958  08E7  0BFE               	decfsz	126,f
  1959  08E8  28E5               	goto	initloop
  1960  08E9  3400               	retlw	0
  1961                           
  1962                           	psect	cstackBANK4
  1963  0232                     __pcstackBANK4:	
  1964  0232                     APP_DeviceCDCBasicDemoTasks@numBytesRead:	
  1965                           
  1966                           ; 1 bytes @ 0x0
  1967  0232                     	ds	1
  1968  0233                     APP_DeviceCDCBasicDemoTasks@i:	
  1969                           
  1970                           ; 1 bytes @ 0x1
  1971  0233                     	ds	1
  1972                           
  1973                           	psect	cstackBANK2
  1974  0160                     __pcstackBANK2:	
  1975  0160                     ??_LED_Enable:	
  1976  0160                     ??_BUTTON_Enable:	
  1977                           ; 0 bytes @ 0x0
  1978                           
  1979  0160                     ??_BUTTON_IsPressed:	
  1980                           ; 0 bytes @ 0x0
  1981                           
  1982  0160                     ??_putrsUSBUSART:	
  1983                           ; 0 bytes @ 0x0
  1984                           
  1985  0160                     ?_putUSBUSART:	
  1986                           ; 0 bytes @ 0x0
  1987                           
  1988  0160                     ??_USBDeviceInit:	
  1989                           ; 0 bytes @ 0x0
  1990                           
  1991  0160                     ??_USBDeviceAttach:	
  1992                           ; 0 bytes @ 0x0
  1993                           
  1994  0160                     ?_USBTransferOnePacket:	
  1995                           ; 0 bytes @ 0x0
  1996                           
  1997  0160                     BUTTON_IsPressed@button:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0160                     BUTTON_Enable@button:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0160                     LED_Enable@led:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0160                     USBTransferOnePacket@dir:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0160                     putUSBUSART@length:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012                           
  2013                           ; 1 bytes @ 0x0
  2014  0160                     	ds	1
  2015  0161                     ??_putUSBUSART:	
  2016  0161                     ??_SYSTEM_Initialize:	
  2017                           ; 0 bytes @ 0x1
  2018                           
  2019  0161                     SYSTEM_Initialize@state:	
  2020                           ; 0 bytes @ 0x1
  2021                           
  2022  0161                     putrsUSBUSART@pData:	
  2023                           ; 1 bytes @ 0x1
  2024                           
  2025  0161                     USBTransferOnePacket@data:	
  2026                           ; 1 bytes @ 0x1
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x1
  2030  0161                     	ds	1
  2031  0162                     putUSBUSART@data:	
  2032  0162                     putrsUSBUSART@data:	
  2033                           ; 1 bytes @ 0x2
  2034                           
  2035  0162                     USBDeviceInit@p:	
  2036                           ; 1 bytes @ 0x2
  2037                           
  2038                           
  2039                           ; 2 bytes @ 0x2
  2040  0162                     	ds	1
  2041  0163                     USBTransferOnePacket@len:	
  2042  0163                     putrsUSBUSART@len:	
  2043                           ; 1 bytes @ 0x3
  2044                           
  2045                           
  2046                           ; 1 bytes @ 0x3
  2047  0163                     	ds	1
  2048  0164                     ??_USBTransferOnePacket:	
  2049  0164                     USBDeviceInit@i_1189:	
  2050                           ; 0 bytes @ 0x4
  2051                           
  2052                           
  2053                           ; 1 bytes @ 0x4
  2054  0164                     	ds	1
  2055  0165                     USBDeviceInit@i:	
  2056                           
  2057                           ; 1 bytes @ 0x5
  2058  0165                     	ds	1
  2059  0166                     USBTransferOnePacket@ep:	
  2060                           
  2061                           ; 1 bytes @ 0x6
  2062  0166                     	ds	1
  2063  0167                     USBTransferOnePacket@handle:	
  2064                           
  2065                           ; 1 bytes @ 0x7
  2066  0167                     	ds	1
  2067  0168                     ??_CDCTxService:	
  2068  0168                     ?_getsUSBUSART:	
  2069                           ; 0 bytes @ 0x8
  2070                           
  2071  0168                     getsUSBUSART@len:	
  2072                           ; 1 bytes @ 0x8
  2073                           
  2074                           
  2075                           ; 1 bytes @ 0x8
  2076  0168                     	ds	1
  2077  0169                     ??_getsUSBUSART:	
  2078                           
  2079                           ; 0 bytes @ 0x9
  2080  0169                     	ds	1
  2081  016A                     _CDCTxService$2119:	
  2082                           
  2083                           ; 2 bytes @ 0xA
  2084  016A                     	ds	1
  2085  016B                     getsUSBUSART@buffer:	
  2086                           
  2087                           ; 1 bytes @ 0xB
  2088  016B                     	ds	1
  2089  016C                     CDCTxService@i:	
  2090  016C                     _getsUSBUSART$2071:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0xC
  2095  016C                     	ds	1
  2096  016D                     CDCTxService@byte_to_send:	
  2097                           
  2098                           ; 1 bytes @ 0xD
  2099  016D                     	ds	1
  2100  016E                     ??_APP_DeviceCDCBasicDemoTasks:	
  2101                           
  2102                           ; 0 bytes @ 0xE
  2103  016E                     	ds	2
  2104  0170                     ??_main:	
  2105                           
  2106                           	psect	cstackBANK1
  2107  00E0                     __pcstackBANK1:	
  2108                           ; 0 bytes @ 0x10
  2109                           
  2110  00E0                     ??_USBCtrlEPService:	
  2111                           
  2112                           ; 0 bytes @ 0x0
  2113  00E0                     	ds	3
  2114  00E3                     USBCtrlEPService@setup_cnt:	
  2115                           
  2116                           ; 1 bytes @ 0x3
  2117  00E3                     	ds	1
  2118  00E4                     ??_USBDeviceTasks:	
  2119                           
  2120                           ; 0 bytes @ 0x4
  2121  00E4                     	ds	2
  2122  00E6                     USBDeviceTasks@i:	
  2123                           
  2124                           ; 1 bytes @ 0x6
  2125  00E6                     	ds	1
  2126  00E7                     ??_SYS_InterruptHigh:	
  2127                           
  2128                           ; 0 bytes @ 0x7
  2129  00E7                     	ds	1
  2130                           
  2131                           	psect	cstackCOMMON
  2132  0070                     __pcstackCOMMON:	
  2133  0070                     ?_LED_Enable:	
  2134  0070                     ?_BUTTON_Enable:	
  2135                           ; 0 bytes @ 0x0
  2136                           
  2137  0070                     ?_USBDeviceTasks:	
  2138                           ; 0 bytes @ 0x0
  2139                           
  2140  0070                     ?_CDCInitEP:	
  2141                           ; 0 bytes @ 0x0
  2142                           
  2143  0070                     ?_putrsUSBUSART:	
  2144                           ; 0 bytes @ 0x0
  2145                           
  2146  0070                     ?_CDCTxService:	
  2147                           ; 0 bytes @ 0x0
  2148                           
  2149  0070                     ?_LED_Off:	
  2150                           ; 0 bytes @ 0x0
  2151                           
  2152  0070                     ??_LED_Off:	
  2153                           ; 0 bytes @ 0x0
  2154                           
  2155  0070                     ?_LED_On:	
  2156                           ; 0 bytes @ 0x0
  2157                           
  2158  0070                     ??_LED_On:	
  2159                           ; 0 bytes @ 0x0
  2160                           
  2161  0070                     ?_USBDeviceInit:	
  2162                           ; 0 bytes @ 0x0
  2163                           
  2164  0070                     ?_USBDeviceAttach:	
  2165                           ; 0 bytes @ 0x0
  2166                           
  2167  0070                     ?_USBCheckCDCRequest:	
  2168                           ; 0 bytes @ 0x0
  2169                           
  2170  0070                     ??_USBCheckCDCRequest:	
  2171                           ; 0 bytes @ 0x0
  2172                           
  2173  0070                     ?_USBWakeFromSuspend:	
  2174                           ; 0 bytes @ 0x0
  2175                           
  2176  0070                     ?_USBSuspend:	
  2177                           ; 0 bytes @ 0x0
  2178                           
  2179  0070                     ?_USBCtrlEPAllowStatusStage:	
  2180                           ; 0 bytes @ 0x0
  2181                           
  2182  0070                     ??_USBCtrlEPAllowStatusStage:	
  2183                           ; 0 bytes @ 0x0
  2184                           
  2185  0070                     ?_USBStallHandler:	
  2186                           ; 0 bytes @ 0x0
  2187                           
  2188  0070                     ??_USBStallHandler:	
  2189                           ; 0 bytes @ 0x0
  2190                           
  2191  0070                     ?_USBCtrlEPService:	
  2192                           ; 0 bytes @ 0x0
  2193                           
  2194  0070                     ?_USBConfigureEndpoint:	
  2195                           ; 0 bytes @ 0x0
  2196                           
  2197  0070                     ?_USBCtrlTrfTxService:	
  2198                           ; 0 bytes @ 0x0
  2199                           
  2200  0070                     ??_USBCtrlTrfTxService:	
  2201                           ; 0 bytes @ 0x0
  2202                           
  2203  0070                     ?_USBCtrlTrfSetupHandler:	
  2204                           ; 0 bytes @ 0x0
  2205                           
  2206  0070                     ?_USBCtrlTrfOutHandler:	
  2207                           ; 0 bytes @ 0x0
  2208                           
  2209  0070                     ?_USBCtrlTrfInHandler:	
  2210                           ; 0 bytes @ 0x0
  2211                           
  2212  0070                     ?_USBCheckStdRequest:	
  2213                           ; 0 bytes @ 0x0
  2214                           
  2215  0070                     ?_USBStdFeatureReqHandler:	
  2216                           ; 0 bytes @ 0x0
  2217                           
  2218  0070                     ?_SYSTEM_Initialize:	
  2219                           ; 0 bytes @ 0x0
  2220                           
  2221  0070                     ?_SYS_InterruptHigh:	
  2222                           ; 0 bytes @ 0x0
  2223                           
  2224  0070                     ?_APP_DeviceCDCBasicDemoInitialize:	
  2225                           ; 0 bytes @ 0x0
  2226                           
  2227  0070                     ?_APP_DeviceCDCBasicDemoTasks:	
  2228                           ; 0 bytes @ 0x0
  2229                           
  2230  0070                     ?_APP_LEDUpdateUSBStatus:	
  2231                           ; 0 bytes @ 0x0
  2232                           
  2233  0070                     ?_main:	
  2234                           ; 0 bytes @ 0x0
  2235                           
  2236  0070                     ?_USBCtrlEPAllowDataStage:	
  2237                           ; 0 bytes @ 0x0
  2238                           
  2239  0070                     ?_USBCtrlEPServiceComplete:	
  2240                           ; 0 bytes @ 0x0
  2241                           
  2242  0070                     ?_USBCtrlTrfRxService:	
  2243                           ; 0 bytes @ 0x0
  2244                           
  2245  0070                     ?_USBStdSetCfgHandler:	
  2246                           ; 0 bytes @ 0x0
  2247                           
  2248  0070                     ?_USBStdGetDscHandler:	
  2249                           ; 0 bytes @ 0x0
  2250                           
  2251  0070                     ??_USBStdGetDscHandler:	
  2252                           ; 0 bytes @ 0x0
  2253                           
  2254  0070                     ?_USBStdGetStatusHandler:	
  2255                           ; 0 bytes @ 0x0
  2256                           
  2257  0070                     ??_USBStdGetStatusHandler:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?i1_USBDeviceInit:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ??i1_USBDeviceInit:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_BUTTON_IsPressed:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?i1_USBTransferOnePacket:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0070                     ?_memset:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0070                     LED_On@led:	
  2276                           ; 2 bytes @ 0x0
  2277                           
  2278  0070                     LED_Off@led:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0070                     USBConfigureEndpoint@direction:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0070                     i1USBTransferOnePacket@dir:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     memset@p1:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290                           
  2291                           ; 2 bytes @ 0x0
  2292  0070                     	ds	1
  2293  0071                     ??_USBConfigureEndpoint:	
  2294  0071                     ??_APP_LEDUpdateUSBStatus:	
  2295                           ; 0 bytes @ 0x1
  2296                           
  2297  0071                     USBStdGetStatusHandler@p:	
  2298                           ; 0 bytes @ 0x1
  2299                           
  2300  0071                     i1USBTransferOnePacket@data:	
  2301                           ; 1 bytes @ 0x1
  2302                           
  2303                           
  2304                           ; 2 bytes @ 0x1
  2305  0071                     	ds	1
  2306  0072                     ??_USBCtrlTrfRxService:	
  2307  0072                     USBCtrlTrfTxService@byteToSend:	
  2308                           ; 0 bytes @ 0x2
  2309                           
  2310  0072                     memset@c:	
  2311                           ; 1 bytes @ 0x2
  2312                           
  2313  0072                     i1USBDeviceInit@p:	
  2314                           ; 2 bytes @ 0x2
  2315                           
  2316                           
  2317                           ; 2 bytes @ 0x2
  2318  0072                     	ds	1
  2319  0073                     ??_USBCtrlTrfInHandler:	
  2320  0073                     ??_USBCtrlEPAllowDataStage:	
  2321                           ; 0 bytes @ 0x3
  2322                           
  2323  0073                     i1USBTransferOnePacket@len:	
  2324                           ; 0 bytes @ 0x3
  2325                           
  2326                           
  2327                           ; 1 bytes @ 0x3
  2328  0073                     	ds	1
  2329  0074                     ??i1_USBTransferOnePacket:	
  2330  0074                     USBCtrlTrfRxService@i:	
  2331                           ; 0 bytes @ 0x4
  2332                           
  2333  0074                     i1USBDeviceInit@i_1189:	
  2334                           ; 1 bytes @ 0x4
  2335                           
  2336  0074                     memset@n:	
  2337                           ; 1 bytes @ 0x4
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x4
  2341  0074                     	ds	1
  2342  0075                     ??_USBCtrlEPServiceComplete:	
  2343  0075                     USBConfigureEndpoint@EPNum:	
  2344                           ; 0 bytes @ 0x5
  2345                           
  2346  0075                     USBCtrlTrfRxService@byteToRead:	
  2347                           ; 1 bytes @ 0x5
  2348                           
  2349  0075                     USBCtrlTrfInHandler@lastDTS:	
  2350                           ; 1 bytes @ 0x5
  2351                           
  2352  0075                     i1USBDeviceInit@i:	
  2353                           ; 1 bytes @ 0x5
  2354                           
  2355                           
  2356                           ; 1 bytes @ 0x5
  2357  0075                     	ds	1
  2358  0076                     ??_memset:	
  2359  0076                     ??_USBCtrlTrfOutHandler:	
  2360                           ; 0 bytes @ 0x6
  2361                           
  2362  0076                     USBConfigureEndpoint@handle:	
  2363                           ; 0 bytes @ 0x6
  2364                           
  2365  0076                     i1USBTransferOnePacket@ep:	
  2366                           ; 1 bytes @ 0x6
  2367                           
  2368  0076                     memset@p:	
  2369                           ; 1 bytes @ 0x6
  2370                           
  2371                           
  2372                           ; 2 bytes @ 0x6
  2373  0076                     	ds	1
  2374  0077                     ?_USBEnableEndpoint:	
  2375  0077                     USBEnableEndpoint@options:	
  2376                           ; 0 bytes @ 0x7
  2377                           
  2378  0077                     i1USBTransferOnePacket@handle:	
  2379                           ; 1 bytes @ 0x7
  2380                           
  2381                           
  2382                           ; 1 bytes @ 0x7
  2383  0077                     	ds	1
  2384  0078                     ??_USBEnableEndpoint:	
  2385                           
  2386                           ; 0 bytes @ 0x8
  2387  0078                     	ds	2
  2388  007A                     USBEnableEndpoint@p:	
  2389                           
  2390                           ; 2 bytes @ 0xA
  2391  007A                     	ds	2
  2392  007C                     USBEnableEndpoint@ep:	
  2393                           
  2394                           ; 1 bytes @ 0xC
  2395  007C                     	ds	1
  2396  007D                     ??_APP_DeviceCDCBasicDemoInitialize:	
  2397                           
  2398                           ; 0 bytes @ 0xD
  2399  007D                     	ds	1
  2400  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2401                           
  2402                           	psect	cstackBANK0
  2403  0060                     __pcstackBANK0:	
  2404                           ; 0 bytes @ 0xE
  2405                           
  2406  0060                     ??_CDCInitEP:	
  2407                           
  2408                           ; 0 bytes @ 0x0
  2409  0060                     	ds	2
  2410  0062                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2411  0062                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2412                           ; 1 bytes @ 0x2
  2413                           
  2414                           
  2415                           ; 2 bytes @ 0x2
  2416  0062                     	ds	2
  2417  0064                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2418                           
  2419                           ; 2 bytes @ 0x4
  2420  0064                     	ds	2
  2421  0066                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2422                           
  2423                           ; 2 bytes @ 0x6
  2424  0066                     	ds	2
  2425  0068                     ??_USBWakeFromSuspend:	
  2426  0068                     ??_USBSuspend:	
  2427                           ; 0 bytes @ 0x8
  2428                           
  2429  0068                     ??_USBStdFeatureReqHandler:	
  2430                           ; 0 bytes @ 0x8
  2431                           
  2432  0068                     ??_USBStdSetCfgHandler:	
  2433                           ; 0 bytes @ 0x8
  2434                           
  2435                           
  2436                           ; 0 bytes @ 0x8
  2437  0068                     	ds	1
  2438  0069                     USBStdSetCfgHandler@p:	
  2439                           
  2440                           ; 2 bytes @ 0x9
  2441  0069                     	ds	1
  2442  006A                     USBStdFeatureReqHandler@pUEP:	
  2443                           
  2444                           ; 2 bytes @ 0xA
  2445  006A                     	ds	1
  2446  006B                     USBStdSetCfgHandler@i_1530:	
  2447                           
  2448                           ; 1 bytes @ 0xB
  2449  006B                     	ds	1
  2450  006C                     USBStdSetCfgHandler@i:	
  2451  006C                     USBStdFeatureReqHandler@current_ep_data:	
  2452                           ; 1 bytes @ 0xC
  2453                           
  2454                           
  2455                           ; 1 bytes @ 0xC
  2456  006C                     	ds	1
  2457  006D                     USBStdFeatureReqHandler@p:	
  2458                           
  2459                           ; 1 bytes @ 0xD
  2460  006D                     	ds	1
  2461  006E                     ??_USBCheckStdRequest:	
  2462                           
  2463                           ; 0 bytes @ 0xE
  2464  006E                     	ds	1
  2465  006F                     ??_USBCtrlTrfSetupHandler:	
  2466                           
  2467                           ; 0 bytes @ 0xF
  2468  006F                     	ds	1
  2469                           
  2470                           	psect	maintext
  2471  091A                     __pmaintext:	
  2472 ;;
  2473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2474 ;;
  2475 ;; *************** function _main *****************
  2476 ;; Defined at:
  2477 ;;		line 49 in file "../src/main.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;		None               void
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 17F/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels required when called:   14
  2497 ;; This function calls:
  2498 ;;		_APP_DeviceCDCBasicDemoTasks
  2499 ;;		_SYSTEM_Initialize
  2500 ;;		_USBDeviceAttach
  2501 ;;		_USBDeviceInit
  2502 ;; This function is called by:
  2503 ;;		Startup code after reset
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _main
  2509  091A                     _main:	
  2510                           
  2511                           ;main.c: 51: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2515  091A  3000               	movlw	0
  2516  091B  3189  2147  3189   	fcall	_SYSTEM_Initialize
  2517                           
  2518                           ;main.c: 53: USBDeviceInit();
  2519  091E  3183  23CC  3189   	fcall	_USBDeviceInit
  2520                           
  2521                           ;main.c: 54: USBDeviceAttach();
  2522  0921  3189  21E4  3189   	fcall	_USBDeviceAttach
  2523  0924                     l5497:	
  2524                           ;main.c: 56: while(1)
  2525                           
  2526                           ;main.c: 91: {
  2527                           ;main.c: 93: continue;
  2528                           
  2529                           ;main.c: 81: {
  2530                           ;main.c: 83: continue;
  2531                           
  2532                           
  2533                           ;main.c: 57: {
  2534                           ;main.c: 58: ;
  2535                           ;main.c: 80: if( USBDeviceState < CONFIGURED_STATE )
  2536  0924  3020               	movlw	32
  2537  0925  0023               	movlb	3	; select bank3
  2538  0926  024E               	subwf	_USBDeviceState^(0+384),w	;volatile
  2539  0927  1C03               	btfss	3,0
  2540  0928  2924               	goto	l5497
  2541                           
  2542                           ;main.c: 84: }
  2543                           ;main.c: 90: if( UCONbits.SUSPND== 1 )
  2544  0929  003D               	movlb	29	; select bank29
  2545  092A  188E               	btfsc	14,1	;volatile
  2546  092B  2924               	goto	l5497
  2547                           
  2548                           ;main.c: 94: }
  2549                           ;main.c: 97: APP_DeviceCDCBasicDemoTasks();
  2550  092C  318F  2722  3189   	fcall	_APP_DeviceCDCBasicDemoTasks
  2551  092F  2924               	goto	l5497
  2552  0930                     __end_of_main:	
  2553                           
  2554                           	psect	text1
  2555  03CC                     __ptext1:	
  2556 ;; *************** function _USBDeviceInit *****************
  2557 ;; Defined at:
  2558 ;;		line 292 in file "../../../../../../framework/usb/src/usb_device.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  p               2    2[BANK2 ] PTR unsigned char 
  2563 ;;		 -> UEP1(1), 
  2564 ;;  i               1    4[BANK2 ] unsigned char 
  2565 ;;  i               1    5[BANK2 ] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2576 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2577 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;Total ram usage:        6 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:   11
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _USBDeviceInit
  2591  03CC                     _USBDeviceInit:	
  2592                           
  2593                           ;usb_device.c: 294: uint8_t i;
  2594                           ;usb_device.c: 296: {PIE2bits.USBIE = 0;};
  2595                           
  2596                           ;incstack = 0
  2597                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2598  03CC  0021               	movlb	1	; select bank1
  2599  03CD  1112               	bcf	18,2	;volatile
  2600                           
  2601                           ;usb_device.c: 299: {UEIR = 0;};
  2602  03CE  003D               	movlb	29	; select bank29
  2603  03CF  0193               	clrf	19	;volatile
  2604                           
  2605                           ;usb_device.c: 302: {UIR = 0;};
  2606  03D0  0190               	clrf	16	;volatile
  2607                           
  2608                           ;usb_device.c: 305: UEP0 = 0;
  2609  03D1  0198               	clrf	24	;volatile
  2610                           
  2611                           ;usb_device.c: 307: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2612  03D2  300E               	movlw	14
  2613  03D3  0022               	movlb	2	; select bank2
  2614  03D4  00E3               	movwf	(USBDeviceInit@p+1)^(0+256)
  2615  03D5  3099               	movlw	153
  2616  03D6  00E2               	movwf	USBDeviceInit@p^(0+256)
  2617  03D7  01E4               	clrf	USBDeviceInit@i_1189^(0+256)
  2618  03D8  3002               	movlw	2
  2619  03D9  0264               	subwf	USBDeviceInit@i_1189^(0+256),w
  2620  03DA  1803               	btfsc	3,0
  2621  03DB  2BED               	goto	l5413
  2622  03DC                     l5405:	
  2623  03DC  0862               	movf	USBDeviceInit@p^(0+256),w
  2624  03DD  0086               	movwf	6
  2625  03DE  0863               	movf	(USBDeviceInit@p+1)^(0+256),w
  2626  03DF  0087               	movwf	7
  2627  03E0  0181               	clrf	1
  2628  03E1  3001               	movlw	1
  2629  03E2  07E2               	addwf	USBDeviceInit@p^(0+256),f
  2630  03E3  3000               	movlw	0
  2631  03E4  3DE3               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2632  03E5  3001               	movlw	1
  2633  03E6  00E0               	movwf	??_USBDeviceInit^(0+256)
  2634  03E7  0860               	movf	??_USBDeviceInit^(0+256),w
  2635  03E8  07E4               	addwf	USBDeviceInit@i_1189^(0+256),f
  2636  03E9  3002               	movlw	2
  2637  03EA  0264               	subwf	USBDeviceInit@i_1189^(0+256),w
  2638  03EB  1C03               	skipc
  2639  03EC  2BDC               	goto	l5405
  2640  03ED                     l5413:	
  2641                           
  2642                           ;usb_device.c: 309: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2643  03ED  3016               	movlw	22
  2644  03EE  003D               	movlb	29	; select bank29
  2645  03EF  0091               	movwf	17	;volatile
  2646  03F0  309F               	movlw	159
  2647  03F1  0097               	movwf	23	;volatile
  2648  03F2  307B               	movlw	123
  2649  03F3  0092               	movwf	18	;volatile
  2650                           
  2651                           ;usb_device.c: 312: ;
  2652                           ;usb_device.c: 315: ;
  2653                           ;usb_device.c: 318: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2654  03F4  0022               	movlb	2	; select bank2
  2655  03F5  01E5               	clrf	USBDeviceInit@i^(0+256)
  2656  03F6  300C               	movlw	12
  2657  03F7  0265               	subwf	USBDeviceInit@i^(0+256),w
  2658  03F8  1803               	btfsc	3,0
  2659  03F9  2C13               	goto	l391
  2660  03FA                     l5421:	
  2661                           
  2662                           ;usb_device.c: 319: {
  2663                           ;usb_device.c: 320: BDT[i].Val = 0x00;
  2664  03FA  0865               	movf	USBDeviceInit@i^(0+256),w
  2665  03FB  00E0               	movwf	??_USBDeviceInit^(0+256)
  2666  03FC  3001               	movlw	1
  2667  03FD                     u5155:	
  2668  03FD  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2669  03FE  3EFF               	addlw	-1
  2670  03FF  1D03               	skipz
  2671  0400  2BFD               	goto	u5155
  2672  0401  3560               	lslf	??_USBDeviceInit^(0+256),w
  2673  0402  3E20               	addlw	32
  2674  0403  0086               	movwf	6
  2675  0404  0187               	clrf	7
  2676  0405  3000               	movlw	0
  2677  0406  3FC0               	movwi [0]fsr1
  2678  0407  3000               	movlw	0
  2679  0408  3FC1               	movwi [1]fsr1
  2680  0409  3FC2               	movwi [2]fsr1
  2681  040A  3FC3               	movwi [3]fsr1
  2682  040B  3001               	movlw	1
  2683  040C  00E0               	movwf	??_USBDeviceInit^(0+256)
  2684  040D  0860               	movf	??_USBDeviceInit^(0+256),w
  2685  040E  07E5               	addwf	USBDeviceInit@i^(0+256),f
  2686  040F  300C               	movlw	12
  2687  0410  0265               	subwf	USBDeviceInit@i^(0+256),w
  2688  0411  1C03               	skipc
  2689  0412  2BFA               	goto	l5421
  2690  0413                     l391:	
  2691                           
  2692                           ;usb_device.c: 321: }
  2693                           ;usb_device.c: 324: UCONbits.PPBRST = 1;
  2694  0413  003D               	movlb	29	; select bank29
  2695  0414  170E               	bsf	14,6	;volatile
  2696                           
  2697                           ;usb_device.c: 327: UADDR = 0x00;
  2698  0415  0196               	clrf	22	;volatile
  2699                           
  2700                           ;usb_device.c: 330: UCONbits.PKTDIS = 0;
  2701  0416  120E               	bcf	14,4	;volatile
  2702                           
  2703                           ;usb_device.c: 333: UCONbits.PPBRST = 0;
  2704  0417  130E               	bcf	14,6	;volatile
  2705  0418                     l5441:	
  2706                           ;usb_device.c: 336: while(UIRbits.TRNIF == 1)
  2707                           
  2708  0418  003D               	movlb	29	; select bank29
  2709  0419  1D90               	btfss	16,3	;volatile
  2710  041A  2C28               	goto	l5443
  2711                           
  2712                           ;usb_device.c: 337: {
  2713                           ;usb_device.c: 338: (UIR &= 0xF7);
  2714  041B  30F7               	movlw	247
  2715  041C  0022               	movlb	2	; select bank2
  2716  041D  00E0               	movwf	??_USBDeviceInit^(0+256)
  2717  041E  0860               	movf	??_USBDeviceInit^(0+256),w
  2718  041F  003D               	movlb	29	; select bank29
  2719  0420  0590               	andwf	16,f	;volatile
  2720                           
  2721                           ;usb_device.c: 340: inPipes[0].info.Val = 0;
  2722  0421  0021               	movlb	1	; select bank1
  2723  0422  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  2724                           
  2725                           ;usb_device.c: 341: outPipes[0].info.Val = 0;
  2726  0423  0023               	movlb	3	; select bank3
  2727  0424  01AC               	clrf	(_outPipes^(0+384)+2)	;volatile
  2728                           
  2729                           ;usb_device.c: 342: outPipes[0].wCount.Val = 0;
  2730  0425  01AD               	clrf	(_outPipes^(0+384)+3)	;volatile
  2731  0426  01AE               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2732  0427  2C18               	goto	l5441
  2733  0428                     l5443:	
  2734                           
  2735                           ;usb_device.c: 343: }
  2736                           ;usb_device.c: 347: USBStatusStageEnabledFlag1 = 1;
  2737  0428  3001               	movlw	1
  2738  0429  0022               	movlb	2	; select bank2
  2739  042A  00E0               	movwf	??_USBDeviceInit^(0+256)
  2740  042B  0860               	movf	??_USBDeviceInit^(0+256),w
  2741  042C  0023               	movlb	3	; select bank3
  2742  042D  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2743                           
  2744                           ;usb_device.c: 348: USBStatusStageEnabledFlag2 = 1;
  2745  042E  3001               	movlw	1
  2746  042F  0022               	movlb	2	; select bank2
  2747  0430  00E0               	movwf	??_USBDeviceInit^(0+256)
  2748  0431  0860               	movf	??_USBDeviceInit^(0+256),w
  2749  0432  0023               	movlb	3	; select bank3
  2750  0433  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2751                           
  2752                           ;usb_device.c: 350: USBDeferINDataStagePackets = 0;
  2753  0434  01CB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2754                           
  2755                           ;usb_device.c: 351: USBDeferOUTDataStagePackets = 0;
  2756  0435  01CC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2757                           
  2758                           ;usb_device.c: 352: USBBusIsSuspended = 0;
  2759  0436  01CA               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2760                           
  2761                           ;usb_device.c: 356: for(i = 0; i < (uint8_t)(2+1u); i++)
  2762  0437  0022               	movlb	2	; select bank2
  2763  0438  01E5               	clrf	USBDeviceInit@i^(0+256)
  2764  0439  3003               	movlw	3
  2765  043A  0265               	subwf	USBDeviceInit@i^(0+256),w
  2766  043B  1803               	btfsc	3,0
  2767  043C  2C5D               	goto	l5461
  2768  043D                     l5455:	
  2769                           
  2770                           ;usb_device.c: 357: {
  2771                           ;usb_device.c: 358: pBDTEntryIn[i] = 0u;
  2772  043D  0865               	movf	USBDeviceInit@i^(0+256),w
  2773  043E  3EBA               	addlw	_pBDTEntryIn& (0+255)
  2774  043F  0086               	movwf	6
  2775  0440  3001               	movlw	1	; select bank3/4
  2776  0441  0087               	movwf	7
  2777  0442  0181               	clrf	1
  2778                           
  2779                           ;usb_device.c: 359: pBDTEntryOut[i] = 0u;
  2780  0443  0865               	movf	USBDeviceInit@i^(0+256),w
  2781  0444  3EBD               	addlw	_pBDTEntryOut& (0+255)
  2782  0445  0086               	movwf	6
  2783  0446  3001               	movlw	1	; select bank3/4
  2784  0447  0087               	movwf	7
  2785  0448  0181               	clrf	1
  2786                           
  2787                           ;usb_device.c: 360: ep_data_in[i].Val = 0u;
  2788  0449  0865               	movf	USBDeviceInit@i^(0+256),w
  2789  044A  3EB4               	addlw	_ep_data_in& (0+255)
  2790  044B  0086               	movwf	6
  2791  044C  3001               	movlw	1	; select bank3/4
  2792  044D  0087               	movwf	7
  2793  044E  0181               	clrf	1
  2794                           
  2795                           ;usb_device.c: 361: ep_data_out[i].Val = 0u;
  2796  044F  0865               	movf	USBDeviceInit@i^(0+256),w
  2797  0450  3EB7               	addlw	_ep_data_out& (0+255)
  2798  0451  0086               	movwf	6
  2799  0452  3001               	movlw	1	; select bank3/4
  2800  0453  0087               	movwf	7
  2801  0454  0181               	clrf	1
  2802  0455  3001               	movlw	1
  2803  0456  00E0               	movwf	??_USBDeviceInit^(0+256)
  2804  0457  0860               	movf	??_USBDeviceInit^(0+256),w
  2805  0458  07E5               	addwf	USBDeviceInit@i^(0+256),f
  2806  0459  3003               	movlw	3
  2807  045A  0265               	subwf	USBDeviceInit@i^(0+256),w
  2808  045B  1C03               	skipc
  2809  045C  2C3D               	goto	l5455
  2810  045D                     l5461:	
  2811                           
  2812                           ;usb_device.c: 362: }
  2813                           ;usb_device.c: 365: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2814  045D  3028               	movlw	40
  2815  045E  00E0               	movwf	??_USBDeviceInit^(0+256)
  2816  045F  0860               	movf	??_USBDeviceInit^(0+256),w
  2817  0460  0023               	movlb	3	; select bank3
  2818  0461  00BA               	movwf	_pBDTEntryIn^(0+384)
  2819                           
  2820                           ;usb_device.c: 367: UEP0 = 0x06|0x10;
  2821  0462  3016               	movlw	22
  2822  0463  003D               	movlb	29	; select bank29
  2823  0464  0098               	movwf	24	;volatile
  2824                           
  2825                           ;usb_device.c: 369: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2826  0465  3050               	movlw	80
  2827  0466  0022               	movlb	2	; select bank2
  2828  0467  00E0               	movwf	??_USBDeviceInit^(0+256)
  2829  0468  3000               	movlw	0
  2830  0469  00E1               	movwf	(??_USBDeviceInit^(0+256)+1)
  2831  046A  0860               	movf	??_USBDeviceInit^(0+256),w
  2832  046B  0020               	movlb	0	; select bank0
  2833  046C  00A2               	movwf	34	;volatile
  2834  046D  0022               	movlb	2	; select bank2
  2835  046E  0861               	movf	(??_USBDeviceInit+1)^(0+256),w
  2836  046F  0020               	movlb	0	; select bank0
  2837  0470  00A3               	movwf	35	;volatile
  2838                           
  2839                           ;usb_device.c: 370: BDT[0].CNT = 8;
  2840  0471  3008               	movlw	8
  2841  0472  00A1               	movwf	33	;volatile
  2842                           
  2843                           ;usb_device.c: 371: BDT[0].STAT.Val = 0x00|0x04;
  2844  0473  3004               	movlw	4
  2845  0474  0022               	movlb	2	; select bank2
  2846  0475  00E0               	movwf	??_USBDeviceInit^(0+256)
  2847  0476  0860               	movf	??_USBDeviceInit^(0+256),w
  2848  0477  0020               	movlb	0	; select bank0
  2849  0478  00A0               	movwf	32	;volatile
  2850                           
  2851                           ;usb_device.c: 372: BDT[0].STAT.Val |= 0x80;
  2852  0479  17A0               	bsf	32,7	;volatile
  2853                           
  2854                           ;usb_device.c: 375: USBActiveConfiguration = 0;
  2855  047A  0023               	movlb	3	; select bank3
  2856  047B  01ED               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  2857                           
  2858                           ;usb_device.c: 378: USBDeviceState = DETACHED_STATE;
  2859  047C  01CE               	clrf	_USBDeviceState^(0+384)	;volatile
  2860  047D  0008               	return
  2861  047E                     __end_of_USBDeviceInit:	
  2862                           
  2863                           	psect	text2
  2864  09E4                     __ptext2:	
  2865 ;; *************** function _USBDeviceAttach *****************
  2866 ;; Defined at:
  2867 ;;		line 1346 in file "../../../../../../framework/usb/src/usb_device.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;		None               void
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;Total ram usage:        1 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:   11
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _USBDeviceAttach
  2897  09E4                     _USBDeviceAttach:	
  2898                           
  2899                           ;usb_device.c: 1350: {
  2900                           ;usb_device.c: 1351: if(1 == 1)
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2904  09E4  0023               	movlb	3	; select bank3
  2905  09E5  08CE               	movf	_USBDeviceState^(0+384),f	;volatile
  2906  09E6  1D03               	skipz
  2907  09E7  0008               	return
  2908                           
  2909                           ;usb_device.c: 1352: {
  2910                           ;usb_device.c: 1354: UCON = 0;
  2911  09E8  003D               	movlb	29	; select bank29
  2912  09E9  018E               	clrf	14	;volatile
  2913                           
  2914                           ;usb_device.c: 1357: UIE = 0;
  2915  09EA  0192               	clrf	18	;volatile
  2916                           
  2917                           ;usb_device.c: 1361: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2918  09EB  3016               	movlw	22
  2919  09EC  0091               	movwf	17	;volatile
  2920  09ED  309F               	movlw	159
  2921  09EE  0097               	movwf	23	;volatile
  2922  09EF  307B               	movlw	123
  2923  09F0  0092               	movwf	18	;volatile
  2924                           
  2925                           ;usb_device.c: 1363: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2926  09F1  0021               	movlb	1	; select bank1
  2927  09F2  1512               	bsf	18,2	;volatile
  2928  09F3  170B               	bsf	11,6	;volatile
  2929  09F4  178B               	bsf	11,7	;volatile
  2930  09F5                     l452:	
  2931                           ;usb_device.c: 1366: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2932                           
  2933  09F5  003D               	movlb	29	; select bank29
  2934  09F6  198E               	btfsc	14,3	;volatile
  2935  09F7  29FA               	goto	l5487
  2936  09F8  158E               	bsf	14,3	;volatile
  2937  09F9  29F5               	goto	l452
  2938  09FA                     l5487:	
  2939                           
  2940                           ;usb_device.c: 1369: USBDeviceState = ATTACHED_STATE;
  2941  09FA  3001               	movlw	1
  2942  09FB  0022               	movlb	2	; select bank2
  2943  09FC  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2944  09FD  0860               	movf	??_USBDeviceAttach^(0+256),w
  2945  09FE  0023               	movlb	3	; select bank3
  2946  09FF  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  2947  0A00  0008               	return
  2948  0A01                     __end_of_USBDeviceAttach:	
  2949                           
  2950                           	psect	text3
  2951  0947                     __ptext3:	
  2952 ;; *************** function _SYSTEM_Initialize *****************
  2953 ;; Defined at:
  2954 ;;		line 88 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  state           1    wreg     enum E2639
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  state           1    1[BANK2 ] enum E2639
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;Total ram usage:        1 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:   12
  2975 ;; This function calls:
  2976 ;;		_BUTTON_Enable
  2977 ;;		_LED_Enable
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _SYSTEM_Initialize
  2985  0947                     _SYSTEM_Initialize:	
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2989                           ;SYSTEM_Initialize@state stored from wreg
  2990  0947  0022               	movlb	2	; select bank2
  2991  0948  00E1               	movwf	SYSTEM_Initialize@state^(0+256)
  2992                           
  2993                           ;system.c: 90: switch(state)
  2994  0949  2952               	goto	l5253
  2995  094A                     l5249:	
  2996                           ;system.c: 91: {
  2997                           ;system.c: 92: case SYSTEM_STATE_USB_START:
  2998                           
  2999                           
  3000                           ;system.c: 93: LED_Enable(LED_D1);
  3001  094A  3001               	movlw	1
  3002  094B  3189  21AC  3189   	fcall	_LED_Enable
  3003                           
  3004                           ;system.c: 94: BUTTON_Enable(BUTTON_S1);
  3005  094E  3001               	movlw	1
  3006  094F  3188  20EA         	fcall	_BUTTON_Enable
  3007                           
  3008                           ;system.c: 102: }
  3009                           
  3010                           ;system.c: 101: break;
  3011                           
  3012                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  3013                           
  3014                           ;system.c: 98: break;
  3015                           
  3016                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  3017                           
  3018                           ;system.c: 95: break;
  3019  0951  0008               	return
  3020  0952                     l5253:	
  3021  0952  0022               	movlb	2	; select bank2
  3022  0953  0861               	movf	SYSTEM_Initialize@state^(0+256),w
  3023                           
  3024                           ; Switch size 1, requested type "space"
  3025                           ; Number of cases is 3, Range of values is 0 to 2
  3026                           ; switch strategies available:
  3027                           ; Name         Instructions Cycles
  3028                           ; simple_byte           10     6 (average)
  3029                           ; direct_byte           12     6 (fixed)
  3030                           ; jumptable            260     6 (fixed)
  3031                           ;	Chosen strategy is simple_byte
  3032  0954  3A00               	xorlw	0	; case 0
  3033  0955  1903               	skipnz
  3034  0956  294A               	goto	l5249
  3035  0957  3A01               	xorlw	1	; case 1
  3036  0958  1903               	skipnz
  3037  0959  295E               	goto	l14
  3038  095A  3A03               	xorlw	3	; case 2
  3039  095B  1903               	skipnz
  3040  095C  295E               	goto	l14
  3041  095D  295E               	goto	l14
  3042  095E                     l14:	
  3043  095E  0008               	return
  3044  095F                     __end_of_SYSTEM_Initialize:	
  3045                           
  3046                           	psect	text4
  3047  09AC                     __ptext4:	
  3048 ;; *************** function _LED_Enable *****************
  3049 ;; Defined at:
  3050 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  led             1    wreg     enum E2
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  led             1    0[BANK2 ] enum E2
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:   11
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_SYSTEM_Initialize
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _LED_Enable
  3080  09AC                     _LED_Enable:	
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  3084                           ;LED_Enable@led stored from wreg
  3085  09AC  0022               	movlb	2	; select bank2
  3086  09AD  00E0               	movwf	LED_Enable@led^(0+256)
  3087                           
  3088                           ;leds.c: 222: switch(led)
  3089  09AE  29BB               	goto	l5021
  3090  09AF                     l255:	
  3091                           ;leds.c: 223: {
  3092                           ;leds.c: 224: case LED_D1:
  3093                           
  3094                           
  3095                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  3096  09AF  0021               	movlb	1	; select bank1
  3097  09B0  100E               	bcf	14,0	;volatile
  3098                           
  3099                           ;leds.c: 226: break;
  3100  09B1  0008               	return
  3101  09B2                     l257:	
  3102                           ;leds.c: 228: case LED_D2:
  3103                           
  3104                           
  3105                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  3106  09B2  0021               	movlb	1	; select bank1
  3107  09B3  108E               	bcf	14,1	;volatile
  3108                           
  3109                           ;leds.c: 230: break;
  3110  09B4  0008               	return
  3111  09B5                     l258:	
  3112                           ;leds.c: 232: case LED_D3:
  3113                           
  3114                           
  3115                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  3116  09B5  0021               	movlb	1	; select bank1
  3117  09B6  110E               	bcf	14,2	;volatile
  3118                           
  3119                           ;leds.c: 234: break;
  3120  09B7  0008               	return
  3121  09B8                     l259:	
  3122                           ;leds.c: 236: case LED_D4:
  3123                           
  3124                           
  3125                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  3126  09B8  0021               	movlb	1	; select bank1
  3127  09B9  118E               	bcf	14,3	;volatile
  3128                           
  3129                           ;leds.c: 242: }
  3130                           
  3131                           ;leds.c: 241: break;
  3132                           
  3133                           ;leds.c: 240: case LED_NONE:
  3134                           
  3135                           ;leds.c: 238: break;
  3136  09BA  0008               	return
  3137  09BB                     l5021:	
  3138  09BB  0022               	movlb	2	; select bank2
  3139  09BC  0860               	movf	LED_Enable@led^(0+256),w
  3140                           
  3141                           ; Switch size 1, requested type "space"
  3142                           ; Number of cases is 5, Range of values is 0 to 4
  3143                           ; switch strategies available:
  3144                           ; Name         Instructions Cycles
  3145                           ; direct_byte           16     6 (fixed)
  3146                           ; simple_byte           16     9 (average)
  3147                           ; jumptable            260     6 (fixed)
  3148                           ;	Chosen strategy is direct_byte
  3149  09BD  0084               	movwf	4
  3150  09BE  3005               	movlw	5
  3151  09BF  0204               	subwf	4,w
  3152  09C0  1803               	skipnc
  3153  09C1  0008               	return
  3154  09C2  3188               	movlp	high S5653
  3155  09C3  3504               	lslf	4,w
  3156  09C4  3E1A               	addlw	low S5653
  3157  09C5  0082               	movwf	2
  3158  09C6                     l261:	
  3159  09C6  0008               	return
  3160  09C7                     __end_of_LED_Enable:	
  3161                           
  3162                           	psect	swtext1
  3163  081A                     __pswtext1:	
  3164  081A                     S5653:	
  3165  081A  3189  29C6         	ljmp	l261
  3166  081C  3189  29AF         	ljmp	l255
  3167  081E  3189  29B2         	ljmp	l257
  3168  0820  3189  29B5         	ljmp	l258
  3169  0822  3189  29B8         	ljmp	l259
  3170                           
  3171                           	psect	text5
  3172  08EA                     __ptext5:	
  3173 ;; *************** function _BUTTON_Enable *****************
  3174 ;; Defined at:
  3175 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  button          1    wreg     enum E2608
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  button          1    0[BANK2 ] enum E2608
  3180 ;; Return value:  Size  Location     Type
  3181 ;;		None               void
  3182 ;; Registers used:
  3183 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:   11
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_SYSTEM_Initialize
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function _BUTTON_Enable
  3205  08EA                     _BUTTON_Enable:	
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  3209                           ;BUTTON_Enable@button stored from wreg
  3210  08EA  0022               	movlb	2	; select bank2
  3211  08EB  00E0               	movwf	BUTTON_Enable@button^(0+256)
  3212                           
  3213                           ;buttons.c: 94: }
  3214                           
  3215                           ;buttons.c: 93: break;
  3216                           
  3217                           ;buttons.c: 92: case BUTTON_NONE:
  3218                           
  3219                           ;buttons.c: 90: break;
  3220                           
  3221                           ;buttons.c: 88: {
  3222                           ;buttons.c: 89: case BUTTON_S1:
  3223                           
  3224                           ;buttons.c: 87: switch(button)
  3225  08EC  0860               	movf	BUTTON_Enable@button^(0+256),w
  3226                           
  3227                           ; Switch size 1, requested type "space"
  3228                           ; Number of cases is 2, Range of values is 0 to 1
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte            7     4 (average)
  3232                           ; direct_byte           10     6 (fixed)
  3233                           ; jumptable            260     6 (fixed)
  3234                           ;	Chosen strategy is simple_byte
  3235  08ED  3A00               	xorlw	0	; case 0
  3236  08EE  1903               	skipnz
  3237  08EF  28F4               	goto	l207
  3238  08F0  3A01               	xorlw	1	; case 1
  3239  08F1  1903               	skipnz
  3240  08F2  28F4               	goto	l207
  3241  08F3  28F4               	goto	l207
  3242  08F4                     l207:	
  3243  08F4  0008               	return
  3244  08F5                     __end_of_BUTTON_Enable:	
  3245                           
  3246                           	psect	text6
  3247  0F22                     __ptext6:	
  3248 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  3249 ;; Defined at:
  3250 ;;		line 82 in file "../src/app_device_cdc_basic.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  i               1    1[BANK4 ] unsigned char 
  3255 ;;  numBytesRead    1    0[BANK4 ] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Locals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
  3267 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Totals:         0       0       0       2       0       2       0       0       0       0       0       0       
      +0       0
  3269 ;;Total ram usage:        4 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:   13
  3272 ;; This function calls:
  3273 ;;		_BUTTON_IsPressed
  3274 ;;		_CDCTxService
  3275 ;;		_getsUSBUSART
  3276 ;;		_putUSBUSART
  3277 ;;		_putrsUSBUSART
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _APP_DeviceCDCBasicDemoTasks
  3285  0F22                     _APP_DeviceCDCBasicDemoTasks:	
  3286                           
  3287                           ;app_device_cdc_basic.c: 87: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  3288                           
  3289                           ;incstack = 0
  3290                           ; Regs used in _APP_DeviceCDCBasicDemoTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3291  0F22  3001               	movlw	1
  3292  0F23  3189  2130  318F   	fcall	_BUTTON_IsPressed
  3293  0F26  3A01               	xorlw	1
  3294  0F27  1D03               	skipz
  3295  0F28  2F38               	goto	l5369
  3296                           
  3297                           ;app_device_cdc_basic.c: 88: {
  3298                           ;app_device_cdc_basic.c: 92: if(buttonPressed == 0)
  3299  0F29  0023               	movlb	3	; select bank3
  3300  0F2A  08D2               	movf	_buttonPressed^(0+384),f
  3301  0F2B  1D03               	skipz
  3302  0F2C  2F3A               	goto	l5371
  3303                           
  3304                           ;app_device_cdc_basic.c: 93: {
  3305                           ;app_device_cdc_basic.c: 96: if((cdc_trf_state == 0) == 1)
  3306  0F2D  08D5               	movf	_cdc_trf_state^(0+384),f
  3307  0F2E  1D03               	skipz
  3308  0F2F  2F3A               	goto	l5371
  3309                           
  3310                           ;app_device_cdc_basic.c: 97: {
  3311                           ;app_device_cdc_basic.c: 98: putrsUSBUSART(buttonMessage);
  3312  0F30  3020               	movlw	_buttonMessage& (0+255)
  3313  0F31  318A  22B4  318F   	fcall	_putrsUSBUSART
  3314                           
  3315                           ;app_device_cdc_basic.c: 99: buttonPressed = 1;
  3316  0F34  0023               	movlb	3	; select bank3
  3317  0F35  01D2               	clrf	_buttonPressed^(0+384)
  3318  0F36  0AD2               	incf	_buttonPressed^(0+384),f
  3319                           
  3320                           ;app_device_cdc_basic.c: 100: }
  3321                           ;app_device_cdc_basic.c: 101: }
  3322                           ;app_device_cdc_basic.c: 102: }
  3323  0F37  2F3A               	goto	l5371
  3324  0F38                     l5369:	
  3325                           
  3326                           ;app_device_cdc_basic.c: 103: else
  3327                           ;app_device_cdc_basic.c: 104: {
  3328                           ;app_device_cdc_basic.c: 108: buttonPressed = 0;
  3329  0F38  0023               	movlb	3	; select bank3
  3330  0F39  01D2               	clrf	_buttonPressed^(0+384)
  3331  0F3A                     l5371:	
  3332                           
  3333                           ;app_device_cdc_basic.c: 109: }
  3334                           ;app_device_cdc_basic.c: 114: if( (cdc_trf_state == 0) == 1)
  3335  0F3A  08D5               	movf	_cdc_trf_state^(0+384),f
  3336  0F3B  1D03               	skipz
  3337  0F3C  2F8D               	goto	l5393
  3338                           
  3339                           ;app_device_cdc_basic.c: 115: {
  3340                           ;app_device_cdc_basic.c: 116: uint8_t i;
  3341                           ;app_device_cdc_basic.c: 117: uint8_t numBytesRead;
  3342                           ;app_device_cdc_basic.c: 119: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  3343  0F3D  3040               	movlw	64
  3344  0F3E  0022               	movlb	2	; select bank2
  3345  0F3F  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3346  0F40  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3347  0F41  00E8               	movwf	getsUSBUSART@len^(0+256)
  3348  0F42  30A0               	movlw	_readBuffer& (0+255)
  3349  0F43  318D  2591  318F   	fcall	_getsUSBUSART
  3350  0F46  0022               	movlb	2	; select bank2
  3351  0F47  00EF               	movwf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+256)
  3352  0F48  086F               	movf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+256),w
  3353  0F49  0024               	movlb	4	; select bank4
  3354  0F4A  00B2               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+512)
  3355                           
  3356                           ;app_device_cdc_basic.c: 122: for(i=0; i<numBytesRead; i++)
  3357  0F4B  01B3               	clrf	APP_DeviceCDCBasicDemoTasks@i^(0+512)
  3358  0F4C  2F6D               	goto	l5387
  3359  0F4D                     l5377:	
  3360                           ;app_device_cdc_basic.c: 125: {
  3361                           ;app_device_cdc_basic.c: 129: case 0x0A:
  3362                           
  3363                           ;app_device_cdc_basic.c: 123: {
  3364                           ;app_device_cdc_basic.c: 124: switch(readBuffer[i])
  3365                           
  3366                           
  3367                           ;app_device_cdc_basic.c: 130: case 0x0D:
  3368                           ;app_device_cdc_basic.c: 131: writeBuffer[i] = readBuffer[i];
  3369  0F4D  0833               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+512),w
  3370  0F4E  3EA0               	addlw	_readBuffer& (0+255)
  3371  0F4F  0086               	movwf	6
  3372  0F50  3002               	movlw	2	; select bank5/6
  3373  0F51  0087               	movwf	7
  3374  0F52  0801               	movf	1,w
  3375  0F53  2F5C               	goto	L1
  3376  0F54                     l5379:	
  3377                           ;app_device_cdc_basic.c: 139: default:
  3378                           
  3379                           ;app_device_cdc_basic.c: 132: break;
  3380                           
  3381                           
  3382                           ;app_device_cdc_basic.c: 140: writeBuffer[i] = readBuffer[i] + 1;
  3383  0F54  0024               	movlb	4	; select bank4
  3384  0F55  0833               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+512),w
  3385  0F56  3EA0               	addlw	_readBuffer& (0+255)
  3386  0F57  0086               	movwf	6
  3387  0F58  3002               	movlw	2	; select bank5/6
  3388  0F59  0087               	movwf	7
  3389  0F5A  0801               	movf	1,w
  3390  0F5B  3E01               	addlw	1
  3391  0F5C                     L1:	
  3392  0F5C  0022               	movlb	2	; select bank2
  3393  0F5D  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3394  0F5E  0024               	movlb	4	; select bank4
  3395  0F5F  0833               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+512),w
  3396  0F60  3E20               	addlw	_writeBuffer& (0+255)
  3397  0F61  0086               	movwf	6
  3398  0F62  3003               	movlw	3	; select bank6/7
  3399  0F63  0087               	movwf	7
  3400  0F64  0022               	movlb	2	; select bank2
  3401  0F65  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3402  0F66  0081               	movwf	1
  3403  0F67                     l5385:	
  3404                           ;app_device_cdc_basic.c: 142: }
  3405                           
  3406                           ;app_device_cdc_basic.c: 141: break;
  3407                           
  3408  0F67  3001               	movlw	1
  3409  0F68  0022               	movlb	2	; select bank2
  3410  0F69  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3411  0F6A  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3412  0F6B  0024               	movlb	4	; select bank4
  3413  0F6C  07B3               	addwf	APP_DeviceCDCBasicDemoTasks@i^(0+512),f
  3414  0F6D                     l5387:	
  3415  0F6D  0832               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+512),w
  3416  0F6E  0233               	subwf	APP_DeviceCDCBasicDemoTasks@i^(0+512),w
  3417  0F6F  1803               	btfsc	3,0
  3418  0F70  2F80               	goto	l5389
  3419  0F71  0024               	movlb	4	; select bank4
  3420  0F72  0833               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+512),w
  3421  0F73  3EA0               	addlw	_readBuffer& (0+255)
  3422  0F74  0086               	movwf	6
  3423  0F75  3002               	movlw	2	; select bank5/6
  3424  0F76  0087               	movwf	7
  3425  0F77  0801               	movf	1,w
  3426                           
  3427                           ; Switch size 1, requested type "space"
  3428                           ; Number of cases is 2, Range of values is 10 to 13
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte            7     4 (average)
  3432                           ; direct_byte           17     9 (fixed)
  3433                           ; jumptable            263     9 (fixed)
  3434                           ;	Chosen strategy is simple_byte
  3435  0F78  3A0A               	xorlw	10	; case 10
  3436  0F79  1903               	skipnz
  3437  0F7A  2F4D               	goto	l5377
  3438  0F7B  3A07               	xorlw	7	; case 13
  3439  0F7C  1903               	skipnz
  3440  0F7D  2F4D               	goto	l5377
  3441  0F7E  2F54               	goto	l5379
  3442  0F7F  2F67               	goto	l5385
  3443  0F80                     l5389:	
  3444                           
  3445                           ;app_device_cdc_basic.c: 143: }
  3446                           ;app_device_cdc_basic.c: 145: if(numBytesRead > 0)
  3447  0F80  0832               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+512),w
  3448  0F81  1903               	btfsc	3,2
  3449  0F82  2F8D               	goto	l5393
  3450                           
  3451                           ;app_device_cdc_basic.c: 146: {
  3452                           ;app_device_cdc_basic.c: 150: putUSBUSART(writeBuffer,numBytesRead);
  3453  0F83  0832               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+512),w
  3454  0F84  0022               	movlb	2	; select bank2
  3455  0F85  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3456  0F86  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3457  0F87  00E0               	movwf	putUSBUSART@length^(0+256)
  3458  0F88  3020               	movlw	_writeBuffer& (0+255)
  3459  0F89  3189  2191  318F   	fcall	_putUSBUSART
  3460  0F8C  0024               	movlb	4	; select bank4
  3461  0F8D                     l5393:	
  3462                           
  3463                           ;app_device_cdc_basic.c: 151: }
  3464                           ;app_device_cdc_basic.c: 152: }
  3465                           ;app_device_cdc_basic.c: 154: CDCTxService();
  3466  0F8D  3182  2231         	fcall	_CDCTxService
  3467  0F8F  0008               	return
  3468  0F90                     __end_of_APP_DeviceCDCBasicDemoTasks:	
  3469                           
  3470                           	psect	text7
  3471  0AB4                     __ptext7:	
  3472 ;; *************** function _putrsUSBUSART *****************
  3473 ;; Defined at:
  3474 ;;		line 783 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  data            1    wreg     PTR const unsigned char 
  3477 ;;		 -> buttonMessage(18), 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  data            1    2[BANK2 ] PTR const unsigned char 
  3480 ;;		 -> buttonMessage(18), 
  3481 ;;  len             1    3[BANK2 ] unsigned char 
  3482 ;;  pData           1    1[BANK2 ] PTR const unsigned char 
  3483 ;;		 -> buttonMessage(18), 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;Total ram usage:        4 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:   11
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_APP_DeviceCDCBasicDemoTasks
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _putrsUSBUSART
  3509  0AB4                     _putrsUSBUSART:	
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _putrsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3513                           ;putrsUSBUSART@data stored from wreg
  3514  0AB4  0022               	movlb	2	; select bank2
  3515  0AB5  00E2               	movwf	putrsUSBUSART@data^(0+256)
  3516                           
  3517                           ;usb_device_cdc.c: 785: uint8_t len;
  3518                           ;usb_device_cdc.c: 786: const const char *pData;
  3519                           ;usb_device_cdc.c: 811: {PIE2bits.USBIE = 0;};
  3520  0AB6  0021               	movlb	1	; select bank1
  3521  0AB7  1112               	bcf	18,2	;volatile
  3522                           
  3523                           ;usb_device_cdc.c: 812: if(cdc_trf_state != 0)
  3524  0AB8  0023               	movlb	3	; select bank3
  3525  0AB9  0855               	movf	_cdc_trf_state^(0+384),w
  3526  0ABA  1903               	btfsc	3,2
  3527  0ABB  2ABF               	goto	l5057
  3528                           
  3529                           ;usb_device_cdc.c: 813: {
  3530                           ;usb_device_cdc.c: 814: {PIE2bits.USBIE = 1;};
  3531  0ABC  0021               	movlb	1	; select bank1
  3532  0ABD  1512               	bsf	18,2	;volatile
  3533                           
  3534                           ;usb_device_cdc.c: 815: return;
  3535  0ABE  0008               	return
  3536  0ABF                     l5057:	
  3537                           
  3538                           ;usb_device_cdc.c: 816: }
  3539                           ;usb_device_cdc.c: 822: len = 0;
  3540  0ABF  0022               	movlb	2	; select bank2
  3541  0AC0  01E3               	clrf	putrsUSBUSART@len^(0+256)
  3542                           
  3543                           ;usb_device_cdc.c: 823: pData = data;
  3544  0AC1  0862               	movf	putrsUSBUSART@data^(0+256),w
  3545  0AC2  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3546  0AC3  0860               	movf	??_putrsUSBUSART^(0+256),w
  3547  0AC4  00E1               	movwf	putrsUSBUSART@pData^(0+256)
  3548  0AC5                     l5061:	
  3549                           ;usb_device_cdc.c: 824: do
  3550                           
  3551                           
  3552                           ;usb_device_cdc.c: 825: {
  3553                           ;usb_device_cdc.c: 826: len++;
  3554  0AC5  3001               	movlw	1
  3555  0AC6  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3556  0AC7  0860               	movf	??_putrsUSBUSART^(0+256),w
  3557  0AC8  07E3               	addwf	putrsUSBUSART@len^(0+256),f
  3558                           
  3559                           ;usb_device_cdc.c: 827: if(len == 255) break;
  3560  0AC9  0863               	movf	putrsUSBUSART@len^(0+256),w
  3561  0ACA  3AFF               	xorlw	255
  3562  0ACB  1903               	btfsc	3,2
  3563  0ACC  2AD5               	goto	l5069
  3564                           
  3565                           ;usb_device_cdc.c: 828: }while(*pData++);
  3566  0ACD  0861               	movf	putrsUSBUSART@pData^(0+256),w
  3567  0ACE  0086               	movwf	6
  3568  0ACF  3002               	movlw	2	; select bank4/5
  3569  0AD0  0087               	movwf	7
  3570  0AD1  0AE1               	incf	putrsUSBUSART@pData^(0+256),f
  3571  0AD2  0881               	movf	1,f
  3572  0AD3  1D03               	skipz
  3573  0AD4  2AC5               	goto	l5061
  3574  0AD5                     l5069:	
  3575                           
  3576                           ;usb_device_cdc.c: 837: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3577  0AD5  0862               	movf	putrsUSBUSART@data^(0+256),w
  3578  0AD6  0023               	movlb	3	; select bank3
  3579  0AD7  00C4               	movwf	_pCDCSrc^(0+384)
  3580  0AD8  3002               	movlw	2
  3581  0AD9  00C5               	movwf	(_pCDCSrc+1)^(0+384)
  3582  0ADA  0022               	movlb	2	; select bank2
  3583  0ADB  0863               	movf	putrsUSBUSART@len^(0+256),w
  3584  0ADC  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3585  0ADD  0860               	movf	??_putrsUSBUSART^(0+256),w
  3586  0ADE  0023               	movlb	3	; select bank3
  3587  0ADF  00D6               	movwf	_cdc_tx_len^(0+384)
  3588  0AE0  01D3               	clrf	_cdc_mem_type^(0+384)
  3589  0AE1  01D5               	clrf	_cdc_trf_state^(0+384)
  3590  0AE2  0AD5               	incf	_cdc_trf_state^(0+384),f
  3591                           
  3592                           ;usb_device_cdc.c: 838: {PIE2bits.USBIE = 1;};
  3593  0AE3  0021               	movlb	1	; select bank1
  3594  0AE4  1512               	bsf	18,2	;volatile
  3595  0AE5  0008               	return
  3596  0AE6                     __end_of_putrsUSBUSART:	
  3597                           
  3598                           	psect	text8
  3599  0991                     __ptext8:	
  3600 ;; *************** function _putUSBUSART *****************
  3601 ;; Defined at:
  3602 ;;		line 613 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  data            1    wreg     PTR unsigned char 
  3605 ;;		 -> writeBuffer(64), 
  3606 ;;  length          1    0[BANK2 ] unsigned char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  data            1    2[BANK2 ] PTR unsigned char 
  3609 ;;		 -> writeBuffer(64), 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3619 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   11
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_APP_DeviceCDCBasicDemoTasks
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _putUSBUSART
  3635  0991                     _putUSBUSART:	
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  3639                           ;putUSBUSART@data stored from wreg
  3640  0991  0022               	movlb	2	; select bank2
  3641  0992  00E2               	movwf	putUSBUSART@data^(0+256)
  3642                           
  3643                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  3644  0993  0021               	movlb	1	; select bank1
  3645  0994  1112               	bcf	18,2	;volatile
  3646                           
  3647                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3648  0995  0023               	movlb	3	; select bank3
  3649  0996  08D5               	movf	_cdc_trf_state^(0+384),f
  3650  0997  1D03               	skipz
  3651  0998  29A9               	goto	l5115
  3652                           
  3653                           ;usb_device_cdc.c: 640: {
  3654                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3655  0999  0022               	movlb	2	; select bank2
  3656  099A  0862               	movf	putUSBUSART@data^(0+256),w
  3657  099B  0023               	movlb	3	; select bank3
  3658  099C  00C4               	movwf	_pCDCSrc^(0+384)
  3659  099D  3003               	movlw	3
  3660  099E  00C5               	movwf	(_pCDCSrc+1)^(0+384)
  3661  099F  0022               	movlb	2	; select bank2
  3662  09A0  0860               	movf	putUSBUSART@length^(0+256),w
  3663  09A1  00E1               	movwf	??_putUSBUSART^(0+256)
  3664  09A2  0861               	movf	??_putUSBUSART^(0+256),w
  3665  09A3  0023               	movlb	3	; select bank3
  3666  09A4  00D6               	movwf	_cdc_tx_len^(0+384)
  3667  09A5  01D3               	clrf	_cdc_mem_type^(0+384)
  3668  09A6  0AD3               	incf	_cdc_mem_type^(0+384),f
  3669  09A7  01D5               	clrf	_cdc_trf_state^(0+384)
  3670  09A8  0AD5               	incf	_cdc_trf_state^(0+384),f
  3671  09A9                     l5115:	
  3672                           
  3673                           ;usb_device_cdc.c: 642: }
  3674                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  3675  09A9  0021               	movlb	1	; select bank1
  3676  09AA  1512               	bsf	18,2	;volatile
  3677  09AB  0008               	return
  3678  09AC                     __end_of_putUSBUSART:	
  3679                           
  3680                           	psect	text9
  3681  0D91                     __ptext9:	
  3682 ;; *************** function _getsUSBUSART *****************
  3683 ;; Defined at:
  3684 ;;		line 542 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  buffer          1    wreg     PTR unsigned char 
  3687 ;;		 -> readBuffer(64), 
  3688 ;;  len             1    8[BANK2 ] unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  buffer          1   11[BANK2 ] PTR unsigned char 
  3691 ;;		 -> readBuffer(64), 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      unsigned char 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3701 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;Total ram usage:        6 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:   12
  3708 ;; This function calls:
  3709 ;;		_USBTransferOnePacket
  3710 ;; This function is called by:
  3711 ;;		_APP_DeviceCDCBasicDemoTasks
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _getsUSBUSART
  3717  0D91                     _getsUSBUSART:	
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3721                           ;getsUSBUSART@buffer stored from wreg
  3722  0D91  0022               	movlb	2	; select bank2
  3723  0D92  00EB               	movwf	getsUSBUSART@buffer^(0+256)
  3724                           
  3725                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3726  0D93  0023               	movlb	3	; select bank3
  3727  0D94  01D4               	clrf	_cdc_rx_len^(0+384)
  3728                           
  3729                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3730  0D95  0848               	movf	_CDCDataOutHandle^(0+384),w
  3731  0D96  1903               	btfsc	3,2
  3732  0D97  2DA6               	goto	l5083
  3733  0D98  0848               	movf	_CDCDataOutHandle^(0+384),w
  3734  0D99  0086               	movwf	6
  3735  0D9A  0187               	clrf	7
  3736  0D9B  0D01               	rlf	1,w
  3737  0D9C  0D01               	rlf	1,w
  3738  0D9D  3901               	andlw	1
  3739  0D9E  0022               	movlb	2	; select bank2
  3740  0D9F  00E9               	movwf	??_getsUSBUSART^(0+256)
  3741  0DA0  01EA               	clrf	(??_getsUSBUSART^(0+256)+1)
  3742  0DA1  0869               	movf	??_getsUSBUSART^(0+256),w
  3743  0DA2  00EC               	movwf	_getsUSBUSART$2071^(0+256)
  3744  0DA3  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3745  0DA4  00ED               	movwf	(_getsUSBUSART$2071+1)^(0+256)
  3746  0DA5  2DA9               	goto	l5085
  3747  0DA6                     l5083:	
  3748  0DA6  0022               	movlb	2	; select bank2
  3749  0DA7  01EC               	clrf	_getsUSBUSART$2071^(0+256)
  3750  0DA8  01ED               	clrf	(_getsUSBUSART$2071+1)^(0+256)
  3751  0DA9                     l5085:	
  3752  0DA9  086D               	movf	(_getsUSBUSART$2071+1)^(0+256),w
  3753  0DAA  046C               	iorwf	_getsUSBUSART$2071^(0+256),w
  3754  0DAB  1D03               	skipz
  3755  0DAC  2DF0               	goto	l5101
  3756                           
  3757                           ;usb_device_cdc.c: 547: {
  3758                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3759  0DAD  0023               	movlb	3	; select bank3
  3760  0DAE  0A48               	incf	_CDCDataOutHandle^(0+384),w
  3761  0DAF  0086               	movwf	6
  3762  0DB0  0187               	clrf	7
  3763  0DB1  0022               	movlb	2	; select bank2
  3764  0DB2  0868               	movf	getsUSBUSART@len^(0+256),w
  3765  0DB3  0201               	subwf	1,w
  3766  0DB4  1803               	skipnc
  3767  0DB5  2DBD               	goto	l5091
  3768                           
  3769                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3770  0DB6  0023               	movlb	3	; select bank3
  3771  0DB7  0848               	movf	_CDCDataOutHandle^(0+384),w
  3772  0DB8  0086               	movwf	6
  3773  0DB9  0187               	clrf	7
  3774  0DBA  3F41               	moviw [1]fsr1
  3775  0DBB  0022               	movlb	2	; select bank2
  3776  0DBC  00E8               	movwf	getsUSBUSART@len^(0+256)
  3777  0DBD                     l5091:	
  3778                           
  3779                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3780  0DBD  0023               	movlb	3	; select bank3
  3781  0DBE  01D4               	clrf	_cdc_rx_len^(0+384)
  3782  0DBF                     l5097:	
  3783  0DBF  0022               	movlb	2	; select bank2
  3784  0DC0  0868               	movf	getsUSBUSART@len^(0+256),w
  3785  0DC1  0023               	movlb	3	; select bank3
  3786  0DC2  0254               	subwf	_cdc_rx_len^(0+384),w
  3787  0DC3  1803               	btfsc	3,0
  3788  0DC4  2DDE               	goto	l5099
  3789                           
  3790                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3791  0DC5  0854               	movf	_cdc_rx_len^(0+384),w
  3792  0DC6  3E20               	addlw	32
  3793  0DC7  0086               	movwf	6
  3794  0DC8  3001               	movlw	1	; select bank2/3
  3795  0DC9  0087               	movwf	7
  3796  0DCA  0801               	movf	1,w
  3797  0DCB  0022               	movlb	2	; select bank2
  3798  0DCC  00E9               	movwf	??_getsUSBUSART^(0+256)
  3799  0DCD  0023               	movlb	3	; select bank3
  3800  0DCE  0854               	movf	_cdc_rx_len^(0+384),w
  3801  0DCF  0022               	movlb	2	; select bank2
  3802  0DD0  076B               	addwf	getsUSBUSART@buffer^(0+256),w
  3803  0DD1  00EA               	movwf	(??_getsUSBUSART+1)^(0+256)
  3804  0DD2  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3805  0DD3  0086               	movwf	6
  3806  0DD4  3002               	movlw	2	; select bank4/5
  3807  0DD5  0087               	movwf	7
  3808  0DD6  0869               	movf	??_getsUSBUSART^(0+256),w
  3809  0DD7  0081               	movwf	1
  3810  0DD8  3001               	movlw	1
  3811  0DD9  00E9               	movwf	??_getsUSBUSART^(0+256)
  3812  0DDA  0869               	movf	??_getsUSBUSART^(0+256),w
  3813  0DDB  0023               	movlb	3	; select bank3
  3814  0DDC  07D4               	addwf	_cdc_rx_len^(0+384),f
  3815  0DDD  2DBF               	goto	l5097
  3816  0DDE                     l5099:	
  3817                           
  3818                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3819  0DDE  0022               	movlb	2	; select bank2
  3820  0DDF  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3821  0DE0  3020               	movlw	32
  3822  0DE1  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3823  0DE2  3001               	movlw	1
  3824  0DE3  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3825  0DE4  3040               	movlw	64
  3826  0DE5  00E9               	movwf	??_getsUSBUSART^(0+256)
  3827  0DE6  0869               	movf	??_getsUSBUSART^(0+256),w
  3828  0DE7  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3829  0DE8  3002               	movlw	2
  3830  0DE9  318C  243D         	fcall	_USBTransferOnePacket
  3831  0DEB  0022               	movlb	2	; select bank2
  3832  0DEC  00EA               	movwf	(??_getsUSBUSART+1)^(0+256)
  3833  0DED  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3834  0DEE  0023               	movlb	3	; select bank3
  3835  0DEF  00C8               	movwf	_CDCDataOutHandle^(0+384)
  3836  0DF0                     l5101:	
  3837                           
  3838                           ;usb_device_cdc.c: 567: }
  3839                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3840  0DF0  0023               	movlb	3	; select bank3
  3841  0DF1  0854               	movf	_cdc_rx_len^(0+384),w
  3842  0DF2  0008               	return
  3843  0DF3                     __end_of_getsUSBUSART:	
  3844                           
  3845                           	psect	text10
  3846  0231                     __ptext10:	
  3847 ;; *************** function _CDCTxService *****************
  3848 ;; Defined at:
  3849 ;;		line 893 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  3854 ;;  i               1   12[BANK2 ] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;		None               void
  3857 ;; Registers used:
  3858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;Total ram usage:        6 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:   12
  3871 ;; This function calls:
  3872 ;;		_USBTransferOnePacket
  3873 ;; This function is called by:
  3874 ;;		_APP_DeviceCDCBasicDemoTasks
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           
  3879                           ;psect for function _CDCTxService
  3880  0231                     _CDCTxService:	
  3881                           
  3882                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3883                           ;usb_device_cdc.c: 896: uint8_t i;
  3884                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3888  0231  0021               	movlb	1	; select bank1
  3889  0232  1112               	bcf	18,2	;volatile
  3890                           
  3891                           ;usb_device_cdc.c: 900: {};
  3892                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3893  0233  0023               	movlb	3	; select bank3
  3894  0234  0847               	movf	_CDCDataInHandle^(0+384),w
  3895  0235  1903               	btfsc	3,2
  3896  0236  2A45               	goto	l5123
  3897  0237  0847               	movf	_CDCDataInHandle^(0+384),w
  3898  0238  0086               	movwf	6
  3899  0239  0187               	clrf	7
  3900  023A  0D01               	rlf	1,w
  3901  023B  0D01               	rlf	1,w
  3902  023C  3901               	andlw	1
  3903  023D  0022               	movlb	2	; select bank2
  3904  023E  00E8               	movwf	??_CDCTxService^(0+256)
  3905  023F  01E9               	clrf	(??_CDCTxService^(0+256)+1)
  3906  0240  0868               	movf	??_CDCTxService^(0+256),w
  3907  0241  00EA               	movwf	_CDCTxService$2119^(0+256)
  3908  0242  0869               	movf	(??_CDCTxService+1)^(0+256),w
  3909  0243  00EB               	movwf	(_CDCTxService$2119+1)^(0+256)
  3910  0244  2A48               	goto	l5125
  3911  0245                     l5123:	
  3912  0245  0022               	movlb	2	; select bank2
  3913  0246  01EA               	clrf	_CDCTxService$2119^(0+256)
  3914  0247  01EB               	clrf	(_CDCTxService$2119+1)^(0+256)
  3915  0248                     l5125:	
  3916  0248  086B               	movf	(_CDCTxService$2119+1)^(0+256),w
  3917  0249  046A               	iorwf	_CDCTxService$2119^(0+256),w
  3918  024A  1903               	skipnz
  3919  024B  2A4F               	goto	l5129
  3920                           
  3921                           ;usb_device_cdc.c: 903: {
  3922                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  3923  024C  0021               	movlb	1	; select bank1
  3924  024D  1512               	bsf	18,2	;volatile
  3925                           
  3926                           ;usb_device_cdc.c: 905: return;
  3927  024E  0008               	return
  3928  024F                     l5129:	
  3929                           
  3930                           ;usb_device_cdc.c: 906: }
  3931                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3932  024F  0023               	movlb	3	; select bank3
  3933  0250  0855               	movf	_cdc_trf_state^(0+384),w
  3934  0251  3A03               	xorlw	3
  3935  0252  1903               	btfsc	3,2
  3936                           
  3937                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3938  0253  01D5               	clrf	_cdc_trf_state^(0+384)
  3939                           
  3940                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3941  0254  08D5               	movf	_cdc_trf_state^(0+384),f
  3942  0255  1D03               	skipz
  3943  0256  2A5A               	goto	l5137
  3944                           
  3945                           ;usb_device_cdc.c: 920: {
  3946                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  3947  0257  0021               	movlb	1	; select bank1
  3948  0258  1512               	bsf	18,2	;volatile
  3949                           
  3950                           ;usb_device_cdc.c: 922: return;
  3951  0259  0008               	return
  3952  025A                     l5137:	
  3953                           
  3954                           ;usb_device_cdc.c: 923: }
  3955                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3956  025A  0023               	movlb	3	; select bank3
  3957  025B  0855               	movf	_cdc_trf_state^(0+384),w
  3958  025C  3A02               	xorlw	2
  3959  025D  1D03               	skipz
  3960  025E  2A77               	goto	l5143
  3961                           
  3962                           ;usb_device_cdc.c: 929: {
  3963                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3964  025F  0022               	movlb	2	; select bank2
  3965  0260  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3966  0261  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3967  0262  3000               	movlw	0
  3968  0263  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3969  0264  3000               	movlw	0
  3970  0265  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3971  0266  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3972  0267  3002               	movlw	2
  3973  0268  318C  243D  3182   	fcall	_USBTransferOnePacket
  3974  026B  0022               	movlb	2	; select bank2
  3975  026C  00E8               	movwf	??_CDCTxService^(0+256)
  3976  026D  0868               	movf	??_CDCTxService^(0+256),w
  3977  026E  0023               	movlb	3	; select bank3
  3978  026F  00C7               	movwf	_CDCDataInHandle^(0+384)
  3979                           
  3980                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  3981  0270  3003               	movlw	3
  3982  0271  0022               	movlb	2	; select bank2
  3983  0272  00E8               	movwf	??_CDCTxService^(0+256)
  3984  0273  0868               	movf	??_CDCTxService^(0+256),w
  3985  0274  0023               	movlb	3	; select bank3
  3986  0275  00D5               	movwf	_cdc_trf_state^(0+384)
  3987                           
  3988                           ;usb_device_cdc.c: 933: }
  3989  0276  2B03               	goto	l5189
  3990  0277                     l5143:	
  3991                           
  3992                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  3993  0277  0855               	movf	_cdc_trf_state^(0+384),w
  3994  0278  3A01               	xorlw	1
  3995  0279  1D03               	skipz
  3996  027A  2B03               	goto	l5189
  3997                           
  3998                           ;usb_device_cdc.c: 935: {
  3999                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  4000  027B  3041               	movlw	65
  4001  027C  0256               	subwf	_cdc_tx_len^(0+384),w
  4002  027D  1C03               	skipc
  4003  027E  2A81               	goto	l5149
  4004                           
  4005                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  4006  027F  3040               	movlw	64
  4007  0280  2A83               	goto	L2
  4008  0281                     l5149:	
  4009                           
  4010                           ;usb_device_cdc.c: 941: else
  4011                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  4012  0281  0023               	movlb	3	; select bank3
  4013  0282  0856               	movf	_cdc_tx_len^(0+384),w
  4014  0283                     L2:	
  4015  0283  0022               	movlb	2	; select bank2
  4016  0284  00E8               	movwf	??_CDCTxService^(0+256)
  4017  0285  0868               	movf	??_CDCTxService^(0+256),w
  4018  0286  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  4019                           
  4020                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  4021  0287  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  4022  0288  3AFF               	xorlw	255
  4023  0289  0023               	movlb	3	; select bank3
  4024  028A  0756               	addwf	_cdc_tx_len^(0+384),w
  4025  028B  0022               	movlb	2	; select bank2
  4026  028C  00E8               	movwf	??_CDCTxService^(0+256)
  4027  028D  0868               	movf	??_CDCTxService^(0+256),w
  4028  028E  0023               	movlb	3	; select bank3
  4029  028F  00D6               	movwf	_cdc_tx_len^(0+384)
  4030                           
  4031                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4032  0290  30A0               	movlw	160
  4033  0291  0022               	movlb	2	; select bank2
  4034  0292  00E8               	movwf	??_CDCTxService^(0+256)
  4035  0293  0868               	movf	??_CDCTxService^(0+256),w
  4036  0294  0023               	movlb	3	; select bank3
  4037  0295  00C2               	movwf	_pCDCDst^(0+384)
  4038                           
  4039                           ;usb_device_cdc.c: 951: i = byte_to_send;
  4040  0296  0022               	movlb	2	; select bank2
  4041  0297  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4042  0298  00E8               	movwf	??_CDCTxService^(0+256)
  4043  0299  0868               	movf	??_CDCTxService^(0+256),w
  4044  029A  00EC               	movwf	CDCTxService@i^(0+256)
  4045                           
  4046                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  4047  029B  0023               	movlb	3	; select bank3
  4048  029C  08D3               	movf	_cdc_mem_type^(0+384),f
  4049  029D  1903               	btfsc	3,2
  4050  029E  2ABB               	goto	l5167
  4051  029F  2ADB               	goto	l5177
  4052  02A0                     l5159:	
  4053                           ;usb_device_cdc.c: 953: {
  4054                           ;usb_device_cdc.c: 954: while(i)
  4055                           
  4056                           
  4057                           ;usb_device_cdc.c: 955: {
  4058                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  4059  02A0  0023               	movlb	3	; select bank3
  4060  02A1  0844               	movf	_pCDCSrc^(0+384),w
  4061  02A2  0086               	movwf	6
  4062  02A3  0845               	movf	(_pCDCSrc+1)^(0+384),w
  4063  02A4  0087               	movwf	7
  4064  02A5  0801               	movf	1,w
  4065  02A6  0022               	movlb	2	; select bank2
  4066  02A7  00E8               	movwf	??_CDCTxService^(0+256)
  4067  02A8  0023               	movlb	3	; select bank3
  4068  02A9  0842               	movf	_pCDCDst^(0+384),w
  4069  02AA  0086               	movwf	6
  4070  02AB  0187               	clrf	7
  4071  02AC  0022               	movlb	2	; select bank2
  4072  02AD  0868               	movf	??_CDCTxService^(0+256),w
  4073  02AE  0081               	movwf	1
  4074                           
  4075                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  4076  02AF  3001               	movlw	1
  4077  02B0  00E8               	movwf	??_CDCTxService^(0+256)
  4078  02B1  0868               	movf	??_CDCTxService^(0+256),w
  4079  02B2  0023               	movlb	3	; select bank3
  4080  02B3  07C2               	addwf	_pCDCDst^(0+384),f
  4081                           
  4082                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  4083  02B4  3001               	movlw	1
  4084  02B5  07C4               	addwf	_pCDCSrc^(0+384),f
  4085  02B6  3000               	movlw	0
  4086  02B7  3DC5               	addwfc	(_pCDCSrc+1)^(0+384),f
  4087                           
  4088                           ;usb_device_cdc.c: 959: i--;
  4089  02B8  3001               	movlw	1
  4090  02B9  0022               	movlb	2	; select bank2
  4091  02BA  02EC               	subwf	CDCTxService@i^(0+256),f
  4092  02BB                     l5167:	
  4093  02BB  0022               	movlb	2	; select bank2
  4094  02BC  08EC               	movf	CDCTxService@i^(0+256),f
  4095  02BD  1903               	btfsc	3,2
  4096  02BE  2ADF               	goto	l5179
  4097  02BF  2AA0               	goto	l5159
  4098  02C0                     l5169:	
  4099                           ;usb_device_cdc.c: 962: else
  4100                           ;usb_device_cdc.c: 963: {
  4101                           ;usb_device_cdc.c: 964: while(i)
  4102                           
  4103                           ;usb_device_cdc.c: 960: }
  4104                           ;usb_device_cdc.c: 961: }
  4105                           
  4106                           
  4107                           ;usb_device_cdc.c: 965: {
  4108                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  4109  02C0  0023               	movlb	3	; select bank3
  4110  02C1  0844               	movf	_pCDCSrc^(0+384),w
  4111  02C2  0086               	movwf	6
  4112  02C3  0845               	movf	(_pCDCSrc+1)^(0+384),w
  4113  02C4  0087               	movwf	7
  4114  02C5  0801               	movf	1,w
  4115  02C6  0022               	movlb	2	; select bank2
  4116  02C7  00E8               	movwf	??_CDCTxService^(0+256)
  4117  02C8  0023               	movlb	3	; select bank3
  4118  02C9  0842               	movf	_pCDCDst^(0+384),w
  4119  02CA  0086               	movwf	6
  4120  02CB  0187               	clrf	7
  4121  02CC  0022               	movlb	2	; select bank2
  4122  02CD  0868               	movf	??_CDCTxService^(0+256),w
  4123  02CE  0081               	movwf	1
  4124                           
  4125                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  4126  02CF  3001               	movlw	1
  4127  02D0  00E8               	movwf	??_CDCTxService^(0+256)
  4128  02D1  0868               	movf	??_CDCTxService^(0+256),w
  4129  02D2  0023               	movlb	3	; select bank3
  4130  02D3  07C2               	addwf	_pCDCDst^(0+384),f
  4131                           
  4132                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  4133  02D4  3001               	movlw	1
  4134  02D5  07C4               	addwf	_pCDCSrc^(0+384),f
  4135  02D6  3000               	movlw	0
  4136  02D7  3DC5               	addwfc	(_pCDCSrc+1)^(0+384),f
  4137                           
  4138                           ;usb_device_cdc.c: 969: i--;
  4139  02D8  3001               	movlw	1
  4140  02D9  0022               	movlb	2	; select bank2
  4141  02DA  02EC               	subwf	CDCTxService@i^(0+256),f
  4142  02DB                     l5177:	
  4143  02DB  0022               	movlb	2	; select bank2
  4144  02DC  08EC               	movf	CDCTxService@i^(0+256),f
  4145  02DD  1D03               	skipz
  4146  02DE  2AC0               	goto	l5169
  4147  02DF                     l5179:	
  4148                           
  4149                           ;usb_device_cdc.c: 970: }
  4150                           ;usb_device_cdc.c: 971: }
  4151                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  4152  02DF  0023               	movlb	3	; select bank3
  4153  02E0  08D6               	movf	_cdc_tx_len^(0+384),f
  4154  02E1  1D03               	skipz
  4155  02E2  2AF0               	goto	l5187
  4156                           
  4157                           ;usb_device_cdc.c: 978: {
  4158                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  4159  02E3  0022               	movlb	2	; select bank2
  4160  02E4  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4161  02E5  3A40               	xorlw	64
  4162  02E6  1D03               	skipz
  4163  02E7  2AEA               	goto	l5185
  4164                           
  4165                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  4166  02E8  3002               	movlw	2
  4167  02E9  2AEC               	goto	L3
  4168  02EA                     l5185:	
  4169                           
  4170                           ;usb_device_cdc.c: 981: else
  4171                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  4172  02EA  3003               	movlw	3
  4173  02EB  0022               	movlb	2	; select bank2
  4174  02EC                     L3:	
  4175  02EC  00E8               	movwf	??_CDCTxService^(0+256)
  4176  02ED  0868               	movf	??_CDCTxService^(0+256),w
  4177  02EE  0023               	movlb	3	; select bank3
  4178  02EF  00D5               	movwf	_cdc_trf_state^(0+384)
  4179  02F0                     l5187:	
  4180                           
  4181                           ;usb_device_cdc.c: 983: }
  4182                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4183  02F0  0022               	movlb	2	; select bank2
  4184  02F1  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4185  02F2  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  4186  02F3  30A0               	movlw	160
  4187  02F4  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4188  02F5  3000               	movlw	0
  4189  02F6  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4190  02F7  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4191  02F8  00E8               	movwf	??_CDCTxService^(0+256)
  4192  02F9  0868               	movf	??_CDCTxService^(0+256),w
  4193  02FA  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4194  02FB  3002               	movlw	2
  4195  02FC  318C  243D         	fcall	_USBTransferOnePacket
  4196  02FE  0022               	movlb	2	; select bank2
  4197  02FF  00E9               	movwf	(??_CDCTxService+1)^(0+256)
  4198  0300  0869               	movf	(??_CDCTxService+1)^(0+256),w
  4199  0301  0023               	movlb	3	; select bank3
  4200  0302  00C7               	movwf	_CDCDataInHandle^(0+384)
  4201  0303                     l5189:	
  4202                           
  4203                           ;usb_device_cdc.c: 986: }
  4204                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  4205  0303  0021               	movlb	1	; select bank1
  4206  0304  1512               	bsf	18,2	;volatile
  4207  0305  0008               	return
  4208  0306                     __end_of_CDCTxService:	
  4209                           
  4210                           	psect	text11
  4211  0C3D                     __ptext11:	
  4212 ;; *************** function _USBTransferOnePacket *****************
  4213 ;; Defined at:
  4214 ;;		line 989 in file "../../../../../../framework/usb/src/usb_device.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  ep              1    wreg     unsigned char 
  4217 ;;  dir             1    0[BANK2 ] unsigned char 
  4218 ;;  data            2    1[BANK2 ] PTR unsigned char 
  4219 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4220 ;;  len             1    3[BANK2 ] unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  ep              1    6[BANK2 ] unsigned char 
  4223 ;;  handle          1    7[BANK2 ] PTR volatile struct __BD
  4224 ;;		 -> NULL(0), BDT(48), 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      PTR void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4234 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;Total ram usage:        8 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:   11
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_getsUSBUSART
  4245 ;;		_CDCTxService
  4246 ;;		_USBCDCEventHandler
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _USBTransferOnePacket
  4252  0C3D                     _USBTransferOnePacket:	
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  4256                           ;USBTransferOnePacket@ep stored from wreg
  4257  0C3D  0022               	movlb	2	; select bank2
  4258  0C3E  00E6               	movwf	USBTransferOnePacket@ep^(0+256)
  4259                           
  4260                           ;usb_device.c: 991: volatile BDT_ENTRY* handle;
  4261                           ;usb_device.c: 994: if(dir != 0)
  4262  0C3F  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4263  0C40  1903               	btfsc	3,2
  4264  0C41  2C45               	goto	l4921
  4265                           
  4266                           ;usb_device.c: 995: {
  4267                           ;usb_device.c: 997: handle = pBDTEntryIn[ep];
  4268  0C42  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4269  0C43  3EBA               	addlw	_pBDTEntryIn& (0+255)
  4270  0C44  2C47               	goto	L4
  4271  0C45                     l4921:	
  4272                           ;usb_device.c: 998: }
  4273                           
  4274                           
  4275                           ;usb_device.c: 999: else
  4276                           ;usb_device.c: 1000: {
  4277                           ;usb_device.c: 1002: handle = pBDTEntryOut[ep];
  4278  0C45  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4279  0C46  3EBD               	addlw	_pBDTEntryOut& (0+255)
  4280  0C47                     L4:	
  4281  0C47  0086               	movwf	6
  4282  0C48  3001               	movlw	1	; select bank3/4
  4283  0C49  0087               	movwf	7
  4284  0C4A  0801               	movf	1,w
  4285  0C4B  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4286  0C4C  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4287  0C4D  00E7               	movwf	USBTransferOnePacket@handle^(0+256)
  4288                           
  4289                           ;usb_device.c: 1003: }
  4290                           ;usb_device.c: 1007: if(handle == 0)
  4291  0C4E  08E7               	movf	USBTransferOnePacket@handle^(0+256),f
  4292  0C4F  1D03               	skipz
  4293  0C50  2C53               	goto	l4929
  4294                           
  4295                           ;usb_device.c: 1008: {
  4296                           ;usb_device.c: 1009: return 0;
  4297  0C51  3000               	movlw	0
  4298  0C52  0008               	return
  4299  0C53                     l4929:	
  4300                           
  4301                           ;usb_device.c: 1010: }
  4302                           ;usb_device.c: 1023: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  4303  0C53  30FF               	movlw	255
  4304  0C54  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  4305  0C55  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4306  0C56  307F               	movlw	127
  4307  0C57  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  4308  0C58  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4309  0C59  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4310  0C5A  3E02               	addlw	2
  4311  0C5B  0086               	movwf	6
  4312  0C5C  0187               	clrf	7
  4313  0C5D  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4314  0C5E  3FC0               	movwi [0]fsr1
  4315  0C5F  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  4316  0C60  3FC1               	movwi [1]fsr1
  4317                           
  4318                           ;usb_device.c: 1024: handle->CNT = len;
  4319  0C61  0863               	movf	USBTransferOnePacket@len^(0+256),w
  4320  0C62  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4321  0C63  0A67               	incf	USBTransferOnePacket@handle^(0+256),w
  4322  0C64  0086               	movwf	6
  4323  0C65  0187               	clrf	7
  4324  0C66  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4325  0C67  0081               	movwf	1
  4326                           
  4327                           ;usb_device.c: 1025: handle->STAT.Val &= 0x40;
  4328  0C68  3040               	movlw	64
  4329  0C69  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4330  0C6A  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4331  0C6B  0086               	movwf	6
  4332  0C6C  0187               	clrf	7
  4333  0C6D  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4334  0C6E  0581               	andwf	1,f
  4335                           
  4336                           ;usb_device.c: 1026: handle->STAT.Val |= (0x08 & 0x08);
  4337  0C6F  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4338  0C70  0086               	movwf	6
  4339  0C71  0187               	clrf	7
  4340  0C72  1581               	bsf	1,3
  4341                           
  4342                           ;usb_device.c: 1027: handle->STAT.Val |= 0x80;
  4343  0C73  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4344  0C74  0086               	movwf	6
  4345  0C75  0187               	clrf	7
  4346  0C76  1781               	bsf	1,7
  4347                           
  4348                           ;usb_device.c: 1030: if(dir != 0)
  4349  0C77  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4350  0C78  1903               	btfsc	3,2
  4351  0C79  2C7F               	goto	l4941
  4352                           
  4353                           ;usb_device.c: 1031: {
  4354                           ;usb_device.c: 1033: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  4355  0C7A  3004               	movlw	4
  4356  0C7B  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4357  0C7C  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4358  0C7D  3EBA               	addlw	_pBDTEntryIn& (0+255)
  4359  0C7E  2C83               	goto	L5
  4360  0C7F                     l4941:	
  4361                           ;usb_device.c: 1034: }
  4362                           
  4363                           
  4364                           ;usb_device.c: 1035: else
  4365                           ;usb_device.c: 1036: {
  4366                           ;usb_device.c: 1038: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  4367  0C7F  3004               	movlw	4
  4368  0C80  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4369  0C81  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4370  0C82  3EBD               	addlw	_pBDTEntryOut& (0+255)
  4371  0C83                     L5:	
  4372  0C83  0086               	movwf	6
  4373  0C84  3001               	movlw	1	; select bank3/4
  4374  0C85  0087               	movwf	7
  4375  0C86  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4376  0C87  0681               	xorwf	1,f
  4377                           
  4378                           ;usb_device.c: 1039: }
  4379                           ;usb_device.c: 1040: return (void*)handle;
  4380  0C88  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4381  0C89  0008               	return
  4382  0C8A                     __end_of_USBTransferOnePacket:	
  4383                           
  4384                           	psect	text12
  4385  0930                     __ptext12:	
  4386 ;; *************** function _BUTTON_IsPressed *****************
  4387 ;; Defined at:
  4388 ;;		line 55 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  button          1    wreg     enum E2608
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  button          1    0[BANK2 ] enum E2608
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      unsigned char 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:   11
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_APP_DeviceCDCBasicDemoTasks
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _BUTTON_IsPressed
  4418  0930                     _BUTTON_IsPressed:	
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  4422                           ;BUTTON_IsPressed@button stored from wreg
  4423  0930  0022               	movlb	2	; select bank2
  4424  0931  00E0               	movwf	BUTTON_IsPressed@button^(0+256)
  4425                           
  4426                           ;buttons.c: 57: switch(button)
  4427  0932  293C               	goto	l5047
  4428  0933                     l5037:	
  4429                           ;buttons.c: 58: {
  4430                           ;buttons.c: 59: case BUTTON_S1:
  4431                           
  4432                           
  4433                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4434  0933  1003               	clrc
  4435  0934  0020               	movlb	0	; select bank0
  4436  0935  1D8C               	btfss	12,3	;volatile
  4437  0936  1403               	setc
  4438  0937  3000               	movlw	0
  4439  0938  3D09               	addwfc	9,w
  4440  0939  0008               	return
  4441  093A                     l5041:	
  4442                           ;buttons.c: 62: case BUTTON_NONE:
  4443                           
  4444                           
  4445                           ;buttons.c: 63: return 0;
  4446  093A  3000               	movlw	0
  4447  093B  0008               	return
  4448  093C                     l5047:	
  4449                           ;buttons.c: 64: }
  4450                           
  4451  093C  0022               	movlb	2	; select bank2
  4452  093D  0860               	movf	BUTTON_IsPressed@button^(0+256),w
  4453                           
  4454                           ; Switch size 1, requested type "space"
  4455                           ; Number of cases is 2, Range of values is 0 to 1
  4456                           ; switch strategies available:
  4457                           ; Name         Instructions Cycles
  4458                           ; simple_byte            7     4 (average)
  4459                           ; direct_byte           10     6 (fixed)
  4460                           ; jumptable            260     6 (fixed)
  4461                           ;	Chosen strategy is simple_byte
  4462  093E  3A00               	xorlw	0	; case 0
  4463  093F  1903               	skipnz
  4464  0940  293A               	goto	l5041
  4465  0941  3A01               	xorlw	1	; case 1
  4466  0942  1903               	skipnz
  4467  0943  2933               	goto	l5037
  4468  0944  2945               	goto	l5049
  4469  0945                     l5049:	
  4470                           
  4471                           ;buttons.c: 66: return 0;
  4472  0945  3000               	movlw	0
  4473  0946  0008               	return
  4474  0947                     __end_of_BUTTON_IsPressed:	
  4475                           
  4476                           	psect	intentry
  4477  0004                     __pintentry:	
  4478 ;; *************** function _SYS_InterruptHigh *****************
  4479 ;; Defined at:
  4480 ;;		line 107 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;		None               void
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        1 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:   10
  4501 ;; This function calls:
  4502 ;;		_USBDeviceTasks
  4503 ;; This function is called by:
  4504 ;;		Interrupt level 1
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508  0004                     _SYS_InterruptHigh:	
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4512  0004  3180               	pagesel	$
  4513  0005  0020               	movlb	0	; select bank0
  4514  0006  087F               	movf	127,w
  4515  0007  0021               	movlb	1	; select bank1
  4516  0008  00E7               	movwf	??_SYS_InterruptHigh^(0+128)
  4517                           
  4518                           ;system.c: 110: USBDeviceTasks();
  4519  0009  3181  2149         	fcall	_USBDeviceTasks
  4520  000B  0021               	movlb	1	; select bank1
  4521  000C  0867               	movf	??_SYS_InterruptHigh^(0+128),w
  4522  000D  0020               	movlb	0	; select bank0
  4523  000E  00FF               	movwf	127
  4524  000F  0009               	retfie
  4525  0010                     __end_of_SYS_InterruptHigh:	
  4526                           
  4527                           	psect	text14
  4528  0149                     __ptext14:	
  4529 ;; *************** function _USBDeviceTasks *****************
  4530 ;; Defined at:
  4531 ;;		line 483 in file "../../../../../../framework/usb/src/usb_device.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  i               1    6[BANK1 ] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;Total ram usage:        3 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    9
  4552 ;; This function calls:
  4553 ;;		_USBCtrlEPAllowStatusStage
  4554 ;;		_USBCtrlEPService
  4555 ;;		_USBStallHandler
  4556 ;;		_USBSuspend
  4557 ;;		_USBWakeFromSuspend
  4558 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4559 ;;		i1_USBDeviceInit
  4560 ;; This function is called by:
  4561 ;;		_SYS_InterruptHigh
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function _USBDeviceTasks
  4567  0149                     _USBDeviceTasks:	
  4568                           
  4569                           ;usb_device.c: 485: uint8_t i;
  4570                           ;usb_device.c: 596: if(USBDeviceState == ATTACHED_STATE)
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4574  0149  0023               	movlb	3	; select bank3
  4575  014A  084E               	movf	_USBDeviceState^(0+384),w	;volatile
  4576  014B  3A01               	xorlw	1
  4577  014C  1D03               	skipz
  4578  014D  295A               	goto	i1l5267
  4579                           
  4580                           ;usb_device.c: 597: {
  4581                           ;usb_device.c: 607: if(!UCONbits.SE0)
  4582  014E  003D               	movlb	29	; select bank29
  4583  014F  1A8E               	btfsc	14,5	;volatile
  4584  0150  295A               	goto	i1l5267
  4585                           
  4586                           ;usb_device.c: 608: {
  4587                           ;usb_device.c: 609: {UIR = 0;};
  4588  0151  0190               	clrf	16	;volatile
  4589                           
  4590                           ;usb_device.c: 613: UIEbits.URSTIE = 1;
  4591  0152  1412               	bsf	18,0	;volatile
  4592                           
  4593                           ;usb_device.c: 614: UIEbits.IDLEIE = 1;
  4594  0153  1612               	bsf	18,4	;volatile
  4595                           
  4596                           ;usb_device.c: 615: USBDeviceState = POWERED_STATE;
  4597  0154  3002               	movlw	2
  4598  0155  0021               	movlb	1	; select bank1
  4599  0156  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4600  0157  0864               	movf	??_USBDeviceTasks^(0+128),w
  4601  0158  0023               	movlb	3	; select bank3
  4602  0159  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  4603  015A                     i1l5267:	
  4604                           
  4605                           ;usb_device.c: 616: }
  4606                           ;usb_device.c: 617: }
  4607                           ;usb_device.c: 633: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4608  015A  003D               	movlb	29	; select bank29
  4609  015B  1910               	btfsc	16,2	;volatile
  4610  015C  1D12               	btfss	18,2	;volatile
  4611  015D  2967               	goto	i1l5275
  4612                           
  4613                           ;usb_device.c: 634: {
  4614                           ;usb_device.c: 635: (UIR &= 0xFB);
  4615  015E  30FB               	movlw	251
  4616  015F  0021               	movlb	1	; select bank1
  4617  0160  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4618  0161  0864               	movf	??_USBDeviceTasks^(0+128),w
  4619  0162  003D               	movlb	29	; select bank29
  4620  0163  0590               	andwf	16,f	;volatile
  4621                           
  4622                           ;usb_device.c: 639: USBWakeFromSuspend();
  4623  0164  318A  2201  3181   	fcall	_USBWakeFromSuspend
  4624  0167                     i1l5275:	
  4625                           
  4626                           ;usb_device.c: 641: }
  4627                           ;usb_device.c: 646: if(UCONbits.SUSPND==1)
  4628  0167  003D               	movlb	29	; select bank29
  4629  0168  1C8E               	btfss	14,1	;volatile
  4630  0169  296D               	goto	i1l403
  4631                           
  4632                           ;usb_device.c: 647: {
  4633                           ;usb_device.c: 648: PIR2bits.USBIF = 0;;
  4634  016A  0020               	movlb	0	; select bank0
  4635  016B  1112               	bcf	18,2	;volatile
  4636                           
  4637                           ;usb_device.c: 649: return;
  4638  016C  0008               	return
  4639  016D                     i1l403:	
  4640                           
  4641                           ;usb_device.c: 650: }
  4642                           ;usb_device.c: 662: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4643  016D  1810               	btfsc	16,0	;volatile
  4644  016E  1C12               	btfss	18,0	;volatile
  4645  016F  2980               	goto	i1l5289
  4646                           
  4647                           ;usb_device.c: 663: {
  4648                           ;usb_device.c: 664: USBDeviceInit();
  4649  0170  3184  247E  3181   	fcall	i1_USBDeviceInit
  4650                           
  4651                           ;usb_device.c: 668: {PIE2bits.USBIE = 1;};
  4652  0173  0021               	movlb	1	; select bank1
  4653  0174  1512               	bsf	18,2	;volatile
  4654                           
  4655                           ;usb_device.c: 670: USBDeviceState = DEFAULT_STATE;
  4656  0175  3004               	movlw	4
  4657  0176  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4658  0177  0864               	movf	??_USBDeviceTasks^(0+128),w
  4659  0178  0023               	movlb	3	; select bank3
  4660  0179  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  4661                           
  4662                           ;usb_device.c: 680: (UIR &= 0xFE);
  4663  017A  30FE               	movlw	254
  4664  017B  0021               	movlb	1	; select bank1
  4665  017C  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4666  017D  0864               	movf	??_USBDeviceTasks^(0+128),w
  4667  017E  003D               	movlb	29	; select bank29
  4668  017F  0590               	andwf	16,f	;volatile
  4669  0180                     i1l5289:	
  4670                           
  4671                           ;usb_device.c: 681: }
  4672                           ;usb_device.c: 686: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4673  0180  1A10               	btfsc	16,4	;volatile
  4674  0181  1E12               	btfss	18,4	;volatile
  4675  0182  298C               	goto	i1l5297
  4676                           
  4677                           ;usb_device.c: 687: {
  4678                           ;usb_device.c: 692: USBSuspend();
  4679  0183  318A  221F  3181   	fcall	_USBSuspend
  4680                           
  4681                           ;usb_device.c: 695: (UIR &= 0xEF);
  4682  0186  30EF               	movlw	239
  4683  0187  0021               	movlb	1	; select bank1
  4684  0188  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4685  0189  0864               	movf	??_USBDeviceTasks^(0+128),w
  4686  018A  003D               	movlb	29	; select bank29
  4687  018B  0590               	andwf	16,f	;volatile
  4688  018C                     i1l5297:	
  4689                           
  4690                           ;usb_device.c: 696: }
  4691                           ;usb_device.c: 698: if(UIRbits.SOFIF)
  4692  018C  1F10               	btfss	16,6	;volatile
  4693  018D  29B2               	goto	i1l5313
  4694                           
  4695                           ;usb_device.c: 699: {
  4696                           ;usb_device.c: 700: if(UIEbits.SOFIE)
  4697  018E  1F12               	btfss	18,6	;volatile
  4698  018F  29A0               	goto	i1l5303
  4699                           
  4700                           ;usb_device.c: 701: {
  4701                           ;usb_device.c: 702: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4702  0190  3073               	movlw	115
  4703  0191  0020               	movlb	0	; select bank0
  4704  0192  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4705  0193  3000               	movlw	0
  4706  0194  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4707  0195  3000               	movlw	0
  4708  0196  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4709  0197  3000               	movlw	0
  4710  0198  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4711  0199  3001               	movlw	1
  4712  019A  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4713  019B  3000               	movlw	0
  4714  019C  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4715  019D  318B  231F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4716  01A0                     i1l5303:	
  4717                           
  4718                           ;usb_device.c: 703: }
  4719                           ;usb_device.c: 704: (UIR &= 0xBF);
  4720  01A0  30BF               	movlw	191
  4721  01A1  0021               	movlb	1	; select bank1
  4722  01A2  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4723  01A3  0864               	movf	??_USBDeviceTasks^(0+128),w
  4724  01A4  003D               	movlb	29	; select bank29
  4725  01A5  0590               	andwf	16,f	;volatile
  4726                           
  4727                           ;usb_device.c: 729: if(USBStatusStageTimeoutCounter != 0u)
  4728  01A6  0023               	movlb	3	; select bank3
  4729  01A7  0851               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4730  01A8  1903               	btfsc	3,2
  4731  01A9  29AC               	goto	i1l5309
  4732                           
  4733                           ;usb_device.c: 730: {
  4734                           ;usb_device.c: 731: USBStatusStageTimeoutCounter--;
  4735  01AA  3001               	movlw	1
  4736  01AB  02D1               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4737  01AC                     i1l5309:	
  4738                           
  4739                           ;usb_device.c: 732: }
  4740                           ;usb_device.c: 738: if(USBStatusStageTimeoutCounter == 0)
  4741  01AC  08D1               	movf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4742  01AD  1D03               	skipz
  4743  01AE  29B2               	goto	i1l5313
  4744                           
  4745                           ;usb_device.c: 739: {
  4746                           ;usb_device.c: 740: USBCtrlEPAllowStatusStage();
  4747  01AF  318E  26BA  3181   	fcall	_USBCtrlEPAllowStatusStage
  4748  01B2                     i1l5313:	
  4749                           
  4750                           ;usb_device.c: 741: }
  4751                           ;usb_device.c: 743: }
  4752                           ;usb_device.c: 745: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4753  01B2  003D               	movlb	29	; select bank29
  4754  01B3  1A90               	btfsc	16,5	;volatile
  4755  01B4  1E92               	btfss	18,5	;volatile
  4756  01B5  29B9               	goto	i1l5319
  4757                           
  4758                           ;usb_device.c: 746: {
  4759                           ;usb_device.c: 747: USBStallHandler();
  4760  01B6  318A  225E  3181   	fcall	_USBStallHandler
  4761  01B9                     i1l5319:	
  4762                           
  4763                           ;usb_device.c: 748: }
  4764                           ;usb_device.c: 750: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4765  01B9  003D               	movlb	29	; select bank29
  4766  01BA  1890               	btfsc	16,1	;volatile
  4767  01BB  1C92               	btfss	18,1	;volatile
  4768  01BC  29CF               	goto	i1l5327
  4769                           
  4770                           ;usb_device.c: 751: {
  4771                           ;usb_device.c: 752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4772  01BD  30FF               	movlw	255
  4773  01BE  0020               	movlb	0	; select bank0
  4774  01BF  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4775  01C0  307F               	movlw	127
  4776  01C1  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4777  01C2  3000               	movlw	0
  4778  01C3  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4779  01C4  3000               	movlw	0
  4780  01C5  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4781  01C6  3001               	movlw	1
  4782  01C7  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4783  01C8  3000               	movlw	0
  4784  01C9  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4785  01CA  318B  231F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4786                           
  4787                           ;usb_device.c: 753: {UEIR = 0;};
  4788  01CD  003D               	movlb	29	; select bank29
  4789  01CE  0193               	clrf	19	;volatile
  4790  01CF                     i1l5327:	
  4791                           
  4792                           ;usb_device.c: 761: }
  4793                           ;usb_device.c: 768: if(USBDeviceState < DEFAULT_STATE)
  4794  01CF  3004               	movlw	4
  4795  01D0  0023               	movlb	3	; select bank3
  4796  01D1  024E               	subwf	_USBDeviceState^(0+384),w	;volatile
  4797  01D2  1803               	skipnc
  4798  01D3  29D7               	goto	i1l413
  4799                           
  4800                           ;usb_device.c: 769: {
  4801                           ;usb_device.c: 770: PIR2bits.USBIF = 0;;
  4802  01D4  0020               	movlb	0	; select bank0
  4803  01D5  1112               	bcf	18,2	;volatile
  4804                           
  4805                           ;usb_device.c: 771: return;
  4806  01D6  0008               	return
  4807  01D7                     i1l413:	
  4808                           
  4809                           ;usb_device.c: 772: }
  4810                           ;usb_device.c: 777: if(UIEbits.TRNIE)
  4811  01D7  003D               	movlb	29	; select bank29
  4812  01D8  1D92               	btfss	18,3	;volatile
  4813  01D9  2A2E               	goto	i1l414
  4814                           
  4815                           ;usb_device.c: 778: {
  4816                           ;usb_device.c: 779: for(i = 0; i < 4u; i++)
  4817  01DA  0021               	movlb	1	; select bank1
  4818  01DB  01E6               	clrf	USBDeviceTasks@i^(0+128)
  4819  01DC  2A27               	goto	L7
  4820  01DD                     i1l5337:	
  4821                           
  4822                           ;usb_device.c: 782: {
  4823                           ;usb_device.c: 784: USTATcopy.Val = USTAT;
  4824  01DD  080F               	movf	15,w	;volatile
  4825  01DE  0021               	movlb	1	; select bank1
  4826  01DF  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4827  01E0  0864               	movf	??_USBDeviceTasks^(0+128),w
  4828  01E1  0023               	movlb	3	; select bank3
  4829  01E2  00EE               	movwf	_USTATcopy^(0+384)	;volatile
  4830                           
  4831                           ;usb_device.c: 785: endpoint_number = USTATcopy.endpoint_number;
  4832  01E3  0C6E               	rrf	_USTATcopy^(0+384),w	;volatile
  4833  01E4  0021               	movlb	1	; select bank1
  4834  01E5  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4835  01E6  0CE4               	rrf	??_USBDeviceTasks^(0+128),f
  4836  01E7  0C64               	rrf	??_USBDeviceTasks^(0+128),w
  4837  01E8  390F               	andlw	15
  4838  01E9  00E5               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4839  01EA  0865               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4840  01EB  0023               	movlb	3	; select bank3
  4841  01EC  00D9               	movwf	_endpoint_number^(0+384)	;volatile
  4842                           
  4843                           ;usb_device.c: 787: (UIR &= 0xF7);
  4844  01ED  30F7               	movlw	247
  4845  01EE  0021               	movlb	1	; select bank1
  4846  01EF  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4847  01F0  0864               	movf	??_USBDeviceTasks^(0+128),w
  4848  01F1  003D               	movlb	29	; select bank29
  4849  01F2  0590               	andwf	16,f	;volatile
  4850                           
  4851                           ;usb_device.c: 792: if(USTATcopy.direction == 0)
  4852  01F3  0023               	movlb	3	; select bank3
  4853  01F4  196E               	btfsc	_USTATcopy^(0+384),2	;volatile
  4854  01F5  29F9               	goto	i1l5347
  4855                           
  4856                           ;usb_device.c: 793: {
  4857                           ;usb_device.c: 794: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4858  01F6  0859               	movf	_endpoint_number^(0+384),w	;volatile
  4859  01F7  3EB7               	addlw	_ep_data_out& (0+255)
  4860  01F8  29FC               	goto	L6
  4861  01F9                     i1l5347:	
  4862                           ;usb_device.c: 795: }
  4863                           
  4864                           
  4865                           ;usb_device.c: 796: else
  4866                           ;usb_device.c: 797: {
  4867                           ;usb_device.c: 798: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4868  01F9  0023               	movlb	3	; select bank3
  4869  01FA  0859               	movf	_endpoint_number^(0+384),w	;volatile
  4870  01FB  3EB4               	addlw	_ep_data_in& (0+255)
  4871  01FC                     L6:	
  4872  01FC  0086               	movwf	6
  4873  01FD  3001               	movlw	1	; select bank3/4
  4874  01FE  0087               	movwf	7
  4875  01FF  0801               	movf	1,w
  4876  0200  3901               	andlw	1
  4877  0201  0021               	movlb	1	; select bank1
  4878  0202  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4879  0203  3001               	movlw	1
  4880  0204  06E4               	xorwf	??_USBDeviceTasks^(0+128),f
  4881  0205  0801               	movf	1,w
  4882  0206  0664               	xorwf	??_USBDeviceTasks^(0+128),w
  4883  0207  39FE               	andlw	-2
  4884  0208  0664               	xorwf	??_USBDeviceTasks^(0+128),w
  4885  0209  0081               	movwf	1
  4886                           
  4887                           ;usb_device.c: 799: }
  4888                           ;usb_device.c: 804: if(endpoint_number == 0)
  4889  020A  0023               	movlb	3	; select bank3
  4890  020B  08D9               	movf	_endpoint_number^(0+384),f	;volatile
  4891  020C  1D03               	skipz
  4892  020D  2A12               	goto	i1l5353
  4893                           
  4894                           ;usb_device.c: 805: {
  4895                           ;usb_device.c: 806: USBCtrlEPService();
  4896  020E  3187  274B  3181   	fcall	_USBCtrlEPService
  4897                           
  4898                           ;usb_device.c: 807: }
  4899  0211  2A22               	goto	i1l5355
  4900  0212                     i1l5353:	
  4901                           
  4902                           ;usb_device.c: 808: else
  4903                           ;usb_device.c: 809: {
  4904                           ;usb_device.c: 810: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4905  0212  3072               	movlw	114
  4906  0213  0020               	movlb	0	; select bank0
  4907  0214  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4908  0215  3000               	movlw	0
  4909  0216  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4910  0217  30EE               	movlw	low _USTATcopy
  4911  0218  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4912  0219  3001               	movlw	high _USTATcopy
  4913  021A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4914  021B  3000               	movlw	0
  4915  021C  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4916  021D  3000               	movlw	0
  4917  021E  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4918  021F  318B  231F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4919  0222                     i1l5355:	
  4920                           ;usb_device.c: 813: else
  4921                           ;usb_device.c: 814: {
  4922                           ;usb_device.c: 815: break;
  4923                           
  4924                           ;usb_device.c: 811: }
  4925                           ;usb_device.c: 812: }
  4926                           
  4927  0222  3001               	movlw	1
  4928  0223  0021               	movlb	1	; select bank1
  4929  0224  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4930  0225  0864               	movf	??_USBDeviceTasks^(0+128),w
  4931  0226  07E6               	addwf	USBDeviceTasks@i^(0+128),f
  4932  0227                     L7:	
  4933  0227  3004               	movlw	4
  4934  0228  0266               	subwf	USBDeviceTasks@i^(0+128),w
  4935  0229  1803               	btfsc	3,0
  4936  022A  2A2E               	goto	i1l414
  4937                           
  4938                           ;usb_device.c: 780: {
  4939                           ;usb_device.c: 781: if(UIRbits.TRNIF)
  4940  022B  003D               	movlb	29	; select bank29
  4941  022C  1990               	btfsc	16,3	;volatile
  4942  022D  29DD               	goto	i1l5337
  4943  022E                     i1l414:	
  4944                           
  4945                           ;usb_device.c: 816: }
  4946                           ;usb_device.c: 817: }
  4947                           ;usb_device.c: 818: }
  4948                           ;usb_device.c: 820: PIR2bits.USBIF = 0;;
  4949  022E  0020               	movlb	0	; select bank0
  4950  022F  1112               	bcf	18,2	;volatile
  4951  0230  0008               	return
  4952  0231                     __end_of_USBDeviceTasks:	
  4953                           
  4954                           	psect	text15
  4955  047E                     __ptext15:	
  4956 ;; *************** function i1_USBDeviceInit *****************
  4957 ;; Defined at:
  4958 ;;		line 292 in file "../../../../../../framework/usb/src/usb_device.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  USBDeviceIni    2    2[COMMON] PTR unsigned char 
  4963 ;;		 -> UEP1(1), 
  4964 ;;  USBDeviceIni    1    5[COMMON] unsigned char 
  4965 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;		None               void
  4968 ;; Registers used:
  4969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;Total ram usage:        6 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_USBDeviceTasks
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function i1_USBDeviceInit
  4990  047E                     i1_USBDeviceInit:	
  4991                           
  4992                           ;usb_device.c: 294: uint8_t i;
  4993                           ;usb_device.c: 296: {PIE2bits.USBIE = 0;};
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4997  047E  0021               	movlb	1	; select bank1
  4998  047F  1112               	bcf	18,2	;volatile
  4999                           
  5000                           ;usb_device.c: 299: {UEIR = 0;};
  5001  0480  003D               	movlb	29	; select bank29
  5002  0481  0193               	clrf	19	;volatile
  5003                           
  5004                           ;usb_device.c: 302: {UIR = 0;};
  5005  0482  0190               	clrf	16	;volatile
  5006                           
  5007                           ;usb_device.c: 305: UEP0 = 0;
  5008  0483  0198               	clrf	24	;volatile
  5009                           
  5010                           ;usb_device.c: 307: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5011  0484  300E               	movlw	14
  5012  0485  00F3               	movwf	i1USBDeviceInit@p+1
  5013  0486  3099               	movlw	153
  5014  0487  00F2               	movwf	i1USBDeviceInit@p
  5015  0488  01F4               	clrf	i1USBDeviceInit@i_1189
  5016  0489  3002               	movlw	2
  5017  048A  0274               	subwf	i1USBDeviceInit@i_1189,w
  5018  048B  1803               	btfsc	3,0
  5019  048C  2C9E               	goto	i1l3777
  5020  048D                     i1l3769:	
  5021  048D  0872               	movf	i1USBDeviceInit@p,w
  5022  048E  0086               	movwf	6
  5023  048F  0873               	movf	i1USBDeviceInit@p+1,w
  5024  0490  0087               	movwf	7
  5025  0491  0181               	clrf	1
  5026  0492  3001               	movlw	1
  5027  0493  07F2               	addwf	i1USBDeviceInit@p,f
  5028  0494  3000               	movlw	0
  5029  0495  3DF3               	addwfc	i1USBDeviceInit@p+1,f
  5030  0496  3001               	movlw	1
  5031  0497  00F0               	movwf	??i1_USBDeviceInit
  5032  0498  0870               	movf	??i1_USBDeviceInit,w
  5033  0499  07F4               	addwf	i1USBDeviceInit@i_1189,f
  5034  049A  3002               	movlw	2
  5035  049B  0274               	subwf	i1USBDeviceInit@i_1189,w
  5036  049C  1C03               	skipc
  5037  049D  2C8D               	goto	i1l3769
  5038  049E                     i1l3777:	
  5039                           
  5040                           ;usb_device.c: 309: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5041  049E  3016               	movlw	22
  5042  049F  003D               	movlb	29	; select bank29
  5043  04A0  0091               	movwf	17	;volatile
  5044  04A1  309F               	movlw	159
  5045  04A2  0097               	movwf	23	;volatile
  5046  04A3  307B               	movlw	123
  5047  04A4  0092               	movwf	18	;volatile
  5048                           
  5049                           ;usb_device.c: 312: ;
  5050                           ;usb_device.c: 315: ;
  5051                           ;usb_device.c: 318: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  5052  04A5  01F5               	clrf	i1USBDeviceInit@i
  5053  04A6  300C               	movlw	12
  5054  04A7  0275               	subwf	i1USBDeviceInit@i,w
  5055  04A8  1803               	btfsc	3,0
  5056  04A9  2CC3               	goto	i1l391
  5057  04AA                     i1l3785:	
  5058                           
  5059                           ;usb_device.c: 319: {
  5060                           ;usb_device.c: 320: BDT[i].Val = 0x00;
  5061  04AA  0875               	movf	i1USBDeviceInit@i,w
  5062  04AB  00F0               	movwf	??i1_USBDeviceInit
  5063  04AC  3001               	movlw	1
  5064  04AD                     u307_25:	
  5065  04AD  35F0               	lslf	??i1_USBDeviceInit,f
  5066  04AE  3EFF               	addlw	-1
  5067  04AF  1D03               	skipz
  5068  04B0  2CAD               	goto	u307_25
  5069  04B1  3570               	lslf	??i1_USBDeviceInit,w
  5070  04B2  3E20               	addlw	32
  5071  04B3  0086               	movwf	6
  5072  04B4  0187               	clrf	7
  5073  04B5  3000               	movlw	0
  5074  04B6  3FC0               	movwi [0]fsr1
  5075  04B7  3000               	movlw	0
  5076  04B8  3FC1               	movwi [1]fsr1
  5077  04B9  3FC2               	movwi [2]fsr1
  5078  04BA  3FC3               	movwi [3]fsr1
  5079  04BB  3001               	movlw	1
  5080  04BC  00F0               	movwf	??i1_USBDeviceInit
  5081  04BD  0870               	movf	??i1_USBDeviceInit,w
  5082  04BE  07F5               	addwf	i1USBDeviceInit@i,f
  5083  04BF  300C               	movlw	12
  5084  04C0  0275               	subwf	i1USBDeviceInit@i,w
  5085  04C1  1C03               	skipc
  5086  04C2  2CAA               	goto	i1l3785
  5087  04C3                     i1l391:	
  5088                           
  5089                           ;usb_device.c: 321: }
  5090                           ;usb_device.c: 324: UCONbits.PPBRST = 1;
  5091  04C3  003D               	movlb	29	; select bank29
  5092  04C4  170E               	bsf	14,6	;volatile
  5093                           
  5094                           ;usb_device.c: 327: UADDR = 0x00;
  5095  04C5  0196               	clrf	22	;volatile
  5096                           
  5097                           ;usb_device.c: 330: UCONbits.PKTDIS = 0;
  5098  04C6  120E               	bcf	14,4	;volatile
  5099                           
  5100                           ;usb_device.c: 333: UCONbits.PPBRST = 0;
  5101  04C7  130E               	bcf	14,6	;volatile
  5102  04C8                     i1l3805:	
  5103                           ;usb_device.c: 336: while(UIRbits.TRNIF == 1)
  5104                           
  5105  04C8  003D               	movlb	29	; select bank29
  5106  04C9  1D90               	btfss	16,3	;volatile
  5107  04CA  2CD6               	goto	i1l3807
  5108                           
  5109                           ;usb_device.c: 337: {
  5110                           ;usb_device.c: 338: (UIR &= 0xF7);
  5111  04CB  30F7               	movlw	247
  5112  04CC  00F0               	movwf	??i1_USBDeviceInit
  5113  04CD  0870               	movf	??i1_USBDeviceInit,w
  5114  04CE  0590               	andwf	16,f	;volatile
  5115                           
  5116                           ;usb_device.c: 340: inPipes[0].info.Val = 0;
  5117  04CF  0021               	movlb	1	; select bank1
  5118  04D0  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  5119                           
  5120                           ;usb_device.c: 341: outPipes[0].info.Val = 0;
  5121  04D1  0023               	movlb	3	; select bank3
  5122  04D2  01AC               	clrf	(_outPipes^(0+384)+2)	;volatile
  5123                           
  5124                           ;usb_device.c: 342: outPipes[0].wCount.Val = 0;
  5125  04D3  01AD               	clrf	(_outPipes^(0+384)+3)	;volatile
  5126  04D4  01AE               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5127  04D5  2CC8               	goto	i1l3805
  5128  04D6                     i1l3807:	
  5129                           
  5130                           ;usb_device.c: 343: }
  5131                           ;usb_device.c: 347: USBStatusStageEnabledFlag1 = 1;
  5132  04D6  3001               	movlw	1
  5133  04D7  00F0               	movwf	??i1_USBDeviceInit
  5134  04D8  0870               	movf	??i1_USBDeviceInit,w
  5135  04D9  0023               	movlb	3	; select bank3
  5136  04DA  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5137                           
  5138                           ;usb_device.c: 348: USBStatusStageEnabledFlag2 = 1;
  5139  04DB  3001               	movlw	1
  5140  04DC  00F0               	movwf	??i1_USBDeviceInit
  5141  04DD  0870               	movf	??i1_USBDeviceInit,w
  5142  04DE  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5143                           
  5144                           ;usb_device.c: 350: USBDeferINDataStagePackets = 0;
  5145  04DF  01CB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5146                           
  5147                           ;usb_device.c: 351: USBDeferOUTDataStagePackets = 0;
  5148  04E0  01CC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5149                           
  5150                           ;usb_device.c: 352: USBBusIsSuspended = 0;
  5151  04E1  01CA               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5152                           
  5153                           ;usb_device.c: 356: for(i = 0; i < (uint8_t)(2+1u); i++)
  5154  04E2  01F5               	clrf	i1USBDeviceInit@i
  5155  04E3  3003               	movlw	3
  5156  04E4  0275               	subwf	i1USBDeviceInit@i,w
  5157  04E5  1803               	btfsc	3,0
  5158  04E6  2D07               	goto	i1l3825
  5159  04E7                     i1l3819:	
  5160                           
  5161                           ;usb_device.c: 357: {
  5162                           ;usb_device.c: 358: pBDTEntryIn[i] = 0u;
  5163  04E7  0875               	movf	i1USBDeviceInit@i,w
  5164  04E8  3EBA               	addlw	_pBDTEntryIn& (0+255)
  5165  04E9  0086               	movwf	6
  5166  04EA  3001               	movlw	1	; select bank3/4
  5167  04EB  0087               	movwf	7
  5168  04EC  0181               	clrf	1
  5169                           
  5170                           ;usb_device.c: 359: pBDTEntryOut[i] = 0u;
  5171  04ED  0875               	movf	i1USBDeviceInit@i,w
  5172  04EE  3EBD               	addlw	_pBDTEntryOut& (0+255)
  5173  04EF  0086               	movwf	6
  5174  04F0  3001               	movlw	1	; select bank3/4
  5175  04F1  0087               	movwf	7
  5176  04F2  0181               	clrf	1
  5177                           
  5178                           ;usb_device.c: 360: ep_data_in[i].Val = 0u;
  5179  04F3  0875               	movf	i1USBDeviceInit@i,w
  5180  04F4  3EB4               	addlw	_ep_data_in& (0+255)
  5181  04F5  0086               	movwf	6
  5182  04F6  3001               	movlw	1	; select bank3/4
  5183  04F7  0087               	movwf	7
  5184  04F8  0181               	clrf	1
  5185                           
  5186                           ;usb_device.c: 361: ep_data_out[i].Val = 0u;
  5187  04F9  0875               	movf	i1USBDeviceInit@i,w
  5188  04FA  3EB7               	addlw	_ep_data_out& (0+255)
  5189  04FB  0086               	movwf	6
  5190  04FC  3001               	movlw	1	; select bank3/4
  5191  04FD  0087               	movwf	7
  5192  04FE  0181               	clrf	1
  5193  04FF  3001               	movlw	1
  5194  0500  00F0               	movwf	??i1_USBDeviceInit
  5195  0501  0870               	movf	??i1_USBDeviceInit,w
  5196  0502  07F5               	addwf	i1USBDeviceInit@i,f
  5197  0503  3003               	movlw	3
  5198  0504  0275               	subwf	i1USBDeviceInit@i,w
  5199  0505  1C03               	skipc
  5200  0506  2CE7               	goto	i1l3819
  5201  0507                     i1l3825:	
  5202                           
  5203                           ;usb_device.c: 362: }
  5204                           ;usb_device.c: 365: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5205  0507  3028               	movlw	40
  5206  0508  00F0               	movwf	??i1_USBDeviceInit
  5207  0509  0870               	movf	??i1_USBDeviceInit,w
  5208  050A  0023               	movlb	3	; select bank3
  5209  050B  00BA               	movwf	_pBDTEntryIn^(0+384)
  5210                           
  5211                           ;usb_device.c: 367: UEP0 = 0x06|0x10;
  5212  050C  3016               	movlw	22
  5213  050D  003D               	movlb	29	; select bank29
  5214  050E  0098               	movwf	24	;volatile
  5215                           
  5216                           ;usb_device.c: 369: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5217  050F  3050               	movlw	80
  5218  0510  00F0               	movwf	??i1_USBDeviceInit
  5219  0511  3000               	movlw	0
  5220  0512  00F1               	movwf	??i1_USBDeviceInit+1
  5221  0513  0870               	movf	??i1_USBDeviceInit,w
  5222  0514  0020               	movlb	0	; select bank0
  5223  0515  00A2               	movwf	34	;volatile
  5224  0516  0871               	movf	??i1_USBDeviceInit+1,w
  5225  0517  00A3               	movwf	35	;volatile
  5226                           
  5227                           ;usb_device.c: 370: BDT[0].CNT = 8;
  5228  0518  3008               	movlw	8
  5229  0519  00A1               	movwf	33	;volatile
  5230                           
  5231                           ;usb_device.c: 371: BDT[0].STAT.Val = 0x00|0x04;
  5232  051A  3004               	movlw	4
  5233  051B  00F0               	movwf	??i1_USBDeviceInit
  5234  051C  0870               	movf	??i1_USBDeviceInit,w
  5235  051D  00A0               	movwf	32	;volatile
  5236                           
  5237                           ;usb_device.c: 372: BDT[0].STAT.Val |= 0x80;
  5238  051E  17A0               	bsf	32,7	;volatile
  5239                           
  5240                           ;usb_device.c: 375: USBActiveConfiguration = 0;
  5241  051F  0023               	movlb	3	; select bank3
  5242  0520  01ED               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  5243                           
  5244                           ;usb_device.c: 378: USBDeviceState = DETACHED_STATE;
  5245  0521  01CE               	clrf	_USBDeviceState^(0+384)	;volatile
  5246  0522  0008               	return
  5247  0523                     __end_ofi1_USBDeviceInit:	
  5248                           
  5249                           	psect	text16
  5250  0A01                     __ptext16:	
  5251 ;; *************** function _USBWakeFromSuspend *****************
  5252 ;; Defined at:
  5253 ;;		line 2296 in file "../../../../../../framework/usb/src/usb_device.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;		None               void
  5260 ;; Registers used:
  5261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;Total ram usage:        1 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    5
  5274 ;; This function calls:
  5275 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5276 ;; This function is called by:
  5277 ;;		_USBDeviceTasks
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _USBWakeFromSuspend
  5283  0A01                     _USBWakeFromSuspend:	
  5284                           
  5285                           ;usb_device.c: 2298: USBBusIsSuspended = 0;
  5286                           
  5287                           ;incstack = 0
  5288                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5289  0A01  0023               	movlb	3	; select bank3
  5290  0A02  01CA               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5291                           
  5292                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5293  0A03  3074               	movlw	116
  5294  0A04  0020               	movlb	0	; select bank0
  5295  0A05  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5296  0A06  3000               	movlw	0
  5297  0A07  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5298  0A08  3000               	movlw	0
  5299  0A09  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5300  0A0A  3000               	movlw	0
  5301  0A0B  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5302  0A0C  3000               	movlw	0
  5303  0A0D  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5304  0A0E  3000               	movlw	0
  5305  0A0F  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5306  0A10  318B  231F  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5307                           
  5308                           ;usb_device.c: 2311: UCONbits.SUSPND = 0;
  5309  0A13  003D               	movlb	29	; select bank29
  5310  0A14  108E               	bcf	14,1	;volatile
  5311                           
  5312                           ;usb_device.c: 2316: UIEbits.ACTVIE = 0;
  5313  0A15  1112               	bcf	18,2	;volatile
  5314  0A16                     i1l5201:	
  5315                           ;usb_device.c: 2334: while(UIRbits.ACTVIF)
  5316                           
  5317  0A16  1D10               	btfss	16,2	;volatile
  5318  0A17  0008               	return
  5319                           
  5320                           ;usb_device.c: 2336: {
  5321                           ;usb_device.c: 2337: (UIR &= 0xFB);
  5322  0A18  30FB               	movlw	251
  5323  0A19  0020               	movlb	0	; select bank0
  5324  0A1A  00E8               	movwf	??_USBWakeFromSuspend
  5325  0A1B  0868               	movf	??_USBWakeFromSuspend,w
  5326  0A1C  003D               	movlb	29	; select bank29
  5327  0A1D  0590               	andwf	16,f	;volatile
  5328  0A1E  2A16               	goto	i1l5201
  5329  0A1F                     __end_of_USBWakeFromSuspend:	
  5330                           
  5331                           	psect	text17
  5332  0A1F                     __ptext17:	
  5333 ;; *************** function _USBSuspend *****************
  5334 ;; Defined at:
  5335 ;;		line 2239 in file "../../../../../../framework/usb/src/usb_device.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;		None               void
  5342 ;; Registers used:
  5343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;Total ram usage:        1 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    5
  5356 ;; This function calls:
  5357 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5358 ;; This function is called by:
  5359 ;;		_USBDeviceTasks
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _USBSuspend
  5365  0A1F                     _USBSuspend:	
  5366                           
  5367                           ;usb_device.c: 2264: UIEbits.ACTVIE = 1;
  5368                           
  5369                           ;incstack = 0
  5370                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5371  0A1F  003D               	movlb	29	; select bank29
  5372  0A20  1512               	bsf	18,2	;volatile
  5373                           
  5374                           ;usb_device.c: 2265: (UIR &= 0xEF);
  5375  0A21  30EF               	movlw	239
  5376  0A22  0020               	movlb	0	; select bank0
  5377  0A23  00E8               	movwf	??_USBSuspend
  5378  0A24  0868               	movf	??_USBSuspend,w
  5379  0A25  003D               	movlb	29	; select bank29
  5380  0A26  0590               	andwf	16,f	;volatile
  5381                           
  5382                           ;usb_device.c: 2268: UCONbits.SUSPND = 1;
  5383  0A27  148E               	bsf	14,1	;volatile
  5384                           
  5385                           ;usb_device.c: 2271: USBBusIsSuspended = 1;
  5386  0A28  3001               	movlw	1
  5387  0A29  0020               	movlb	0	; select bank0
  5388  0A2A  00E8               	movwf	??_USBSuspend
  5389  0A2B  0868               	movf	??_USBSuspend,w
  5390  0A2C  0023               	movlb	3	; select bank3
  5391  0A2D  00CA               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5392                           
  5393                           ;usb_device.c: 2278: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5394  0A2E  3075               	movlw	117
  5395  0A2F  0020               	movlb	0	; select bank0
  5396  0A30  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5397  0A31  3000               	movlw	0
  5398  0A32  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5399  0A33  3000               	movlw	0
  5400  0A34  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5401  0A35  3000               	movlw	0
  5402  0A36  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5403  0A37  3000               	movlw	0
  5404  0A38  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5405  0A39  3000               	movlw	0
  5406  0A3A  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5407  0A3B  318B  231F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5408  0A3D  0008               	return
  5409  0A3E                     __end_of_USBSuspend:	
  5410                           
  5411                           	psect	text18
  5412  0A5E                     __ptext18:	
  5413 ;; *************** function _USBStallHandler *****************
  5414 ;; Defined at:
  5415 ;;		line 2196 in file "../../../../../../framework/usb/src/usb_device.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;		None               void
  5422 ;; Registers used:
  5423 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;Total ram usage:        1 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_USBDeviceTasks
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _USBStallHandler
  5444  0A5E                     _USBStallHandler:	
  5445                           
  5446                           ;usb_device.c: 2208: if(UEP0bits.EPSTALL == 1)
  5447                           
  5448                           ;incstack = 0
  5449                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5450  0A5E  003D               	movlb	29	; select bank29
  5451  0A5F  1C18               	btfss	24,0	;volatile
  5452  0A60  2A7F               	goto	i1l3723
  5453                           
  5454                           ;usb_device.c: 2209: {
  5455                           ;usb_device.c: 2211: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5456  0A61  0021               	movlb	1	; select bank1
  5457  0A62  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5458  0A63  0086               	movwf	6
  5459  0A64  0187               	clrf	7
  5460  0A65  0801               	movf	1,w
  5461  0A66  3A80               	xorlw	128
  5462  0A67  1D03               	skipz
  5463  0A68  2A7D               	goto	i1l3721
  5464  0A69  0023               	movlb	3	; select bank3
  5465  0A6A  083A               	movf	_pBDTEntryIn^(0+384),w
  5466  0A6B  0086               	movwf	6
  5467  0A6C  0187               	clrf	7
  5468  0A6D  0801               	movf	1,w
  5469  0A6E  3A84               	xorlw	132
  5470  0A6F  1D03               	skipz
  5471  0A70  2A7D               	goto	i1l3721
  5472                           
  5473                           ;usb_device.c: 2212: {
  5474                           ;usb_device.c: 2214: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5475  0A71  300C               	movlw	12
  5476  0A72  00F0               	movwf	??_USBStallHandler
  5477  0A73  0021               	movlb	1	; select bank1
  5478  0A74  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5479  0A75  0086               	movwf	6
  5480  0A76  0187               	clrf	7
  5481  0A77  0870               	movf	??_USBStallHandler,w
  5482  0A78  0081               	movwf	1
  5483                           
  5484                           ;usb_device.c: 2215: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5485  0A79  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5486  0A7A  0086               	movwf	6
  5487  0A7B  0187               	clrf	7
  5488  0A7C  1781               	bsf	1,7
  5489  0A7D                     i1l3721:	
  5490                           
  5491                           ;usb_device.c: 2216: }
  5492                           ;usb_device.c: 2217: UEP0bits.EPSTALL = 0;
  5493  0A7D  003D               	movlb	29	; select bank29
  5494  0A7E  1018               	bcf	24,0	;volatile
  5495  0A7F                     i1l3723:	
  5496                           
  5497                           ;usb_device.c: 2218: }
  5498                           ;usb_device.c: 2220: (UIR &= 0xDF);
  5499  0A7F  30DF               	movlw	223
  5500  0A80  00F0               	movwf	??_USBStallHandler
  5501  0A81  0870               	movf	??_USBStallHandler,w
  5502  0A82  0590               	andwf	16,f	;volatile
  5503  0A83  0008               	return
  5504  0A84                     __end_of_USBStallHandler:	
  5505                           
  5506                           	psect	text19
  5507  074B                     __ptext19:	
  5508 ;; *************** function _USBCtrlEPService *****************
  5509 ;; Defined at:
  5510 ;;		line 2363 in file "../../../../../../framework/usb/src/usb_device.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  setup_cnt       1    3[BANK1 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;Total ram usage:        4 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    8
  5531 ;; This function calls:
  5532 ;;		_USBCtrlTrfInHandler
  5533 ;;		_USBCtrlTrfOutHandler
  5534 ;;		_USBCtrlTrfSetupHandler
  5535 ;; This function is called by:
  5536 ;;		_USBDeviceTasks
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function _USBCtrlEPService
  5542  074B                     _USBCtrlEPService:	
  5543                           
  5544                           ;usb_device.c: 2369: USBStatusStageTimeoutCounter = (uint8_t)45;
  5545                           
  5546                           ;incstack = 0
  5547                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5548  074B  302D               	movlw	45
  5549  074C  0021               	movlb	1	; select bank1
  5550  074D  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5551  074E  0860               	movf	??_USBCtrlEPService^(0+128),w
  5552  074F  0023               	movlb	3	; select bank3
  5553  0750  00D1               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5554                           
  5555                           ;usb_device.c: 2373: if((USTATcopy.Val & ~0x02) == 0x00)
  5556  0751  086E               	movf	_USTATcopy^(0+384),w	;volatile
  5557  0752  39FD               	andlw	253
  5558  0753  1D03               	btfss	3,2
  5559  0754  2FB0               	goto	i1l5243
  5560                           
  5561                           ;usb_device.c: 2374: {
  5562                           ;usb_device.c: 2377: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5563  0755  366E               	lsrf	_USTATcopy^(0+384),w	;volatile
  5564  0756  393F               	andlw	63
  5565  0757  0021               	movlb	1	; select bank1
  5566  0758  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5567  0759  3001               	movlw	1
  5568  075A                     u477_25:	
  5569  075A  35E0               	lslf	??_USBCtrlEPService^(0+128),f
  5570  075B  3EFF               	addlw	-1
  5571  075C  1D03               	skipz
  5572  075D  2F5A               	goto	u477_25
  5573  075E  3560               	lslf	??_USBCtrlEPService^(0+128),w
  5574  075F  3E20               	addlw	32
  5575  0760  00E1               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5576  0761  0861               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5577  0762  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5578                           
  5579                           ;usb_device.c: 2385: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5580  0763  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5581  0764  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5582  0765  0860               	movf	??_USBCtrlEPService^(0+128),w
  5583  0766  00E9               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5584                           
  5585                           ;usb_device.c: 2387: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5586  0767  3004               	movlw	4
  5587  0768  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5588  0769  0860               	movf	??_USBCtrlEPService^(0+128),w
  5589  076A  06E9               	xorwf	_pBDTEntryEP0OutNext^(0+128),f
  5590                           
  5591                           ;usb_device.c: 2390: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5592  076B  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5593  076C  0086               	movwf	6
  5594  076D  0187               	clrf	7
  5595  076E  0C01               	rrf	1,w
  5596  076F  0C89               	rrf	9,f
  5597  0770  390F               	andlw	15
  5598  0771  3A0D               	xorlw	13
  5599  0772  1D03               	skipz
  5600  0773  2FAD               	goto	i1l5241
  5601                           
  5602                           ;usb_device.c: 2391: {
  5603                           ;usb_device.c: 2392: unsigned char setup_cnt;
  5604                           ;usb_device.c: 2398: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5605  0774  01E3               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  5606  0775  3008               	movlw	8
  5607  0776  0263               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  5608  0777  1803               	btfsc	3,0
  5609  0778  2F9E               	goto	i1l5237
  5610  0779                     i1l5231:	
  5611                           
  5612                           ;usb_device.c: 2399: {
  5613                           ;usb_device.c: 2400: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5614  0779  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5615  077A  3E02               	addlw	2
  5616  077B  0086               	movwf	6
  5617  077C  0187               	clrf	7
  5618  077D  3F40               	moviw [0]fsr1
  5619  077E  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5620  077F  3F41               	moviw [1]fsr1
  5621  0780  00E1               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5622  0781  0860               	movf	??_USBCtrlEPService^(0+128),w
  5623  0782  0086               	movwf	6
  5624  0783  0861               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5625  0784  0087               	movwf	7
  5626  0785  0801               	movf	1,w
  5627  0786  00E2               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5628  0787  0863               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  5629  0788  3E50               	addlw	80
  5630  0789  0086               	movwf	6
  5631  078A  0187               	clrf	7
  5632  078B  0862               	movf	(??_USBCtrlEPService+2)^(0+128),w
  5633  078C  0081               	movwf	1
  5634                           
  5635                           ;usb_device.c: 2401: pBDTEntryEP0OutCurrent->ADR++;
  5636  078D  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5637  078E  3E02               	addlw	2
  5638  078F  0086               	movwf	6
  5639  0790  0187               	clrf	7
  5640  0791  3001               	movlw	1
  5641  0792  0781               	addwf	1,f
  5642  0793  3141               	addfsr 1,1
  5643  0794  1803               	skipnc
  5644  0795  0A81               	incf	1,f
  5645  0796  3001               	movlw	1
  5646  0797  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5647  0798  0860               	movf	??_USBCtrlEPService^(0+128),w
  5648  0799  07E3               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  5649  079A  3008               	movlw	8
  5650  079B  0263               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  5651  079C  1C03               	skipc
  5652  079D  2F79               	goto	i1l5231
  5653  079E                     i1l5237:	
  5654                           
  5655                           ;usb_device.c: 2402: }
  5656                           ;usb_device.c: 2403: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5657  079E  3050               	movlw	80
  5658  079F  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5659  07A0  3000               	movlw	0
  5660  07A1  00E1               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5661  07A2  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5662  07A3  3E02               	addlw	2
  5663  07A4  0086               	movwf	6
  5664  07A5  0187               	clrf	7
  5665  07A6  0860               	movf	??_USBCtrlEPService^(0+128),w
  5666  07A7  3FC0               	movwi [0]fsr1
  5667  07A8  0861               	movf	(??_USBCtrlEPService^(0+128)+1),w
  5668  07A9  3FC1               	movwi [1]fsr1
  5669                           
  5670                           ;usb_device.c: 2406: USBCtrlTrfSetupHandler();
  5671  07AA  318B  23F0         	fcall	_USBCtrlTrfSetupHandler
  5672                           
  5673                           ;usb_device.c: 2407: }
  5674  07AC  0008               	return
  5675  07AD                     i1l5241:	
  5676                           
  5677                           ;usb_device.c: 2408: else
  5678                           ;usb_device.c: 2409: {
  5679                           ;usb_device.c: 2411: USBCtrlTrfOutHandler();
  5680  07AD  318A  2284         	fcall	_USBCtrlTrfOutHandler
  5681                           
  5682                           ;usb_device.c: 2412: }
  5683                           ;usb_device.c: 2413: }
  5684  07AF  0008               	return
  5685  07B0                     i1l5243:	
  5686                           
  5687                           ;usb_device.c: 2414: else if((USTATcopy.Val & ~0x02) == 0x04)
  5688  07B0  30FD               	movlw	253
  5689  07B1  0023               	movlb	3	; select bank3
  5690  07B2  056E               	andwf	_USTATcopy^(0+384),w	;volatile
  5691  07B3  0021               	movlb	1	; select bank1
  5692  07B4  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5693  07B5  0860               	movf	??_USBCtrlEPService^(0+128),w
  5694  07B6  3A04               	xorlw	4
  5695  07B7  1D03               	skipz
  5696  07B8  0008               	return
  5697                           
  5698                           ;usb_device.c: 2415: {
  5699                           ;usb_device.c: 2418: USBCtrlTrfInHandler();
  5700  07B9  318E  2656         	fcall	_USBCtrlTrfInHandler
  5701  07BB  0008               	return
  5702  07BC                     __end_of_USBCtrlEPService:	
  5703                           
  5704                           	psect	text20
  5705  0BF0                     __ptext20:	
  5706 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5707 ;; Defined at:
  5708 ;;		line 2463 in file "../../../../../../framework/usb/src/usb_device.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;		None               void
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    7
  5729 ;; This function calls:
  5730 ;;		_USBCheckStdRequest
  5731 ;;		_USBCtrlEPServiceComplete
  5732 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5733 ;; This function is called by:
  5734 ;;		_USBCtrlEPService
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           
  5739                           ;psect for function _USBCtrlTrfSetupHandler
  5740  0BF0                     _USBCtrlTrfSetupHandler:	
  5741                           
  5742                           ;usb_device.c: 2468: shortPacketStatus = 0;
  5743                           
  5744                           ;incstack = 0
  5745                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5746  0BF0  0023               	movlb	3	; select bank3
  5747  0BF1  01DB               	clrf	_shortPacketStatus^(0+384)	;volatile
  5748                           
  5749                           ;usb_device.c: 2469: USBDeferStatusStagePacket = 0;
  5750  0BF2  01CD               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5751                           
  5752                           ;usb_device.c: 2470: USBDeferINDataStagePackets = 0;
  5753  0BF3  01CB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5754                           
  5755                           ;usb_device.c: 2471: USBDeferOUTDataStagePackets = 0;
  5756  0BF4  01CC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5757                           
  5758                           ;usb_device.c: 2472: BothEP0OutUOWNsSet = 0;
  5759  0BF5  01C6               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5760                           
  5761                           ;usb_device.c: 2473: controlTransferState = 0;
  5762  0BF6  01D7               	clrf	_controlTransferState^(0+384)	;volatile
  5763                           
  5764                           ;usb_device.c: 2482: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5765  0BF7  307F               	movlw	127
  5766  0BF8  0020               	movlb	0	; select bank0
  5767  0BF9  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5768  0BFA  0023               	movlb	3	; select bank3
  5769  0BFB  083A               	movf	_pBDTEntryIn^(0+384),w
  5770  0BFC  0086               	movwf	6
  5771  0BFD  0187               	clrf	7
  5772  0BFE  0020               	movlb	0	; select bank0
  5773  0BFF  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5774  0C00  0581               	andwf	1,f
  5775                           
  5776                           ;usb_device.c: 2483: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5777  0C01  3004               	movlw	4
  5778  0C02  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5779  0C03  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5780  0C04  0023               	movlb	3	; select bank3
  5781  0C05  06BA               	xorwf	_pBDTEntryIn^(0+384),f
  5782                           
  5783                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5784  0C06  307F               	movlw	127
  5785  0C07  0020               	movlb	0	; select bank0
  5786  0C08  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5787  0C09  0023               	movlb	3	; select bank3
  5788  0C0A  083A               	movf	_pBDTEntryIn^(0+384),w
  5789  0C0B  0086               	movwf	6
  5790  0C0C  0187               	clrf	7
  5791  0C0D  0020               	movlb	0	; select bank0
  5792  0C0E  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5793  0C0F  0581               	andwf	1,f
  5794                           
  5795                           ;usb_device.c: 2485: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5796  0C10  3004               	movlw	4
  5797  0C11  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5798  0C12  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5799  0C13  0023               	movlb	3	; select bank3
  5800  0C14  06BA               	xorwf	_pBDTEntryIn^(0+384),f
  5801                           
  5802                           ;usb_device.c: 2486: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5803  0C15  307F               	movlw	127
  5804  0C16  0020               	movlb	0	; select bank0
  5805  0C17  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5806  0C18  0021               	movlb	1	; select bank1
  5807  0C19  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5808  0C1A  0086               	movwf	6
  5809  0C1B  0187               	clrf	7
  5810  0C1C  0020               	movlb	0	; select bank0
  5811  0C1D  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5812  0C1E  0581               	andwf	1,f
  5813                           
  5814                           ;usb_device.c: 2488: inPipes[0].info.Val = 0;
  5815  0C1F  0021               	movlb	1	; select bank1
  5816  0C20  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  5817                           
  5818                           ;usb_device.c: 2489: inPipes[0].wCount.Val = 0;
  5819  0C21  01ED               	clrf	(_inPipes^(0+128)+3)	;volatile
  5820  0C22  01EE               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  5821                           
  5822                           ;usb_device.c: 2490: outPipes[0].info.Val = 0;
  5823  0C23  0023               	movlb	3	; select bank3
  5824  0C24  01AC               	clrf	(_outPipes^(0+384)+2)	;volatile
  5825                           
  5826                           ;usb_device.c: 2491: outPipes[0].wCount.Val = 0;
  5827  0C25  01AD               	clrf	(_outPipes^(0+384)+3)	;volatile
  5828  0C26  01AE               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5829                           
  5830                           ;usb_device.c: 2497: USBCheckStdRequest();
  5831  0C27  318D  25F3  318B   	fcall	_USBCheckStdRequest
  5832                           
  5833                           ;usb_device.c: 2498: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5834  0C2A  3003               	movlw	3
  5835  0C2B  0020               	movlb	0	; select bank0
  5836  0C2C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5837  0C2D  3000               	movlw	0
  5838  0C2E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5839  0C2F  3000               	movlw	0
  5840  0C30  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5841  0C31  3000               	movlw	0
  5842  0C32  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5843  0C33  3000               	movlw	0
  5844  0C34  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5845  0C35  3000               	movlw	0
  5846  0C36  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5847  0C37  318B  231F  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5848                           
  5849                           ;usb_device.c: 2511: USBCtrlEPServiceComplete();
  5850  0C3A  3186  264D         	fcall	_USBCtrlEPServiceComplete
  5851  0C3C  0008               	return
  5852  0C3D                     __end_of_USBCtrlTrfSetupHandler:	
  5853                           
  5854                           	psect	text21
  5855  064D                     __ptext21:	
  5856 ;; *************** function _USBCtrlEPServiceComplete *****************
  5857 ;; Defined at:
  5858 ;;		line 1610 in file "../../../../../../framework/usb/src/usb_device.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;		None               void
  5865 ;; Registers used:
  5866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        2 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    2
  5879 ;; This function calls:
  5880 ;;		_USBCtrlEPAllowDataStage
  5881 ;;		_USBCtrlEPAllowStatusStage
  5882 ;; This function is called by:
  5883 ;;		_USBCtrlTrfSetupHandler
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function _USBCtrlEPServiceComplete
  5889  064D                     _USBCtrlEPServiceComplete:	
  5890                           
  5891                           ;usb_device.c: 1616: UCONbits.PKTDIS = 0;
  5892                           
  5893                           ;incstack = 0
  5894                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5895  064D  003D               	movlb	29	; select bank29
  5896  064E  120E               	bcf	14,4	;volatile
  5897                           
  5898                           ;usb_device.c: 1622: if(inPipes[0].info.bits.busy == 0)
  5899  064F  0021               	movlb	1	; select bank1
  5900  0650  1BEC               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  5901  0651  2E8E               	goto	i1l477
  5902                           
  5903                           ;usb_device.c: 1623: {
  5904                           ;usb_device.c: 1624: if(outPipes[0].info.bits.busy == 1)
  5905  0652  0023               	movlb	3	; select bank3
  5906  0653  1FAC               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5907  0654  2E62               	goto	i1l4809
  5908                           
  5909                           ;usb_device.c: 1625: {
  5910                           ;usb_device.c: 1626: controlTransferState = 2;
  5911  0655  3002               	movlw	2
  5912  0656  00F5               	movwf	??_USBCtrlEPServiceComplete
  5913  0657  0875               	movf	??_USBCtrlEPServiceComplete,w
  5914  0658  00D7               	movwf	_controlTransferState^(0+384)	;volatile
  5915                           
  5916                           ;usb_device.c: 1637: if(USBDeferOUTDataStagePackets == 0)
  5917  0659  08CC               	movf	_USBDeferOUTDataStagePackets^(0+384),f	;volatile
  5918  065A  1D03               	skipz
  5919  065B  2E5E               	goto	i1l4805
  5920                           
  5921                           ;usb_device.c: 1638: {
  5922                           ;usb_device.c: 1639: USBCtrlEPAllowDataStage();
  5923  065C  318C  24D8         	fcall	_USBCtrlEPAllowDataStage
  5924  065E                     i1l4805:	
  5925                           
  5926                           ;usb_device.c: 1640: }
  5927                           ;usb_device.c: 1644: USBStatusStageEnabledFlag2 = 0;
  5928  065E  0023               	movlb	3	; select bank3
  5929  065F  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5930                           
  5931                           ;usb_device.c: 1645: USBStatusStageEnabledFlag1 = 0;
  5932  0660  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5933                           
  5934                           ;usb_device.c: 1646: }
  5935  0661  0008               	return
  5936  0662                     i1l4809:	
  5937                           
  5938                           ;usb_device.c: 1647: else
  5939                           ;usb_device.c: 1648: {
  5940                           ;usb_device.c: 1653: pBDTEntryEP0OutNext->CNT = 8;
  5941  0662  3008               	movlw	8
  5942  0663  00F5               	movwf	??_USBCtrlEPServiceComplete
  5943  0664  0021               	movlb	1	; select bank1
  5944  0665  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  5945  0666  0086               	movwf	6
  5946  0667  0187               	clrf	7
  5947  0668  0875               	movf	??_USBCtrlEPServiceComplete,w
  5948  0669  0081               	movwf	1
  5949                           
  5950                           ;usb_device.c: 1654: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5951  066A  3050               	movlw	80
  5952  066B  00F5               	movwf	??_USBCtrlEPServiceComplete
  5953  066C  3000               	movlw	0
  5954  066D  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  5955  066E  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5956  066F  3E02               	addlw	2
  5957  0670  0086               	movwf	6
  5958  0671  0187               	clrf	7
  5959  0672  0875               	movf	??_USBCtrlEPServiceComplete,w
  5960  0673  3FC0               	movwi [0]fsr1
  5961  0674  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  5962  0675  3FC1               	movwi [1]fsr1
  5963                           
  5964                           ;usb_device.c: 1655: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5965  0676  300C               	movlw	12
  5966  0677  00F5               	movwf	??_USBCtrlEPServiceComplete
  5967  0678  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5968  0679  0086               	movwf	6
  5969  067A  0187               	clrf	7
  5970  067B  0875               	movf	??_USBCtrlEPServiceComplete,w
  5971  067C  0081               	movwf	1
  5972                           
  5973                           ;usb_device.c: 1656: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5974  067D  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5975  067E  0086               	movwf	6
  5976  067F  0187               	clrf	7
  5977  0680  1781               	bsf	1,7
  5978                           
  5979                           ;usb_device.c: 1657: pBDTEntryIn[0]->STAT.Val = 0x04;
  5980  0681  3004               	movlw	4
  5981  0682  00F5               	movwf	??_USBCtrlEPServiceComplete
  5982  0683  0023               	movlb	3	; select bank3
  5983  0684  083A               	movf	_pBDTEntryIn^(0+384),w
  5984  0685  0086               	movwf	6
  5985  0686  0187               	clrf	7
  5986  0687  0875               	movf	??_USBCtrlEPServiceComplete,w
  5987  0688  0081               	movwf	1
  5988                           
  5989                           ;usb_device.c: 1658: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5990  0689  083A               	movf	_pBDTEntryIn^(0+384),w
  5991  068A  0086               	movwf	6
  5992  068B  0187               	clrf	7
  5993  068C  1781               	bsf	1,7
  5994                           
  5995                           ;usb_device.c: 1659: }
  5996                           ;usb_device.c: 1660: }
  5997  068D  0008               	return
  5998  068E                     i1l477:	
  5999                           
  6000                           ;usb_device.c: 1661: else
  6001                           ;usb_device.c: 1662: {
  6002                           ;usb_device.c: 1663: if(SetupPkt.DataDir == (0x80>>7))
  6003  068E  0020               	movlb	0	; select bank0
  6004  068F  1FD0               	btfss	80,7	;volatile
  6005  0690  2EA5               	goto	i1l4825
  6006                           
  6007                           ;usb_device.c: 1664: {
  6008                           ;usb_device.c: 1665: controlTransferState = 1;
  6009  0691  3001               	movlw	1
  6010  0692  00F5               	movwf	??_USBCtrlEPServiceComplete
  6011  0693  0875               	movf	??_USBCtrlEPServiceComplete,w
  6012  0694  0023               	movlb	3	; select bank3
  6013  0695  00D7               	movwf	_controlTransferState^(0+384)	;volatile
  6014                           
  6015                           ;usb_device.c: 1679: if(USBDeferINDataStagePackets == 0)
  6016  0696  08CB               	movf	_USBDeferINDataStagePackets^(0+384),f	;volatile
  6017  0697  1D03               	skipz
  6018  0698  2E9C               	goto	i1l4817
  6019                           
  6020                           ;usb_device.c: 1680: {
  6021                           ;usb_device.c: 1681: USBCtrlEPAllowDataStage();
  6022  0699  318C  24D8  3186   	fcall	_USBCtrlEPAllowDataStage
  6023  069C                     i1l4817:	
  6024                           
  6025                           ;usb_device.c: 1682: }
  6026                           ;usb_device.c: 1704: USBStatusStageEnabledFlag2 = 0;
  6027  069C  0023               	movlb	3	; select bank3
  6028  069D  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6029                           
  6030                           ;usb_device.c: 1705: USBStatusStageEnabledFlag1 = 0;
  6031  069E  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6032                           
  6033                           ;usb_device.c: 1706: if(USBDeferStatusStagePacket == 0)
  6034  069F  08CD               	movf	_USBDeferStatusStagePacket^(0+384),f	;volatile
  6035  06A0  1D03               	skipz
  6036  06A1  0008               	return
  6037                           
  6038                           ;usb_device.c: 1707: {
  6039                           ;usb_device.c: 1708: USBCtrlEPAllowStatusStage();
  6040  06A2  318E  26BA         	fcall	_USBCtrlEPAllowStatusStage
  6041                           
  6042                           ;usb_device.c: 1709: }
  6043                           ;usb_device.c: 1710: }
  6044  06A4  0008               	return
  6045  06A5                     i1l4825:	
  6046                           
  6047                           ;usb_device.c: 1711: else
  6048                           ;usb_device.c: 1712: {
  6049                           ;usb_device.c: 1723: controlTransferState = 2;
  6050  06A5  3002               	movlw	2
  6051  06A6  00F5               	movwf	??_USBCtrlEPServiceComplete
  6052  06A7  0875               	movf	??_USBCtrlEPServiceComplete,w
  6053  06A8  0023               	movlb	3	; select bank3
  6054  06A9  00D7               	movwf	_controlTransferState^(0+384)	;volatile
  6055                           
  6056                           ;usb_device.c: 1726: pBDTEntryEP0OutNext->CNT = 8;
  6057  06AA  3008               	movlw	8
  6058  06AB  00F5               	movwf	??_USBCtrlEPServiceComplete
  6059  06AC  0021               	movlb	1	; select bank1
  6060  06AD  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  6061  06AE  0086               	movwf	6
  6062  06AF  0187               	clrf	7
  6063  06B0  0875               	movf	??_USBCtrlEPServiceComplete,w
  6064  06B1  0081               	movwf	1
  6065                           
  6066                           ;usb_device.c: 1727: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6067  06B2  3050               	movlw	80
  6068  06B3  00F5               	movwf	??_USBCtrlEPServiceComplete
  6069  06B4  3000               	movlw	0
  6070  06B5  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6071  06B6  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6072  06B7  3E02               	addlw	2
  6073  06B8  0086               	movwf	6
  6074  06B9  0187               	clrf	7
  6075  06BA  0875               	movf	??_USBCtrlEPServiceComplete,w
  6076  06BB  3FC0               	movwi [0]fsr1
  6077  06BC  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6078  06BD  3FC1               	movwi [1]fsr1
  6079                           
  6080                           ;usb_device.c: 1728: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6081  06BE  3004               	movlw	4
  6082  06BF  00F5               	movwf	??_USBCtrlEPServiceComplete
  6083  06C0  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6084  06C1  0086               	movwf	6
  6085  06C2  0187               	clrf	7
  6086  06C3  0875               	movf	??_USBCtrlEPServiceComplete,w
  6087  06C4  0081               	movwf	1
  6088                           
  6089                           ;usb_device.c: 1729: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6090  06C5  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6091  06C6  0086               	movwf	6
  6092  06C7  0187               	clrf	7
  6093  06C8  1781               	bsf	1,7
  6094                           
  6095                           ;usb_device.c: 1732: USBStatusStageEnabledFlag2 = 0;
  6096  06C9  0023               	movlb	3	; select bank3
  6097  06CA  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6098                           
  6099                           ;usb_device.c: 1733: USBStatusStageEnabledFlag1 = 0;
  6100  06CB  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6101                           
  6102                           ;usb_device.c: 1734: if(USBDeferStatusStagePacket == 0)
  6103  06CC  08CD               	movf	_USBDeferStatusStagePacket^(0+384),f	;volatile
  6104  06CD  1D03               	skipz
  6105  06CE  0008               	return
  6106                           
  6107                           ;usb_device.c: 1735: {
  6108                           ;usb_device.c: 1736: USBCtrlEPAllowStatusStage();
  6109  06CF  318E  26BA         	fcall	_USBCtrlEPAllowStatusStage
  6110  06D1  0008               	return
  6111  06D2                     __end_of_USBCtrlEPServiceComplete:	
  6112                           
  6113                           	psect	text22
  6114  0CD8                     __ptext22:	
  6115 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6116 ;; Defined at:
  6117 ;;		line 1482 in file "../../../../../../framework/usb/src/usb_device.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;		None               void
  6124 ;; Registers used:
  6125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;Total ram usage:        2 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    1
  6138 ;; This function calls:
  6139 ;;		_USBCtrlTrfTxService
  6140 ;; This function is called by:
  6141 ;;		_USBCtrlEPServiceComplete
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           
  6146                           ;psect for function _USBCtrlEPAllowDataStage
  6147  0CD8                     _USBCtrlEPAllowDataStage:	
  6148                           
  6149                           ;usb_device.c: 1484: USBDeferINDataStagePackets = 0;
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6153  0CD8  0023               	movlb	3	; select bank3
  6154  0CD9  01CB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6155                           
  6156                           ;usb_device.c: 1485: USBDeferOUTDataStagePackets = 0;
  6157  0CDA  01CC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6158                           
  6159                           ;usb_device.c: 1487: if(controlTransferState == 2)
  6160  0CDB  0857               	movf	_controlTransferState^(0+384),w	;volatile
  6161  0CDC  3A02               	xorlw	2
  6162  0CDD  1D03               	skipz
  6163  0CDE  2CFF               	goto	i1l4591
  6164                           
  6165                           ;usb_device.c: 1488: {
  6166                           ;usb_device.c: 1490: pBDTEntryEP0OutNext->CNT = 8;
  6167  0CDF  3008               	movlw	8
  6168  0CE0  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6169  0CE1  0021               	movlb	1	; select bank1
  6170  0CE2  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  6171  0CE3  0086               	movwf	6
  6172  0CE4  0187               	clrf	7
  6173  0CE5  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6174  0CE6  0081               	movwf	1
  6175                           
  6176                           ;usb_device.c: 1491: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6177  0CE7  3058               	movlw	88
  6178  0CE8  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6179  0CE9  3000               	movlw	0
  6180  0CEA  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6181  0CEB  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6182  0CEC  3E02               	addlw	2
  6183  0CED  0086               	movwf	6
  6184  0CEE  0187               	clrf	7
  6185  0CEF  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6186  0CF0  3FC0               	movwi [0]fsr1
  6187  0CF1  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6188  0CF2  3FC1               	movwi [1]fsr1
  6189                           
  6190                           ;usb_device.c: 1492: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6191  0CF3  3048               	movlw	72
  6192  0CF4  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6193  0CF5  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6194  0CF6  0086               	movwf	6
  6195  0CF7  0187               	clrf	7
  6196  0CF8  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6197  0CF9  0081               	movwf	1
  6198                           
  6199                           ;usb_device.c: 1493: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6200  0CFA  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6201  0CFB  0086               	movwf	6
  6202  0CFC  0187               	clrf	7
  6203  0CFD  1781               	bsf	1,7
  6204                           
  6205                           ;usb_device.c: 1494: }
  6206  0CFE  0008               	return
  6207  0CFF                     i1l4591:	
  6208                           
  6209                           ;usb_device.c: 1495: else
  6210                           ;usb_device.c: 1496: {
  6211                           ;usb_device.c: 1499: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6212  0CFF  0021               	movlb	1	; select bank1
  6213  0D00  086E               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  6214  0D01  0020               	movlb	0	; select bank0
  6215  0D02  0257               	subwf	87,w	;volatile
  6216  0D03  1D03               	skipz
  6217  0D04  2D09               	goto	u399_25
  6218  0D05  0021               	movlb	1	; select bank1
  6219  0D06  086D               	movf	(_inPipes^(0+128)+3),w	;volatile
  6220  0D07  0020               	movlb	0	; select bank0
  6221  0D08  0256               	subwf	86,w	;volatile
  6222  0D09                     u399_25:	
  6223  0D09  1803               	skipnc
  6224  0D0A  2D14               	goto	i1l4595
  6225                           
  6226                           ;usb_device.c: 1500: {
  6227                           ;usb_device.c: 1501: inPipes[0].wCount.Val = SetupPkt.wLength;
  6228  0D0B  0857               	movf	87,w	;volatile
  6229  0D0C  0021               	movlb	1	; select bank1
  6230  0D0D  01EE               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  6231  0D0E  07EE               	addwf	((_inPipes+1)^(0+128)+3),f	;volatile
  6232  0D0F  0020               	movlb	0	; select bank0
  6233  0D10  0856               	movf	86,w	;volatile
  6234  0D11  0021               	movlb	1	; select bank1
  6235  0D12  01ED               	clrf	(_inPipes^(0+128)+3)	;volatile
  6236  0D13  07ED               	addwf	(_inPipes^(0+128)+3),f	;volatile
  6237  0D14                     i1l4595:	
  6238                           
  6239                           ;usb_device.c: 1502: }
  6240                           ;usb_device.c: 1503: USBCtrlTrfTxService();
  6241  0D14  318F  2790         	fcall	_USBCtrlTrfTxService
  6242                           
  6243                           ;usb_device.c: 1508: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6244  0D16  3058               	movlw	88
  6245  0D17  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6246  0D18  3000               	movlw	0
  6247  0D19  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6248  0D1A  0023               	movlb	3	; select bank3
  6249  0D1B  083A               	movf	_pBDTEntryIn^(0+384),w
  6250  0D1C  3E02               	addlw	2
  6251  0D1D  0086               	movwf	6
  6252  0D1E  0187               	clrf	7
  6253  0D1F  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6254  0D20  3FC0               	movwi [0]fsr1
  6255  0D21  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6256  0D22  3FC1               	movwi [1]fsr1
  6257                           
  6258                           ;usb_device.c: 1509: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6259  0D23  3048               	movlw	72
  6260  0D24  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6261  0D25  083A               	movf	_pBDTEntryIn^(0+384),w
  6262  0D26  0086               	movwf	6
  6263  0D27  0187               	clrf	7
  6264  0D28  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6265  0D29  0081               	movwf	1
  6266                           
  6267                           ;usb_device.c: 1510: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6268  0D2A  083A               	movf	_pBDTEntryIn^(0+384),w
  6269  0D2B  0086               	movwf	6
  6270  0D2C  0187               	clrf	7
  6271  0D2D  1781               	bsf	1,7
  6272  0D2E  0008               	return
  6273  0D2F                     __end_of_USBCtrlEPAllowDataStage:	
  6274                           
  6275                           	psect	text23
  6276  0DF3                     __ptext23:	
  6277 ;; *************** function _USBCheckStdRequest *****************
  6278 ;; Defined at:
  6279 ;;		line 2683 in file "../../../../../../framework/usb/src/usb_device.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;		None               void
  6286 ;; Registers used:
  6287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;Total ram usage:        1 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    6
  6300 ;; This function calls:
  6301 ;;		_USBStdFeatureReqHandler
  6302 ;;		_USBStdGetDscHandler
  6303 ;;		_USBStdGetStatusHandler
  6304 ;;		_USBStdSetCfgHandler
  6305 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6306 ;; This function is called by:
  6307 ;;		_USBCtrlTrfSetupHandler
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           
  6312                           ;psect for function _USBCheckStdRequest
  6313  0DF3                     _USBCheckStdRequest:	
  6314                           
  6315                           ;usb_device.c: 2685: if(SetupPkt.RequestType != (0x00>>5)) return;
  6316                           
  6317                           ;incstack = 0
  6318                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6319  0DF3  0020               	movlb	0	; select bank0
  6320  0DF4  0E50               	swapf	80,w	;volatile
  6321  0DF5  0C89               	rrf	9,f
  6322  0DF6  3903               	andlw	3
  6323  0DF7  3A00               	xorlw	0
  6324  0DF8  1D03               	btfss	3,2
  6325  0DF9  0008               	return
  6326  0DFA  2E4A               	goto	i1l4911
  6327  0DFB                     i1l606:	
  6328                           ;usb_device.c: 2688: {
  6329                           ;usb_device.c: 2689: case 5:
  6330                           
  6331                           ;usb_device.c: 2687: switch(SetupPkt.bRequest)
  6332                           
  6333                           
  6334                           ;usb_device.c: 2690: inPipes[0].info.bits.busy = 1;
  6335  0DFB  0021               	movlb	1	; select bank1
  6336  0DFC  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6337                           
  6338                           ;usb_device.c: 2691: USBDeviceState = ADR_PENDING_STATE;
  6339  0DFD  3008               	movlw	8
  6340  0DFE  0020               	movlb	0	; select bank0
  6341  0DFF  00EE               	movwf	??_USBCheckStdRequest
  6342  0E00  086E               	movf	??_USBCheckStdRequest,w
  6343  0E01  0023               	movlb	3	; select bank3
  6344  0E02  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  6345                           
  6346                           ;usb_device.c: 2693: break;
  6347  0E03  0008               	return
  6348  0E04                     i1l4881:	
  6349                           ;usb_device.c: 2694: case 6:
  6350                           
  6351                           
  6352                           ;usb_device.c: 2695: USBStdGetDscHandler();
  6353  0E04  3186  26D2         	fcall	_USBStdGetDscHandler
  6354                           
  6355                           ;usb_device.c: 2696: break;
  6356  0E06  0008               	return
  6357  0E07                     i1l4883:	
  6358                           ;usb_device.c: 2697: case 9:
  6359                           
  6360                           
  6361                           ;usb_device.c: 2698: USBStdSetCfgHandler();
  6362  0E07  3185  25BC         	fcall	_USBStdSetCfgHandler
  6363                           
  6364                           ;usb_device.c: 2699: break;
  6365  0E09  0008               	return
  6366  0E0A                     i1l4885:	
  6367                           ;usb_device.c: 2700: case 8:
  6368                           
  6369                           
  6370                           ;usb_device.c: 2701: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6371  0E0A  30ED               	movlw	low _USBActiveConfiguration
  6372  0E0B  0021               	movlb	1	; select bank1
  6373  0E0C  00EA               	movwf	_inPipes^(0+128)	;volatile
  6374  0E0D  3001               	movlw	high _USBActiveConfiguration
  6375  0E0E  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  6376                           
  6377                           ;usb_device.c: 2702: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6378  0E0F  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6379                           
  6380                           ;usb_device.c: 2703: inPipes[0].wCount.v[0] = 1;
  6381  0E10  3001               	movlw	1
  6382  0E11  0020               	movlb	0	; select bank0
  6383  0E12  00EE               	movwf	??_USBCheckStdRequest
  6384  0E13  086E               	movf	??_USBCheckStdRequest,w
  6385  0E14  0021               	movlb	1	; select bank1
  6386  0E15  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  6387                           
  6388                           ;usb_device.c: 2704: inPipes[0].info.bits.busy = 1;
  6389  0E16  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6390                           
  6391                           ;usb_device.c: 2705: break;
  6392  0E17  0008               	return
  6393  0E18                     i1l4893:	
  6394                           ;usb_device.c: 2706: case 0:
  6395                           
  6396                           
  6397                           ;usb_device.c: 2707: USBStdGetStatusHandler();
  6398  0E18  318B  23A4         	fcall	_USBStdGetStatusHandler
  6399                           
  6400                           ;usb_device.c: 2708: break;
  6401  0E1A  0008               	return
  6402  0E1B                     i1l4895:	
  6403                           ;usb_device.c: 2709: case 1:
  6404                           
  6405                           
  6406                           ;usb_device.c: 2710: case 3:
  6407                           ;usb_device.c: 2711: USBStdFeatureReqHandler();
  6408  0E1B  3180  2040         	fcall	_USBStdFeatureReqHandler
  6409                           
  6410                           ;usb_device.c: 2712: break;
  6411  0E1D  0008               	return
  6412  0E1E                     i1l4897:	
  6413                           ;usb_device.c: 2713: case 10:
  6414                           
  6415                           
  6416                           ;usb_device.c: 2714: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6417  0E1E  0020               	movlb	0	; select bank0
  6418  0E1F  0854               	movf	84,w	;volatile
  6419  0E20  3EEB               	addlw	_USBAlternateInterface& (0+255)
  6420  0E21  0021               	movlb	1	; select bank1
  6421  0E22  00EA               	movwf	_inPipes^(0+128)	;volatile
  6422  0E23  3001               	movlw	1
  6423  0E24  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  6424                           
  6425                           ;usb_device.c: 2715: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6426  0E25  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6427                           
  6428                           ;usb_device.c: 2716: inPipes[0].wCount.v[0] = 1;
  6429  0E26  3001               	movlw	1
  6430  0E27  0020               	movlb	0	; select bank0
  6431  0E28  00EE               	movwf	??_USBCheckStdRequest
  6432  0E29  086E               	movf	??_USBCheckStdRequest,w
  6433  0E2A  0021               	movlb	1	; select bank1
  6434  0E2B  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  6435                           
  6436                           ;usb_device.c: 2717: inPipes[0].info.bits.busy = 1;
  6437  0E2C  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6438                           
  6439                           ;usb_device.c: 2718: break;
  6440  0E2D  0008               	return
  6441  0E2E                     i1l615:	
  6442                           ;usb_device.c: 2719: case 11:
  6443                           
  6444                           
  6445                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6446  0E2E  0021               	movlb	1	; select bank1
  6447  0E2F  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6448                           
  6449                           ;usb_device.c: 2721: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6450  0E30  0020               	movlb	0	; select bank0
  6451  0E31  0852               	movf	82,w	;volatile
  6452  0E32  00EE               	movwf	??_USBCheckStdRequest
  6453  0E33  0854               	movf	84,w	;volatile
  6454  0E34  3EEB               	addlw	_USBAlternateInterface& (0+255)
  6455  0E35  0086               	movwf	6
  6456  0E36  3001               	movlw	1	; select bank3/4
  6457  0E37  0087               	movwf	7
  6458  0E38  086E               	movf	??_USBCheckStdRequest,w
  6459  0E39  0081               	movwf	1
  6460                           
  6461                           ;usb_device.c: 2722: break;
  6462  0E3A  0008               	return
  6463  0E3B                     i1l4907:	
  6464                           ;usb_device.c: 2723: case 7:
  6465                           
  6466                           
  6467                           ;usb_device.c: 2724: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6468  0E3B  3002               	movlw	2
  6469  0E3C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6470  0E3D  3000               	movlw	0
  6471  0E3E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6472  0E3F  3000               	movlw	0
  6473  0E40  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6474  0E41  3000               	movlw	0
  6475  0E42  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6476  0E43  3000               	movlw	0
  6477  0E44  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6478  0E45  3000               	movlw	0
  6479  0E46  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6480  0E47  318B  231F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6481                           
  6482                           ;usb_device.c: 2729: }
  6483                           
  6484                           ;usb_device.c: 2728: break;
  6485                           
  6486                           ;usb_device.c: 2727: default:
  6487                           
  6488                           ;usb_device.c: 2726: case 12:
  6489                           
  6490                           ;usb_device.c: 2725: break;
  6491  0E49  0008               	return
  6492  0E4A                     i1l4911:	
  6493  0E4A  0020               	movlb	0	; select bank0
  6494  0E4B  0851               	movf	81,w	;volatile
  6495                           
  6496                           ; Switch size 1, requested type "space"
  6497                           ; Number of cases is 11, Range of values is 0 to 12
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; direct_byte           32     6 (fixed)
  6501                           ; simple_byte           34    18 (average)
  6502                           ; jumptable            260     6 (fixed)
  6503                           ;	Chosen strategy is direct_byte
  6504  0E4C  0084               	movwf	4
  6505  0E4D  300D               	movlw	13
  6506  0E4E  0204               	subwf	4,w
  6507  0E4F  1803               	skipnc
  6508  0E50  0008               	return
  6509  0E51  3188               	movlp	high i1S5655
  6510  0E52  3504               	lslf	4,w
  6511  0E53  3E00               	addlw	low i1S5655
  6512  0E54  0082               	movwf	2
  6513  0E55                     i1l604:	
  6514  0E55  0008               	return
  6515  0E56                     __end_of_USBCheckStdRequest:	
  6516                           
  6517                           	psect	swtext2
  6518  0800                     __pswtext2:	
  6519  0800                     i1S5655:	
  6520  0800  318E  2E18         	ljmp	i1l4893
  6521  0802  318E  2E1B         	ljmp	i1l4895
  6522  0804  318E  2E55         	ljmp	i1l604
  6523  0806  318E  2E1B         	ljmp	i1l4895
  6524  0808  318E  2E55         	ljmp	i1l604
  6525  080A  318D  2DFB         	ljmp	i1l606
  6526  080C  318E  2E04         	ljmp	i1l4881
  6527  080E  318E  2E3B         	ljmp	i1l4907
  6528  0810  318E  2E0A         	ljmp	i1l4885
  6529  0812  318E  2E07         	ljmp	i1l4883
  6530  0814  318E  2E1E         	ljmp	i1l4897
  6531  0816  318E  2E2E         	ljmp	i1l615
  6532  0818  318E  2E55         	ljmp	i1l604
  6533                           
  6534                           	psect	text24
  6535  05BC                     __ptext24:	
  6536 ;; *************** function _USBStdSetCfgHandler *****************
  6537 ;; Defined at:
  6538 ;;		line 1962 in file "../../../../../../framework/usb/src/usb_device.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  p               2    9[BANK0 ] PTR unsigned char 
  6543 ;;		 -> UEP1(1), 
  6544 ;;  i               1   11[BANK0 ] unsigned char 
  6545 ;;  i               1   12[BANK0 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;		None               void
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;Total ram usage:        5 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    5
  6562 ;; This function calls:
  6563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6564 ;;		_memset
  6565 ;; This function is called by:
  6566 ;;		_USBCheckStdRequest
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           
  6571                           ;psect for function _USBStdSetCfgHandler
  6572  05BC                     _USBStdSetCfgHandler:	
  6573                           
  6574                           ;usb_device.c: 1964: uint8_t i;
  6575                           ;usb_device.c: 1967: inPipes[0].info.bits.busy = 1;
  6576                           
  6577                           ;incstack = 0
  6578                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6579  05BC  0021               	movlb	1	; select bank1
  6580  05BD  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6581                           
  6582                           ;usb_device.c: 1970: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6583  05BE  300E               	movlw	14
  6584  05BF  0020               	movlb	0	; select bank0
  6585  05C0  00EA               	movwf	USBStdSetCfgHandler@p+1
  6586  05C1  3099               	movlw	153
  6587  05C2  00E9               	movwf	USBStdSetCfgHandler@p
  6588  05C3  01EB               	clrf	USBStdSetCfgHandler@i_1530
  6589  05C4  3002               	movlw	2
  6590  05C5  026B               	subwf	USBStdSetCfgHandler@i_1530,w
  6591  05C6  1803               	btfsc	3,0
  6592  05C7  2DD9               	goto	i1l4619
  6593  05C8                     i1l4611:	
  6594  05C8  0869               	movf	USBStdSetCfgHandler@p,w
  6595  05C9  0086               	movwf	6
  6596  05CA  086A               	movf	USBStdSetCfgHandler@p+1,w
  6597  05CB  0087               	movwf	7
  6598  05CC  0181               	clrf	1
  6599  05CD  3001               	movlw	1
  6600  05CE  07E9               	addwf	USBStdSetCfgHandler@p,f
  6601  05CF  3000               	movlw	0
  6602  05D0  3DEA               	addwfc	USBStdSetCfgHandler@p+1,f
  6603  05D1  3001               	movlw	1
  6604  05D2  00E8               	movwf	??_USBStdSetCfgHandler
  6605  05D3  0868               	movf	??_USBStdSetCfgHandler,w
  6606  05D4  07EB               	addwf	USBStdSetCfgHandler@i_1530,f
  6607  05D5  3002               	movlw	2
  6608  05D6  026B               	subwf	USBStdSetCfgHandler@i_1530,w
  6609  05D7  1C03               	skipc
  6610  05D8  2DC8               	goto	i1l4611
  6611  05D9                     i1l4619:	
  6612                           
  6613                           ;usb_device.c: 1973: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6614  05D9  3020               	movlw	32
  6615  05DA  00F0               	movwf	memset@p1
  6616  05DB  3000               	movlw	0
  6617  05DC  00F1               	movwf	memset@p1+1
  6618  05DD  3000               	movlw	0
  6619  05DE  00F2               	movwf	memset@c
  6620  05DF  3000               	movlw	0
  6621  05E0  00F3               	movwf	memset@c+1
  6622  05E1  3030               	movlw	48
  6623  05E2  00F4               	movwf	memset@n
  6624  05E3  3000               	movlw	0
  6625  05E4  00F5               	movwf	memset@n+1
  6626  05E5  3189  21C7  3185   	fcall	_memset
  6627                           
  6628                           ;usb_device.c: 1976: UCONbits.PPBRST = 1;
  6629  05E8  003D               	movlb	29	; select bank29
  6630  05E9  170E               	bsf	14,6	;volatile
  6631                           
  6632                           ;usb_device.c: 1981: for(i = 0; i < (uint8_t)(2+1u); i++)
  6633  05EA  0020               	movlb	0	; select bank0
  6634  05EB  01EC               	clrf	USBStdSetCfgHandler@i
  6635  05EC  3003               	movlw	3
  6636  05ED  026C               	subwf	USBStdSetCfgHandler@i,w
  6637  05EE  1803               	btfsc	3,0
  6638  05EF  2E04               	goto	i1l4635
  6639  05F0                     i1l4629:	
  6640                           
  6641                           ;usb_device.c: 1982: {
  6642                           ;usb_device.c: 1983: ep_data_in[i].Val = 0u;
  6643  05F0  086C               	movf	USBStdSetCfgHandler@i,w
  6644  05F1  3EB4               	addlw	_ep_data_in& (0+255)
  6645  05F2  0086               	movwf	6
  6646  05F3  3001               	movlw	1	; select bank3/4
  6647  05F4  0087               	movwf	7
  6648  05F5  0181               	clrf	1
  6649                           
  6650                           ;usb_device.c: 1984: ep_data_out[i].Val = 0u;
  6651  05F6  086C               	movf	USBStdSetCfgHandler@i,w
  6652  05F7  3EB7               	addlw	_ep_data_out& (0+255)
  6653  05F8  0086               	movwf	6
  6654  05F9  3001               	movlw	1	; select bank3/4
  6655  05FA  0087               	movwf	7
  6656  05FB  0181               	clrf	1
  6657  05FC  3001               	movlw	1
  6658  05FD  00E8               	movwf	??_USBStdSetCfgHandler
  6659  05FE  0868               	movf	??_USBStdSetCfgHandler,w
  6660  05FF  07EC               	addwf	USBStdSetCfgHandler@i,f
  6661  0600  3003               	movlw	3
  6662  0601  026C               	subwf	USBStdSetCfgHandler@i,w
  6663  0602  1C03               	skipc
  6664  0603  2DF0               	goto	i1l4629
  6665  0604                     i1l4635:	
  6666                           
  6667                           ;usb_device.c: 1985: }
  6668                           ;usb_device.c: 1988: memset((void*)&USBAlternateInterface,0x00,2);
  6669  0604  30EB               	movlw	low _USBAlternateInterface
  6670  0605  00F0               	movwf	memset@p1
  6671  0606  3001               	movlw	high _USBAlternateInterface
  6672  0607  00F1               	movwf	memset@p1+1
  6673  0608  3000               	movlw	0
  6674  0609  00F2               	movwf	memset@c
  6675  060A  3000               	movlw	0
  6676  060B  00F3               	movwf	memset@c+1
  6677  060C  3002               	movlw	2
  6678  060D  00F4               	movwf	memset@n
  6679  060E  3000               	movlw	0
  6680  060F  00F5               	movwf	memset@n+1
  6681  0610  3189  21C7  3185   	fcall	_memset
  6682                           
  6683                           ;usb_device.c: 1991: UCONbits.PPBRST = 0;
  6684  0613  003D               	movlb	29	; select bank29
  6685  0614  130E               	bcf	14,6	;volatile
  6686                           
  6687                           ;usb_device.c: 1993: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6688  0615  3028               	movlw	40
  6689  0616  0020               	movlb	0	; select bank0
  6690  0617  00E8               	movwf	??_USBStdSetCfgHandler
  6691  0618  0868               	movf	??_USBStdSetCfgHandler,w
  6692  0619  0023               	movlb	3	; select bank3
  6693  061A  00BA               	movwf	_pBDTEntryIn^(0+384)
  6694                           
  6695                           ;usb_device.c: 1996: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6696  061B  3020               	movlw	32
  6697  061C  0020               	movlb	0	; select bank0
  6698  061D  00E8               	movwf	??_USBStdSetCfgHandler
  6699  061E  0868               	movf	??_USBStdSetCfgHandler,w
  6700  061F  0021               	movlb	1	; select bank1
  6701  0620  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6702                           
  6703                           ;usb_device.c: 1997: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6704  0621  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6705  0622  0020               	movlb	0	; select bank0
  6706  0623  00E8               	movwf	??_USBStdSetCfgHandler
  6707  0624  0868               	movf	??_USBStdSetCfgHandler,w
  6708  0625  0021               	movlb	1	; select bank1
  6709  0626  00E9               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6710                           
  6711                           ;usb_device.c: 2000: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6712  0627  0020               	movlb	0	; select bank0
  6713  0628  0852               	movf	82,w	;volatile
  6714  0629  00E8               	movwf	??_USBStdSetCfgHandler
  6715  062A  0868               	movf	??_USBStdSetCfgHandler,w
  6716  062B  0023               	movlb	3	; select bank3
  6717  062C  00ED               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6718                           
  6719                           ;usb_device.c: 2003: if(USBActiveConfiguration == 0)
  6720  062D  08ED               	movf	_USBActiveConfiguration^(0+384),f	;volatile
  6721  062E  1D03               	skipz
  6722  062F  2E37               	goto	i1l4651
  6723                           
  6724                           ;usb_device.c: 2004: {
  6725                           ;usb_device.c: 2006: USBDeviceState = ADDRESS_STATE;
  6726  0630  3010               	movlw	16
  6727  0631  0020               	movlb	0	; select bank0
  6728  0632  00E8               	movwf	??_USBStdSetCfgHandler
  6729  0633  0868               	movf	??_USBStdSetCfgHandler,w
  6730  0634  0023               	movlb	3	; select bank3
  6731  0635  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  6732                           
  6733                           ;usb_device.c: 2007: }
  6734  0636  0008               	return
  6735  0637                     i1l4651:	
  6736                           
  6737                           ;usb_device.c: 2008: else
  6738                           ;usb_device.c: 2009: {
  6739                           ;usb_device.c: 2011: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6740  0637  3001               	movlw	1
  6741  0638  0020               	movlb	0	; select bank0
  6742  0639  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6743  063A  3000               	movlw	0
  6744  063B  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6745  063C  30ED               	movlw	low _USBActiveConfiguration
  6746  063D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6747  063E  3001               	movlw	high _USBActiveConfiguration
  6748  063F  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6749  0640  3001               	movlw	1
  6750  0641  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6751  0642  3000               	movlw	0
  6752  0643  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6753  0644  318B  231F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6754                           
  6755                           ;usb_device.c: 2016: USBDeviceState = CONFIGURED_STATE;
  6756  0646  3020               	movlw	32
  6757  0647  0020               	movlb	0	; select bank0
  6758  0648  00E8               	movwf	??_USBStdSetCfgHandler
  6759  0649  0868               	movf	??_USBStdSetCfgHandler,w
  6760  064A  0023               	movlb	3	; select bank3
  6761  064B  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  6762  064C  0008               	return
  6763  064D                     __end_of_USBStdSetCfgHandler:	
  6764                           
  6765                           	psect	text25
  6766  09C7                     __ptext25:	
  6767 ;; *************** function _memset *****************
  6768 ;; Defined at:
  6769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\memset.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  p1              2    0[COMMON] PTR void 
  6772 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6773 ;;  c               2    2[COMMON] int 
  6774 ;;  n               2    4[COMMON] unsigned int 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  p               2    6[COMMON] PTR unsigned char 
  6777 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    0[COMMON] PTR void 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6787 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;Total ram usage:        8 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_USBStdSetCfgHandler
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _memset
  6802  09C7                     _memset:	
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6806  09C7  0871               	movf	memset@p1+1,w
  6807  09C8  01F7               	clrf	memset@p+1
  6808  09C9  07F7               	addwf	memset@p+1,f
  6809  09CA  0870               	movf	memset@p1,w
  6810  09CB  01F6               	clrf	memset@p
  6811  09CC  07F6               	addwf	memset@p,f
  6812  09CD                     i1l4549:	
  6813  09CD  3001               	movlw	1
  6814  09CE  02F4               	subwf	memset@n,f
  6815  09CF  3000               	movlw	0
  6816  09D0  3BF5               	subwfb	memset@n+1,f
  6817  09D1  30FF               	movlw	255
  6818  09D2  0675               	xorwf	memset@n+1,w
  6819  09D3  1D03               	skipz
  6820  09D4  29D7               	goto	u393_25
  6821  09D5  30FF               	movlw	255
  6822  09D6  0674               	xorwf	memset@n,w
  6823  09D7                     u393_25:	
  6824  09D7  1903               	btfsc	3,2
  6825  09D8  0008               	return
  6826  09D9  0876               	movf	memset@p,w
  6827  09DA  0086               	movwf	6
  6828  09DB  0877               	movf	memset@p+1,w
  6829  09DC  0087               	movwf	7
  6830  09DD  0872               	movf	memset@c,w
  6831  09DE  0081               	movwf	1
  6832  09DF  3001               	movlw	1
  6833  09E0  07F6               	addwf	memset@p,f
  6834  09E1  3000               	movlw	0
  6835  09E2  3DF7               	addwfc	memset@p+1,f
  6836  09E3  29CD               	goto	i1l4549
  6837  09E4                     __end_of_memset:	
  6838                           ;	Return value of _memset is never used
  6839                           
  6840                           
  6841                           	psect	text26
  6842  0BA4                     __ptext26:	
  6843 ;; *************** function _USBStdGetStatusHandler *****************
  6844 ;; Defined at:
  6845 ;;		line 2123 in file "../../../../../../framework/usb/src/usb_device.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  p               1    1[COMMON] PTR struct __BDT
  6850 ;;		 -> NULL(0), BDT(48), 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;		None               void
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;Total ram usage:        2 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_USBCheckStdRequest
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           
  6874                           ;psect for function _USBStdGetStatusHandler
  6875  0BA4                     _USBStdGetStatusHandler:	
  6876                           
  6877                           ;usb_device.c: 2125: CtrlTrfData[0] = 0;
  6878                           
  6879                           ;incstack = 0
  6880                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6881  0BA4  0020               	movlb	0	; select bank0
  6882  0BA5  01D8               	clrf	88	;volatile
  6883                           
  6884                           ;usb_device.c: 2126: CtrlTrfData[1] = 0;
  6885  0BA6  01D9               	clrf	89	;volatile
  6886                           
  6887                           ;usb_device.c: 2128: switch(SetupPkt.Recipient)
  6888  0BA7  2BD7               	goto	i1l4707
  6889  0BA8                     i1l542:	
  6890                           ;usb_device.c: 2129: {
  6891                           ;usb_device.c: 2130: case (0x00):
  6892                           
  6893                           
  6894                           ;usb_device.c: 2131: inPipes[0].info.bits.busy = 1;
  6895  0BA8  0021               	movlb	1	; select bank1
  6896  0BA9  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6897                           
  6898                           ;usb_device.c: 2139: }
  6899                           ;usb_device.c: 2141: if(RemoteWakeup == 1)
  6900                           
  6901                           ;usb_device.c: 2137: {
  6902                           ;usb_device.c: 2138: CtrlTrfData[0]|=0x01;
  6903                           
  6904                           ;usb_device.c: 2136: if(0 == 1)
  6905  0BAA  0023               	movlb	3	; select bank3
  6906  0BAB  0849               	movf	_RemoteWakeup^(0+384),w	;volatile
  6907  0BAC  3A01               	xorlw	1
  6908  0BAD  1D03               	skipz
  6909  0BAE  2BE3               	goto	i1l545
  6910                           
  6911                           ;usb_device.c: 2142: {
  6912                           ;usb_device.c: 2143: CtrlTrfData[0]|=0x02;
  6913  0BAF  0020               	movlb	0	; select bank0
  6914  0BB0  14D8               	bsf	88,1	;volatile
  6915                           
  6916                           ;usb_device.c: 2144: }
  6917                           ;usb_device.c: 2145: break;
  6918  0BB1  2BE3               	goto	i1l545
  6919  0BB2                     i1l546:	
  6920                           ;usb_device.c: 2146: case (0x01):
  6921                           
  6922                           
  6923                           ;usb_device.c: 2147: inPipes[0].info.bits.busy = 1;
  6924  0BB2  0021               	movlb	1	; select bank1
  6925  0BB3  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6926                           
  6927                           ;usb_device.c: 2148: break;
  6928  0BB4  2BE3               	goto	i1l545
  6929  0BB5                     i1l547:	
  6930                           ;usb_device.c: 2149: case (0x02):
  6931                           
  6932                           
  6933                           ;usb_device.c: 2150: inPipes[0].info.bits.busy = 1;
  6934  0BB5  0021               	movlb	1	; select bank1
  6935  0BB6  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6936                           
  6937                           ;usb_device.c: 2154: {
  6938                           ;usb_device.c: 2155: BDT_ENTRY *p;
  6939                           ;usb_device.c: 2157: if(SetupPkt.EPDir == 0)
  6940  0BB7  0020               	movlb	0	; select bank0
  6941  0BB8  1BD4               	btfsc	84,7	;volatile
  6942  0BB9  2BBE               	goto	i1l4697
  6943                           
  6944                           ;usb_device.c: 2158: {
  6945                           ;usb_device.c: 2159: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6946  0BBA  0854               	movf	84,w	;volatile
  6947  0BBB  390F               	andlw	15
  6948  0BBC  3EBD               	addlw	_pBDTEntryOut& (0+255)
  6949  0BBD  2BC1               	goto	L8
  6950  0BBE                     i1l4697:	
  6951                           ;usb_device.c: 2160: }
  6952                           
  6953                           
  6954                           ;usb_device.c: 2161: else
  6955                           ;usb_device.c: 2162: {
  6956                           ;usb_device.c: 2163: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6957  0BBE  0854               	movf	84,w	;volatile
  6958  0BBF  390F               	andlw	15
  6959  0BC0  3EBA               	addlw	_pBDTEntryIn& (0+255)
  6960  0BC1                     L8:	
  6961  0BC1  0086               	movwf	6
  6962  0BC2  3001               	movlw	1	; select bank3/4
  6963  0BC3  0087               	movwf	7
  6964  0BC4  0801               	movf	1,w
  6965  0BC5  00F0               	movwf	??_USBStdGetStatusHandler
  6966  0BC6  0870               	movf	??_USBStdGetStatusHandler,w
  6967  0BC7  00F1               	movwf	USBStdGetStatusHandler@p
  6968                           
  6969                           ;usb_device.c: 2164: }
  6970                           ;usb_device.c: 2166: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6971  0BC8  0871               	movf	USBStdGetStatusHandler@p,w
  6972  0BC9  0086               	movwf	6
  6973  0BCA  0187               	clrf	7
  6974  0BCB  1F81               	btfss	1,7
  6975  0BCC  2BE3               	goto	i1l545
  6976  0BCD  0871               	movf	USBStdGetStatusHandler@p,w
  6977  0BCE  0086               	movwf	6
  6978  0BCF  0187               	clrf	7
  6979  0BD0  1D01               	btfss	1,2
  6980  0BD1  2BE3               	goto	i1l545
  6981                           
  6982                           ;usb_device.c: 2167: CtrlTrfData[0]=0x01;
  6983  0BD2  3001               	movlw	1
  6984  0BD3  00F0               	movwf	??_USBStdGetStatusHandler
  6985  0BD4  0870               	movf	??_USBStdGetStatusHandler,w
  6986  0BD5  00D8               	movwf	88	;volatile
  6987                           
  6988                           ;usb_device.c: 2169: }
  6989                           ;usb_device.c: 2170: }
  6990                           
  6991                           ;usb_device.c: 2168: break;
  6992  0BD6  2BE3               	goto	i1l545
  6993  0BD7                     i1l4707:	
  6994  0BD7  0850               	movf	80,w	;volatile
  6995  0BD8  391F               	andlw	31
  6996                           
  6997                           ; Switch size 1, requested type "space"
  6998                           ; Number of cases is 3, Range of values is 0 to 2
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte           10     6 (average)
  7002                           ; direct_byte           12     6 (fixed)
  7003                           ; jumptable            260     6 (fixed)
  7004                           ;	Chosen strategy is simple_byte
  7005  0BD9  3A00               	xorlw	0	; case 0
  7006  0BDA  1903               	skipnz
  7007  0BDB  2BA8               	goto	i1l542
  7008  0BDC  3A01               	xorlw	1	; case 1
  7009  0BDD  1903               	skipnz
  7010  0BDE  2BB2               	goto	i1l546
  7011  0BDF  3A03               	xorlw	3	; case 2
  7012  0BE0  1903               	skipnz
  7013  0BE1  2BB5               	goto	i1l547
  7014  0BE2  2BE3               	goto	i1l545
  7015  0BE3                     i1l545:	
  7016                           
  7017                           ;usb_device.c: 2172: if(inPipes[0].info.bits.busy == 1)
  7018  0BE3  0021               	movlb	1	; select bank1
  7019  0BE4  1FEC               	btfss	(_inPipes^(0+128)+2),7	;volatile
  7020  0BE5  0008               	return
  7021                           
  7022                           ;usb_device.c: 2173: {
  7023                           ;usb_device.c: 2174: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7024  0BE6  3058               	movlw	88
  7025  0BE7  00EA               	movwf	_inPipes^(0+128)	;volatile
  7026  0BE8  3000               	movlw	0
  7027  0BE9  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7028                           
  7029                           ;usb_device.c: 2175: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7030  0BEA  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7031                           
  7032                           ;usb_device.c: 2176: inPipes[0].wCount.v[0] = 2;
  7033  0BEB  3002               	movlw	2
  7034  0BEC  00F0               	movwf	??_USBStdGetStatusHandler
  7035  0BED  0870               	movf	??_USBStdGetStatusHandler,w
  7036  0BEE  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7037  0BEF  0008               	return
  7038  0BF0                     __end_of_USBStdGetStatusHandler:	
  7039                           
  7040                           	psect	text27
  7041  06D2                     __ptext27:	
  7042 ;; *************** function _USBStdGetDscHandler *****************
  7043 ;; Defined at:
  7044 ;;		line 2037 in file "../../../../../../framework/usb/src/usb_device.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;		None               void
  7051 ;; Registers used:
  7052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;Total ram usage:        3 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_USBCheckStdRequest
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           
  7072                           ;psect for function _USBStdGetDscHandler
  7073  06D2                     _USBStdGetDscHandler:	
  7074                           
  7075                           ;usb_device.c: 2039: if(SetupPkt.bmRequestType == 0x80)
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7079  06D2  0020               	movlb	0	; select bank0
  7080  06D3  0850               	movf	80,w	;volatile
  7081  06D4  3A80               	xorlw	128
  7082  06D5  1D03               	skipz
  7083  06D6  0008               	return
  7084                           
  7085                           ;usb_device.c: 2040: {
  7086                           ;usb_device.c: 2041: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7087  06D7  30C0               	movlw	192
  7088  06D8  00F0               	movwf	??_USBStdGetDscHandler
  7089  06D9  0870               	movf	??_USBStdGetDscHandler,w
  7090  06DA  0021               	movlb	1	; select bank1
  7091  06DB  00EC               	movwf	(_inPipes^(0+128)+2)	;volatile
  7092                           
  7093                           ;usb_device.c: 2043: switch(SetupPkt.bDescriptorType)
  7094  06DC  2F3E               	goto	i1l4685
  7095  06DD                     i1l4659:	
  7096                           ;usb_device.c: 2044: {
  7097                           ;usb_device.c: 2045: case 0x01:
  7098                           
  7099                           
  7100                           ;usb_device.c: 2049: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7101  06DD  30B6               	movlw	low (_device_dsc| (0+32768))
  7102  06DE  0021               	movlb	1	; select bank1
  7103  06DF  00EA               	movwf	_inPipes^(0+128)	;volatile
  7104  06E0  3083               	movlw	high (_device_dsc| (0+32768))
  7105  06E1  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7106                           
  7107                           ;usb_device.c: 2051: inPipes[0].wCount.Val = sizeof(device_dsc);
  7108  06E2  3000               	movlw	0
  7109  06E3  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7110  06E4  3012               	movlw	18
  7111  06E5  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7112                           
  7113                           ;usb_device.c: 2052: break;
  7114  06E6  0008               	return
  7115  06E7                     i1l4663:	
  7116                           ;usb_device.c: 2053: case 0x02:
  7117                           
  7118                           
  7119                           ;usb_device.c: 2057: if(SetupPkt.bDscIndex < 1)
  7120  06E7  0020               	movlb	0	; select bank0
  7121  06E8  0852               	movf	82,w	;volatile
  7122  06E9  1D03               	skipz
  7123  06EA  2F17               	goto	i1l4671
  7124                           
  7125                           ;usb_device.c: 2058: {
  7126                           ;usb_device.c: 2062: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7127  06EB  300A               	movlw	low (_USB_CD_Ptr| (0+32768))
  7128  06EC  0084               	movwf	4
  7129  06ED  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  7130  06EE  0085               	movwf	5
  7131  06EF  0852               	movf	82,w	;volatile
  7132  06F0  0784               	addwf	4,f
  7133  06F1  1803               	skipnc
  7134  06F2  0A85               	incf	5,f
  7135  06F3  3F00               	moviw [0]fsr0
  7136  06F4  0021               	movlb	1	; select bank1
  7137  06F5  00EA               	movwf	_inPipes^(0+128)	;volatile
  7138  06F6  3083               	movlw	(high __stringtab)| (0+128)
  7139  06F7  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7140                           
  7141                           ;usb_device.c: 2068: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7142  06F8  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7143  06F9  00F1               	movwf	??_USBStdGetDscHandler+1
  7144  06FA  086A               	movf	_inPipes^(0+128),w	;volatile
  7145  06FB  00F0               	movwf	??_USBStdGetDscHandler
  7146  06FC  3002               	movlw	2
  7147  06FD  0770               	addwf	??_USBStdGetDscHandler,w
  7148  06FE  0084               	movwf	4
  7149  06FF  0871               	movf	??_USBStdGetDscHandler+1,w
  7150  0700  1803               	skipnc
  7151  0701  0A71               	incf	??_USBStdGetDscHandler+1,w
  7152  0702  0085               	movwf	5
  7153  0703  0800               	movf	0,w	;code access
  7154  0704  00F2               	movwf	??_USBStdGetDscHandler+2
  7155  0705  0872               	movf	??_USBStdGetDscHandler+2,w
  7156  0706  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7157                           
  7158                           ;usb_device.c: 2069: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7159  0707  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7160  0708  00F1               	movwf	??_USBStdGetDscHandler+1
  7161  0709  086A               	movf	_inPipes^(0+128),w	;volatile
  7162  070A  00F0               	movwf	??_USBStdGetDscHandler
  7163  070B  3003               	movlw	3
  7164  070C  0770               	addwf	??_USBStdGetDscHandler,w
  7165  070D  0084               	movwf	4
  7166  070E  0871               	movf	??_USBStdGetDscHandler+1,w
  7167  070F  1803               	skipnc
  7168  0710  0A71               	incf	??_USBStdGetDscHandler+1,w
  7169  0711  0085               	movwf	5
  7170  0712  0800               	movf	0,w	;code access
  7171  0713  00F2               	movwf	??_USBStdGetDscHandler+2
  7172  0714  0872               	movf	??_USBStdGetDscHandler+2,w
  7173  0715  00EE               	movwf	(_inPipes^(0+128)+4)	;volatile
  7174                           
  7175                           ;usb_device.c: 2070: }
  7176  0716  0008               	return
  7177  0717                     i1l4671:	
  7178                           
  7179                           ;usb_device.c: 2071: else
  7180                           ;usb_device.c: 2072: {
  7181                           ;usb_device.c: 2073: inPipes[0].info.Val = 0;
  7182  0717  0021               	movlb	1	; select bank1
  7183  0718  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7184                           
  7185                           ;usb_device.c: 2074: }
  7186                           ;usb_device.c: 2075: break;
  7187  0719  0008               	return
  7188  071A                     i1l4673:	
  7189                           ;usb_device.c: 2076: case 0x03:
  7190                           
  7191                           
  7192                           ;usb_device.c: 2080: if(SetupPkt.bDscIndex<3)
  7193  071A  3003               	movlw	3
  7194  071B  0020               	movlb	0	; select bank0
  7195  071C  0252               	subwf	82,w	;volatile
  7196  071D  1803               	skipnc
  7197  071E  2F38               	goto	i1l4679
  7198                           
  7199                           ;usb_device.c: 2081: {
  7200                           ;usb_device.c: 2083: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7201  071F  3007               	movlw	low (_USB_SD_Ptr| (0+32768))
  7202  0720  0084               	movwf	4
  7203  0721  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  7204  0722  0085               	movwf	5
  7205  0723  0852               	movf	82,w	;volatile
  7206  0724  0784               	addwf	4,f
  7207  0725  1803               	skipnc
  7208  0726  0A85               	incf	5,f
  7209  0727  3F00               	moviw [0]fsr0
  7210  0728  0021               	movlb	1	; select bank1
  7211  0729  00EA               	movwf	_inPipes^(0+128)	;volatile
  7212  072A  3083               	movlw	(high __stringtab)| (0+128)
  7213  072B  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7214                           
  7215                           ;usb_device.c: 2085: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7216  072C  086A               	movf	_inPipes^(0+128),w	;volatile
  7217  072D  0084               	movwf	4
  7218  072E  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7219  072F  0085               	movwf	5
  7220  0730  0800               	movf	0,w	;code access
  7221  0731  00F0               	movwf	??_USBStdGetDscHandler
  7222  0732  01F1               	clrf	??_USBStdGetDscHandler+1
  7223  0733  0870               	movf	??_USBStdGetDscHandler,w
  7224  0734  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7225  0735  0871               	movf	??_USBStdGetDscHandler+1,w
  7226  0736  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7227                           
  7228                           ;usb_device.c: 2086: }
  7229  0737  0008               	return
  7230  0738                     i1l4679:	
  7231                           
  7232                           ;usb_device.c: 2096: else
  7233                           ;usb_device.c: 2097: {
  7234                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  7235  0738  0021               	movlb	1	; select bank1
  7236  0739  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7237                           
  7238                           ;usb_device.c: 2099: }
  7239                           ;usb_device.c: 2100: break;
  7240  073A  0008               	return
  7241  073B                     i1l4681:	
  7242                           ;usb_device.c: 2101: default:
  7243                           
  7244                           
  7245                           ;usb_device.c: 2102: inPipes[0].info.Val = 0;
  7246  073B  0021               	movlb	1	; select bank1
  7247  073C  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7248                           
  7249                           ;usb_device.c: 2104: }
  7250                           
  7251                           ;usb_device.c: 2103: break;
  7252  073D  0008               	return
  7253  073E                     i1l4685:	
  7254  073E  0020               	movlb	0	; select bank0
  7255  073F  0853               	movf	83,w	;volatile
  7256                           
  7257                           ; Switch size 1, requested type "space"
  7258                           ; Number of cases is 3, Range of values is 1 to 3
  7259                           ; switch strategies available:
  7260                           ; Name         Instructions Cycles
  7261                           ; simple_byte           10     6 (average)
  7262                           ; direct_byte           15     9 (fixed)
  7263                           ; jumptable            263     9 (fixed)
  7264                           ;	Chosen strategy is simple_byte
  7265  0740  3A01               	xorlw	1	; case 1
  7266  0741  1903               	skipnz
  7267  0742  2EDD               	goto	i1l4659
  7268  0743  3A03               	xorlw	3	; case 2
  7269  0744  1903               	skipnz
  7270  0745  2EE7               	goto	i1l4663
  7271  0746  3A01               	xorlw	1	; case 3
  7272  0747  1903               	skipnz
  7273  0748  2F1A               	goto	i1l4673
  7274  0749  2F3B               	goto	i1l4681
  7275  074A  0008               	return
  7276  074B                     __end_of_USBStdGetDscHandler:	
  7277                           
  7278                           	psect	text28
  7279  0040                     __ptext28:	
  7280 ;; *************** function _USBStdFeatureReqHandler *****************
  7281 ;; Defined at:
  7282 ;;		line 2751 in file "../../../../../../framework/usb/src/usb_device.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  pUEP            2   10[BANK0 ] PTR unsigned char 
  7287 ;;		 -> UEP0(1), 
  7288 ;;  p               1   13[BANK0 ] PTR struct __BDT
  7289 ;;		 -> NULL(0), BDT(48), 
  7290 ;;  current_ep_d    1   12[BANK0 ] struct .
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;Total ram usage:        6 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    5
  7307 ;; This function calls:
  7308 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7309 ;; This function is called by:
  7310 ;;		_USBCheckStdRequest
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           
  7315                           ;psect for function _USBStdFeatureReqHandler
  7316  0040                     _USBStdFeatureReqHandler:	
  7317                           
  7318                           ;usb_device.c: 2753: BDT_ENTRY *p;
  7319                           ;usb_device.c: 2754: EP_STATUS current_ep_data;
  7320                           ;usb_device.c: 2758: unsigned char* pUEP;
  7321                           ;usb_device.c: 2796: if((SetupPkt.bFeature == 1)&&
  7322                           ;usb_device.c: 2797: (SetupPkt.Recipient == (0x00)))
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7326  0040  0020               	movlb	0	; select bank0
  7327  0041  0852               	movf	82,w	;volatile
  7328  0042  3A01               	xorlw	1
  7329  0043  1D03               	skipz
  7330  0044  2859               	goto	i1l4727
  7331  0045  0850               	movf	80,w	;volatile
  7332  0046  391F               	andlw	31
  7333  0047  3800               	iorlw	0
  7334  0048  1D03               	skipz
  7335  0049  2859               	goto	i1l4727
  7336                           
  7337                           ;usb_device.c: 2798: {
  7338                           ;usb_device.c: 2799: inPipes[0].info.bits.busy = 1;
  7339  004A  0021               	movlb	1	; select bank1
  7340  004B  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7341                           
  7342                           ;usb_device.c: 2800: if(SetupPkt.bRequest == 3)
  7343  004C  0020               	movlb	0	; select bank0
  7344  004D  0851               	movf	81,w	;volatile
  7345  004E  3A03               	xorlw	3
  7346  004F  1D03               	skipz
  7347  0050  2857               	goto	i1l4725
  7348                           
  7349                           ;usb_device.c: 2801: RemoteWakeup = 1;
  7350  0051  3001               	movlw	1
  7351  0052  00E8               	movwf	??_USBStdFeatureReqHandler
  7352  0053  0868               	movf	??_USBStdFeatureReqHandler,w
  7353  0054  0023               	movlb	3	; select bank3
  7354  0055  00C9               	movwf	_RemoteWakeup^(0+384)	;volatile
  7355  0056  2859               	goto	i1l4727
  7356  0057                     i1l4725:	
  7357                           
  7358                           ;usb_device.c: 2802: else
  7359                           ;usb_device.c: 2803: RemoteWakeup = 0;
  7360  0057  0023               	movlb	3	; select bank3
  7361  0058  01C9               	clrf	_RemoteWakeup^(0+384)	;volatile
  7362  0059                     i1l4727:	
  7363                           
  7364                           ;usb_device.c: 2804: }
  7365                           ;usb_device.c: 2807: if((SetupPkt.bFeature == 0)&&
  7366                           ;usb_device.c: 2808: (SetupPkt.Recipient == (0x02))&&
  7367                           ;usb_device.c: 2809: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7368                           ;usb_device.c: 2810: (USBDeviceState == CONFIGURED_STATE))
  7369  0059  0020               	movlb	0	; select bank0
  7370  005A  0852               	movf	82,w	;volatile
  7371  005B  1D03               	skipz
  7372  005C  0008               	return
  7373  005D  0850               	movf	80,w	;volatile
  7374  005E  391F               	andlw	31
  7375  005F  3A02               	xorlw	2
  7376  0060  1D03               	skipz
  7377  0061  0008               	return
  7378  0062  0854               	movf	84,w	;volatile
  7379  0063  390F               	andlw	15
  7380  0064  3A00               	xorlw	0
  7381  0065  1903               	skipnz
  7382  0066  0008               	return
  7383  0067  0854               	movf	84,w	;volatile
  7384  0068  390F               	andlw	15
  7385  0069  00E8               	movwf	??_USBStdFeatureReqHandler
  7386  006A  3003               	movlw	3
  7387  006B  0268               	subwf	??_USBStdFeatureReqHandler,w
  7388  006C  1803               	skipnc
  7389  006D  0008               	return
  7390  006E  0023               	movlb	3	; select bank3
  7391  006F  084E               	movf	_USBDeviceState^(0+384),w	;volatile
  7392  0070  3A20               	xorlw	32
  7393  0071  1D03               	skipz
  7394  0072  0008               	return
  7395                           
  7396                           ;usb_device.c: 2811: {
  7397                           ;usb_device.c: 2814: inPipes[0].info.bits.busy = 1;
  7398  0073  0021               	movlb	1	; select bank1
  7399  0074  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7400                           
  7401                           ;usb_device.c: 2817: if(SetupPkt.EPDir == 0)
  7402  0075  0020               	movlb	0	; select bank0
  7403  0076  1BD4               	btfsc	84,7	;volatile
  7404  0077  2886               	goto	i1l4741
  7405                           
  7406                           ;usb_device.c: 2818: {
  7407                           ;usb_device.c: 2819: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7408  0078  0854               	movf	84,w	;volatile
  7409  0079  390F               	andlw	15
  7410  007A  3EBD               	addlw	_pBDTEntryOut& (0+255)
  7411  007B  0086               	movwf	6
  7412  007C  3001               	movlw	1	; select bank3/4
  7413  007D  0087               	movwf	7
  7414  007E  0801               	movf	1,w
  7415  007F  00E8               	movwf	??_USBStdFeatureReqHandler
  7416  0080  0868               	movf	??_USBStdFeatureReqHandler,w
  7417  0081  00ED               	movwf	USBStdFeatureReqHandler@p
  7418                           
  7419                           ;usb_device.c: 2820: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7420  0082  0854               	movf	84,w	;volatile
  7421  0083  390F               	andlw	15
  7422  0084  3EB7               	addlw	_ep_data_out& (0+255)
  7423  0085  2893               	goto	L9
  7424  0086                     i1l4741:	
  7425                           ;usb_device.c: 2821: }
  7426                           
  7427                           
  7428                           ;usb_device.c: 2822: else
  7429                           ;usb_device.c: 2823: {
  7430                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7431  0086  0854               	movf	84,w	;volatile
  7432  0087  390F               	andlw	15
  7433  0088  3EBA               	addlw	_pBDTEntryIn& (0+255)
  7434  0089  0086               	movwf	6
  7435  008A  3001               	movlw	1	; select bank3/4
  7436  008B  0087               	movwf	7
  7437  008C  0801               	movf	1,w
  7438  008D  00E8               	movwf	??_USBStdFeatureReqHandler
  7439  008E  0868               	movf	??_USBStdFeatureReqHandler,w
  7440  008F  00ED               	movwf	USBStdFeatureReqHandler@p
  7441                           
  7442                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7443  0090  0854               	movf	84,w	;volatile
  7444  0091  390F               	andlw	15
  7445  0092  3EB4               	addlw	_ep_data_in& (0+255)
  7446  0093                     L9:	
  7447  0093  0086               	movwf	6
  7448  0094  3001               	movlw	1	; select bank3/4
  7449  0095  0087               	movwf	7
  7450  0096  0801               	movf	1,w
  7451  0097  00E8               	movwf	??_USBStdFeatureReqHandler
  7452  0098  0868               	movf	??_USBStdFeatureReqHandler,w
  7453  0099  00EC               	movwf	USBStdFeatureReqHandler@current_ep_data
  7454                           
  7455                           ;usb_device.c: 2826: }
  7456                           ;usb_device.c: 2832: if(current_ep_data.bits.ping_pong_state == 0)
  7457  009A  186C               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7458  009B  28A1               	goto	i1l627
  7459                           
  7460                           ;usb_device.c: 2833: {
  7461                           ;usb_device.c: 2834: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  7462  009C  30FB               	movlw	251
  7463  009D  00E8               	movwf	??_USBStdFeatureReqHandler
  7464  009E  0868               	movf	??_USBStdFeatureReqHandler,w
  7465  009F  05ED               	andwf	USBStdFeatureReqHandler@p,f
  7466                           
  7467                           ;usb_device.c: 2835: }
  7468  00A0  28A2               	goto	i1l628
  7469  00A1                     i1l627:	
  7470                           
  7471                           ;usb_device.c: 2836: else
  7472                           ;usb_device.c: 2837: {
  7473                           ;usb_device.c: 2838: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  7474  00A1  156D               	bsf	USBStdFeatureReqHandler@p,2
  7475  00A2                     i1l628:	
  7476                           
  7477                           ;usb_device.c: 2839: }
  7478                           ;usb_device.c: 2844: if(SetupPkt.EPDir == 0)
  7479  00A2  1BD4               	btfsc	84,7	;volatile
  7480  00A3  28AA               	goto	i1l4749
  7481                           
  7482                           ;usb_device.c: 2845: {
  7483                           ;usb_device.c: 2846: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7484  00A4  086D               	movf	USBStdFeatureReqHandler@p,w
  7485  00A5  00E8               	movwf	??_USBStdFeatureReqHandler
  7486  00A6  0854               	movf	84,w	;volatile
  7487  00A7  390F               	andlw	15
  7488  00A8  3EBD               	addlw	_pBDTEntryOut& (0+255)
  7489  00A9  28AF               	goto	L10
  7490  00AA                     i1l4749:	
  7491                           ;usb_device.c: 2847: }
  7492                           
  7493                           
  7494                           ;usb_device.c: 2848: else
  7495                           ;usb_device.c: 2849: {
  7496                           ;usb_device.c: 2850: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7497  00AA  086D               	movf	USBStdFeatureReqHandler@p,w
  7498  00AB  00E8               	movwf	??_USBStdFeatureReqHandler
  7499  00AC  0854               	movf	84,w	;volatile
  7500  00AD  390F               	andlw	15
  7501  00AE  3EBA               	addlw	_pBDTEntryIn& (0+255)
  7502  00AF                     L10:	
  7503  00AF  0086               	movwf	6
  7504  00B0  3001               	movlw	1	; select bank3/4
  7505  00B1  0087               	movwf	7
  7506  00B2  0868               	movf	??_USBStdFeatureReqHandler,w
  7507  00B3  0081               	movwf	1
  7508                           
  7509                           ;usb_device.c: 2851: }
  7510                           ;usb_device.c: 2854: if(SetupPkt.bRequest == 3)
  7511  00B4  0851               	movf	81,w	;volatile
  7512  00B5  3A03               	xorlw	3
  7513  00B6  1D03               	skipz
  7514  00B7  28D3               	goto	i1l4765
  7515                           
  7516                           ;usb_device.c: 2855: {
  7517                           ;usb_device.c: 2856: if(p->STAT.UOWN == 1)
  7518  00B8  086D               	movf	USBStdFeatureReqHandler@p,w
  7519  00B9  0086               	movwf	6
  7520  00BA  0187               	clrf	7
  7521  00BB  1F81               	btfss	1,7
  7522  00BC  28CA               	goto	i1l4761
  7523                           
  7524                           ;usb_device.c: 2857: {
  7525                           ;usb_device.c: 2860: if(SetupPkt.EPDir == 0)
  7526  00BD  1BD4               	btfsc	84,7	;volatile
  7527  00BE  28C3               	goto	i1l4759
  7528                           
  7529                           ;usb_device.c: 2861: {
  7530                           ;usb_device.c: 2862: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7531  00BF  0854               	movf	84,w	;volatile
  7532  00C0  390F               	andlw	15
  7533  00C1  3EB7               	addlw	_ep_data_out& (0+255)
  7534  00C2  28C6               	goto	L11
  7535  00C3                     i1l4759:	
  7536                           ;usb_device.c: 2863: }
  7537                           
  7538                           
  7539                           ;usb_device.c: 2864: else
  7540                           ;usb_device.c: 2865: {
  7541                           ;usb_device.c: 2866: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7542  00C3  0854               	movf	84,w	;volatile
  7543  00C4  390F               	andlw	15
  7544  00C5  3EB4               	addlw	_ep_data_in& (0+255)
  7545  00C6                     L11:	
  7546  00C6  0086               	movwf	6
  7547  00C7  3001               	movlw	1	; select bank3/4
  7548  00C8  0087               	movwf	7
  7549  00C9  1481               	bsf	1,1
  7550  00CA                     i1l4761:	
  7551                           
  7552                           ;usb_device.c: 2867: }
  7553                           ;usb_device.c: 2868: }
  7554                           ;usb_device.c: 2871: p->STAT.Val |= 0x04;
  7555  00CA  086D               	movf	USBStdFeatureReqHandler@p,w
  7556  00CB  0086               	movwf	6
  7557  00CC  0187               	clrf	7
  7558  00CD  1501               	bsf	1,2
  7559                           
  7560                           ;usb_device.c: 2872: p->STAT.Val |= 0x80;
  7561  00CE  086D               	movf	USBStdFeatureReqHandler@p,w
  7562  00CF  0086               	movwf	6
  7563  00D0  0187               	clrf	7
  7564  00D1  1781               	bsf	1,7
  7565                           
  7566                           ;usb_device.c: 2873: }
  7567  00D2  0008               	return
  7568  00D3                     i1l4765:	
  7569                           
  7570                           ;usb_device.c: 2874: else
  7571                           ;usb_device.c: 2875: {
  7572                           ;usb_device.c: 2879: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7573  00D3  3004               	movlw	4
  7574  00D4  00E8               	movwf	??_USBStdFeatureReqHandler
  7575  00D5  0868               	movf	??_USBStdFeatureReqHandler,w
  7576  00D6  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  7577                           
  7578                           ;usb_device.c: 2881: if(p->STAT.UOWN == 1)
  7579  00D7  086D               	movf	USBStdFeatureReqHandler@p,w
  7580  00D8  0086               	movwf	6
  7581  00D9  0187               	clrf	7
  7582  00DA  1F81               	btfss	1,7
  7583  00DB  28F7               	goto	i1l4775
  7584                           
  7585                           ;usb_device.c: 2882: {
  7586                           ;usb_device.c: 2885: p->STAT.Val &= (~0x80);
  7587  00DC  307F               	movlw	127
  7588  00DD  00E8               	movwf	??_USBStdFeatureReqHandler
  7589  00DE  086D               	movf	USBStdFeatureReqHandler@p,w
  7590  00DF  0086               	movwf	6
  7591  00E0  0187               	clrf	7
  7592  00E1  0868               	movf	??_USBStdFeatureReqHandler,w
  7593  00E2  0581               	andwf	1,f
  7594                           
  7595                           ;usb_device.c: 2886: p->STAT.Val |= 0x40;
  7596  00E3  086D               	movf	USBStdFeatureReqHandler@p,w
  7597  00E4  0086               	movwf	6
  7598  00E5  0187               	clrf	7
  7599  00E6  1701               	bsf	1,6
  7600                           
  7601                           ;usb_device.c: 2887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7602  00E7  3005               	movlw	5
  7603  00E8  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7604  00E9  3000               	movlw	0
  7605  00EA  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7606  00EB  086D               	movf	USBStdFeatureReqHandler@p,w
  7607  00EC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7608  00ED  3000               	movlw	0
  7609  00EE  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7610  00EF  3001               	movlw	1
  7611  00F0  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7612  00F1  3000               	movlw	0
  7613  00F2  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7614  00F3  318B  231F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7615                           
  7616                           ;usb_device.c: 2888: }
  7617  00F6  28FC               	goto	i1l4777
  7618  00F7                     i1l4775:	
  7619                           
  7620                           ;usb_device.c: 2889: else
  7621                           ;usb_device.c: 2890: {
  7622                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
  7623  00F7  0020               	movlb	0	; select bank0
  7624  00F8  086D               	movf	USBStdFeatureReqHandler@p,w
  7625  00F9  0086               	movwf	6
  7626  00FA  0187               	clrf	7
  7627  00FB  1701               	bsf	1,6
  7628  00FC                     i1l4777:	
  7629                           
  7630                           ;usb_device.c: 2893: }
  7631                           ;usb_device.c: 2897: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7632  00FC  3004               	movlw	4
  7633  00FD  0020               	movlb	0	; select bank0
  7634  00FE  00E8               	movwf	??_USBStdFeatureReqHandler
  7635  00FF  0868               	movf	??_USBStdFeatureReqHandler,w
  7636  0100  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  7637                           
  7638                           ;usb_device.c: 2903: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7639  0101  18EC               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7640  0102  2908               	goto	i1l640
  7641  0103  086D               	movf	USBStdFeatureReqHandler@p,w
  7642  0104  0086               	movwf	6
  7643  0105  0187               	clrf	7
  7644  0106  1F81               	btfss	1,7
  7645  0107  292C               	goto	i1l4789
  7646  0108                     i1l640:	
  7647                           
  7648                           ;usb_device.c: 2904: {
  7649                           ;usb_device.c: 2905: if(SetupPkt.EPDir == 0)
  7650  0108  1BD4               	btfsc	84,7	;volatile
  7651  0109  290E               	goto	i1l4785
  7652                           
  7653                           ;usb_device.c: 2906: {
  7654                           ;usb_device.c: 2907: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7655  010A  0854               	movf	84,w	;volatile
  7656  010B  390F               	andlw	15
  7657  010C  3EB7               	addlw	_ep_data_out& (0+255)
  7658  010D  2911               	goto	L12
  7659  010E                     i1l4785:	
  7660                           ;usb_device.c: 2908: }
  7661                           
  7662                           
  7663                           ;usb_device.c: 2909: else
  7664                           ;usb_device.c: 2910: {
  7665                           ;usb_device.c: 2911: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7666  010E  0854               	movf	84,w	;volatile
  7667  010F  390F               	andlw	15
  7668  0110  3EB4               	addlw	_ep_data_in& (0+255)
  7669  0111                     L12:	
  7670  0111  0086               	movwf	6
  7671  0112  3001               	movlw	1	; select bank3/4
  7672  0113  0087               	movwf	7
  7673  0114  1081               	bcf	1,1
  7674                           
  7675                           ;usb_device.c: 2912: }
  7676                           ;usb_device.c: 2914: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7677  0115  303B               	movlw	59
  7678  0116  00E8               	movwf	??_USBStdFeatureReqHandler
  7679  0117  086D               	movf	USBStdFeatureReqHandler@p,w
  7680  0118  0086               	movwf	6
  7681  0119  0187               	clrf	7
  7682  011A  0868               	movf	??_USBStdFeatureReqHandler,w
  7683  011B  0581               	andwf	1,f
  7684                           
  7685                           ;usb_device.c: 2917: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7686  011C  3005               	movlw	5
  7687  011D  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7688  011E  3000               	movlw	0
  7689  011F  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7690  0120  086D               	movf	USBStdFeatureReqHandler@p,w
  7691  0121  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7692  0122  3000               	movlw	0
  7693  0123  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7694  0124  3001               	movlw	1
  7695  0125  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7696  0126  3000               	movlw	0
  7697  0127  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7698  0128  318B  231F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7699                           
  7700                           ;usb_device.c: 2918: }
  7701  012B  2934               	goto	i1l4791
  7702  012C                     i1l4789:	
  7703                           
  7704                           ;usb_device.c: 2919: else
  7705                           ;usb_device.c: 2920: {
  7706                           ;usb_device.c: 2922: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7707  012C  303B               	movlw	59
  7708  012D  0020               	movlb	0	; select bank0
  7709  012E  00E8               	movwf	??_USBStdFeatureReqHandler
  7710  012F  086D               	movf	USBStdFeatureReqHandler@p,w
  7711  0130  0086               	movwf	6
  7712  0131  0187               	clrf	7
  7713  0132  0868               	movf	??_USBStdFeatureReqHandler,w
  7714  0133  0581               	andwf	1,f
  7715  0134                     i1l4791:	
  7716                           
  7717                           ;usb_device.c: 2923: }
  7718                           ;usb_device.c: 2970: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7719  0134  0020               	movlb	0	; select bank0
  7720  0135  0854               	movf	84,w	;volatile
  7721  0136  390F               	andlw	15
  7722  0137  3E98               	addlw	152
  7723  0138  00E8               	movwf	??_USBStdFeatureReqHandler
  7724  0139  01E9               	clrf	??_USBStdFeatureReqHandler+1
  7725  013A  300E               	movlw	14
  7726  013B  3DE9               	addwfc	??_USBStdFeatureReqHandler+1,f
  7727  013C  0868               	movf	??_USBStdFeatureReqHandler,w
  7728  013D  00EA               	movwf	USBStdFeatureReqHandler@pUEP
  7729  013E  0869               	movf	??_USBStdFeatureReqHandler+1,w
  7730  013F  00EB               	movwf	USBStdFeatureReqHandler@pUEP+1
  7731                           
  7732                           ;usb_device.c: 2974: *pUEP &= ~0x0001;
  7733  0140  30FE               	movlw	254
  7734  0141  00E8               	movwf	??_USBStdFeatureReqHandler
  7735  0142  086A               	movf	USBStdFeatureReqHandler@pUEP,w
  7736  0143  0086               	movwf	6
  7737  0144  086B               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7738  0145  0087               	movwf	7
  7739  0146  0868               	movf	??_USBStdFeatureReqHandler,w
  7740  0147  0581               	andwf	1,f
  7741  0148  0008               	return
  7742  0149                     __end_of_USBStdFeatureReqHandler:	
  7743                           
  7744                           	psect	text29
  7745  0B1F                     __ptext29:	
  7746 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7747 ;; Defined at:
  7748 ;;		line 105 in file "../src/main.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  event           2    2[BANK0 ] enum E2688
  7751 ;;  pdata           2    4[BANK0 ] PTR void 
  7752 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7753 ;;  size            2    6[BANK0 ] unsigned int 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7765 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;Total ram usage:        6 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    4
  7772 ;; This function calls:
  7773 ;;		_APP_DeviceCDCBasicDemoInitialize
  7774 ;;		_APP_LEDUpdateUSBStatus
  7775 ;;		_USBCheckCDCRequest
  7776 ;; This function is called by:
  7777 ;;		_USBDeviceTasks
  7778 ;;		_USBStdSetCfgHandler
  7779 ;;		_USBSuspend
  7780 ;;		_USBWakeFromSuspend
  7781 ;;		_USBCtrlTrfSetupHandler
  7782 ;;		_USBCheckStdRequest
  7783 ;;		_USBStdFeatureReqHandler
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           
  7788                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7789  0B1F                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7790                           
  7791                           ;main.c: 107: switch( (int) event )
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7795  0B1F  2B2F               	goto	i1l4493
  7796  0B20                     i1l4481:	
  7797                           ;main.c: 112: case EVENT_SOF:
  7798                           
  7799                           ;main.c: 110: break;
  7800                           
  7801                           ;main.c: 108: {
  7802                           ;main.c: 109: case EVENT_TRANSFER:
  7803                           
  7804                           
  7805                           ;main.c: 115: APP_LEDUpdateUSBStatus();
  7806  0B20  318C  248A         	fcall	_APP_LEDUpdateUSBStatus
  7807                           
  7808                           ;main.c: 116: break;
  7809  0B22  0008               	return
  7810  0B23                     i1l4483:	
  7811                           ;main.c: 118: case EVENT_SUSPEND:
  7812                           
  7813                           
  7814                           ;main.c: 120: APP_LEDUpdateUSBStatus();
  7815  0B23  318C  248A         	fcall	_APP_LEDUpdateUSBStatus
  7816                           
  7817                           ;main.c: 121: break;
  7818  0B25  0008               	return
  7819  0B26                     i1l4485:	
  7820                           ;main.c: 123: case EVENT_RESUME:
  7821                           
  7822                           
  7823                           ;main.c: 125: APP_LEDUpdateUSBStatus();
  7824  0B26  318C  248A         	fcall	_APP_LEDUpdateUSBStatus
  7825                           
  7826                           ;main.c: 126: break;
  7827  0B28  0008               	return
  7828  0B29                     i1l4487:	
  7829                           ;main.c: 128: case EVENT_CONFIGURED:
  7830                           
  7831                           
  7832                           ;main.c: 131: APP_DeviceCDCBasicDemoInitialize();
  7833  0B29  3189  2107         	fcall	_APP_DeviceCDCBasicDemoInitialize
  7834                           
  7835                           ;main.c: 135: break;
  7836                           
  7837                           ;main.c: 134: case EVENT_SET_DESCRIPTOR:
  7838                           
  7839                           ;main.c: 132: break;
  7840  0B2B  0008               	return
  7841  0B2C                     i1l4489:	
  7842                           ;main.c: 137: case EVENT_EP0_REQUEST:
  7843                           
  7844                           
  7845                           ;main.c: 140: USBCheckCDCRequest();
  7846  0B2C  318D  252F         	fcall	_USBCheckCDCRequest
  7847                           
  7848                           ;main.c: 151: }
  7849                           
  7850                           ;main.c: 150: break;
  7851                           
  7852                           ;main.c: 149: default:
  7853                           
  7854                           ;main.c: 147: break;
  7855                           
  7856                           ;main.c: 146: case EVENT_TRANSFER_TERMINATED:
  7857                           
  7858                           ;main.c: 144: break;
  7859                           
  7860                           ;main.c: 143: case EVENT_BUS_ERROR:
  7861                           
  7862                           ;main.c: 141: break;
  7863  0B2E  0008               	return
  7864  0B2F                     i1l4493:	
  7865                           
  7866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7867                           ; Switch size 1, requested type "space"
  7868                           ; Number of cases is 2, Range of values is 0 to 127
  7869                           ; switch strategies available:
  7870                           ; Name         Instructions Cycles
  7871                           ; simple_byte            7     4 (average)
  7872                           ; direct_byte          262     6 (fixed)
  7873                           ; jumptable            260     6 (fixed)
  7874                           ;	Chosen strategy is simple_byte
  7875  0B2F  0020               	movlb	0	; select bank0
  7876  0B30  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7877  0B31  3A00               	xorlw	0	; case 0
  7878  0B32  1903               	skipnz
  7879  0B33  2B38               	goto	i1l5657
  7880  0B34  3A7F               	xorlw	127	; case 127
  7881  0B35  1903               	skipnz
  7882  0B36  2B52               	goto	i1l5659
  7883  0B37  2B57               	goto	i1l130
  7884  0B38                     i1l5657:	
  7885                           
  7886                           ; Switch size 1, requested type "space"
  7887                           ; Number of cases is 8, Range of values is 1 to 117
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte           25    13 (average)
  7891                           ; direct_byte          243     9 (fixed)
  7892                           ; jumptable            263     9 (fixed)
  7893                           ;	Chosen strategy is simple_byte
  7894  0B38  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7895  0B39  3A01               	xorlw	1	; case 1
  7896  0B3A  1903               	skipnz
  7897  0B3B  2B29               	goto	i1l4487
  7898  0B3C  3A03               	xorlw	3	; case 2
  7899  0B3D  1903               	skipnz
  7900  0B3E  2B57               	goto	i1l130
  7901  0B3F  3A01               	xorlw	1	; case 3
  7902  0B40  1903               	skipnz
  7903  0B41  2B2C               	goto	i1l4489
  7904  0B42  3A06               	xorlw	6	; case 5
  7905  0B43  1903               	skipnz
  7906  0B44  2B57               	goto	i1l130
  7907  0B45  3A77               	xorlw	119	; case 114
  7908  0B46  1903               	skipnz
  7909  0B47  2B57               	goto	i1l130
  7910  0B48  3A01               	xorlw	1	; case 115
  7911  0B49  1903               	skipnz
  7912  0B4A  2B20               	goto	i1l4481
  7913  0B4B  3A07               	xorlw	7	; case 116
  7914  0B4C  1903               	skipnz
  7915  0B4D  2B26               	goto	i1l4485
  7916  0B4E  3A01               	xorlw	1	; case 117
  7917  0B4F  1903               	skipnz
  7918  0B50  2B23               	goto	i1l4483
  7919  0B51  2B57               	goto	i1l130
  7920  0B52                     i1l5659:	
  7921                           
  7922                           ; Switch size 1, requested type "space"
  7923                           ; Number of cases is 1, Range of values is 255 to 255
  7924                           ; switch strategies available:
  7925                           ; Name         Instructions Cycles
  7926                           ; simple_byte            4     3 (average)
  7927                           ; direct_byte            7     5 (fixed)
  7928                           ; jumptable            263     9 (fixed)
  7929                           ;	Chosen strategy is simple_byte
  7930  0B52  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7931  0B53  3AFF               	xorlw	255	; case 255
  7932  0B54  1903               	skipnz
  7933  0B55  2B57               	goto	i1l130
  7934  0B56  2B57               	goto	i1l130
  7935  0B57                     i1l130:	
  7936                           ;main.c: 152: return 1;
  7937                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7938                           
  7939  0B57  0008               	return
  7940  0B58                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7941                           
  7942                           	psect	text30
  7943  0D2F                     __ptext30:	
  7944 ;; *************** function _USBCheckCDCRequest *****************
  7945 ;; Defined at:
  7946 ;;		line 204 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;		None               void
  7953 ;; Registers used:
  7954 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;Total ram usage:        1 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function _USBCheckCDCRequest
  7975  0D2F                     _USBCheckCDCRequest:	
  7976                           
  7977                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7978                           
  7979                           ;incstack = 0
  7980                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7981  0D2F  0020               	movlb	0	; select bank0
  7982  0D30  0850               	movf	80,w	;volatile
  7983  0D31  391F               	andlw	31
  7984  0D32  3A01               	xorlw	1
  7985  0D33  1D03               	btfss	3,2
  7986  0D34  0008               	return
  7987                           
  7988                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7989  0D35  0E50               	swapf	80,w	;volatile
  7990  0D36  0C89               	rrf	9,f
  7991  0D37  3903               	andlw	3
  7992  0D38  3A01               	xorlw	1
  7993  0D39  1D03               	btfss	3,2
  7994  0D3A  0008               	return
  7995                           
  7996                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7997                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7998  0D3B  0854               	movf	84,w	;volatile
  7999  0D3C  1903               	btfsc	3,2
  8000  0D3D  2D7E               	goto	i1l4477
  8001  0D3E  0854               	movf	84,w	;volatile
  8002  0D3F  3A01               	xorlw	1
  8003  0D40  1D03               	btfss	3,2
  8004  0D41  0008               	return
  8005  0D42  2D7E               	goto	i1l4477
  8006  0D43                     i1l4445:	
  8007                           ;usb_device_cdc.c: 224: {
  8008                           ;usb_device_cdc.c: 226: case 0x00:
  8009                           
  8010                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  8011                           
  8012                           
  8013                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8014  0D43  30DC               	movlw	low _dummy_encapsulated_cmd_response
  8015  0D44  0021               	movlb	1	; select bank1
  8016  0D45  00EA               	movwf	_inPipes^(0+128)	;volatile
  8017  0D46  3001               	movlw	high _dummy_encapsulated_cmd_response
  8018  0D47  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8019                           
  8020                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  8021  0D48  3000               	movlw	0
  8022  0D49  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  8023  0D4A  3008               	movlw	8
  8024  0D4B  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  8025                           
  8026                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8027  0D4C  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  8028                           
  8029                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8030  0D4D  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8031                           
  8032                           ;usb_device_cdc.c: 232: break;
  8033  0D4E  0008               	return
  8034  0D4F                     i1l4453:	
  8035                           ;usb_device_cdc.c: 233: case 0x01:
  8036                           
  8037                           
  8038                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8039  0D4F  30DC               	movlw	low _dummy_encapsulated_cmd_response
  8040  0D50  0021               	movlb	1	; select bank1
  8041  0D51  00EA               	movwf	_inPipes^(0+128)	;volatile
  8042  0D52  3001               	movlw	high _dummy_encapsulated_cmd_response
  8043  0D53  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8044                           
  8045                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  8046  0D54  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8047                           
  8048                           ;usb_device_cdc.c: 237: break;
  8049  0D55  0008               	return
  8050  0D56                     i1l4457:	
  8051                           ;usb_device_cdc.c: 241: case 0x20:
  8052                           
  8053                           
  8054                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  8055  0D56  0020               	movlb	0	; select bank0
  8056  0D57  0857               	movf	87,w	;volatile
  8057  0D58  0023               	movlb	3	; select bank3
  8058  0D59  01AE               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  8059  0D5A  07AE               	addwf	((_outPipes+1)^(0+384)+3),f	;volatile
  8060  0D5B  0020               	movlb	0	; select bank0
  8061  0D5C  0856               	movf	86,w	;volatile
  8062  0D5D  0023               	movlb	3	; select bank3
  8063  0D5E  01AD               	clrf	(_outPipes^(0+384)+3)	;volatile
  8064  0D5F  07AD               	addwf	(_outPipes^(0+384)+3),f	;volatile
  8065                           
  8066                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8067  0D60  30E4               	movlw	_line_coding& (0+255)
  8068  0D61  00F0               	movwf	??_USBCheckCDCRequest
  8069  0D62  0870               	movf	??_USBCheckCDCRequest,w
  8070  0D63  00AA               	movwf	_outPipes^(0+384)	;volatile
  8071                           
  8072                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  8073  0D64  01AF               	clrf	(_outPipes+5)^(0+384)	;volatile
  8074                           
  8075                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  8076  0D65  17AC               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8077                           
  8078                           ;usb_device_cdc.c: 246: break;
  8079  0D66  0008               	return
  8080  0D67                     i1l4465:	
  8081                           ;usb_device_cdc.c: 248: case 0x21:
  8082                           
  8083                           
  8084                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8085  0D67  30E4               	movlw	low _line_coding
  8086  0D68  0021               	movlb	1	; select bank1
  8087  0D69  00EA               	movwf	_inPipes^(0+128)	;volatile
  8088  0D6A  3001               	movlw	high _line_coding
  8089  0D6B  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8090  0D6C  3000               	movlw	0
  8091  0D6D  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  8092  0D6E  3007               	movlw	7
  8093  0D6F  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  8094  0D70  30C1               	movlw	193
  8095  0D71  00F0               	movwf	??_USBCheckCDCRequest
  8096  0D72  0870               	movf	??_USBCheckCDCRequest,w
  8097  0D73  00EC               	movwf	(_inPipes^(0+128)+2)	;volatile
  8098                           
  8099                           ;usb_device_cdc.c: 253: break;
  8100  0D74  0008               	return
  8101  0D75                     i1l4471:	
  8102                           ;usb_device_cdc.c: 255: case 0x22:
  8103                           
  8104                           
  8105                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8106  0D75  0020               	movlb	0	; select bank0
  8107  0D76  0852               	movf	82,w	;volatile
  8108  0D77  00F0               	movwf	??_USBCheckCDCRequest
  8109  0D78  0870               	movf	??_USBCheckCDCRequest,w
  8110  0D79  0023               	movlb	3	; select bank3
  8111  0D7A  00D8               	movwf	_control_signal_bitmap^(0+384)
  8112                           
  8113                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  8114  0D7B  0021               	movlb	1	; select bank1
  8115  0D7C  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8116                           
  8117                           ;usb_device_cdc.c: 315: }
  8118                           
  8119                           ;usb_device_cdc.c: 314: break;
  8120                           
  8121                           ;usb_device_cdc.c: 313: default:
  8122                           
  8123                           ;usb_device_cdc.c: 289: break;
  8124  0D7D  0008               	return
  8125  0D7E                     i1l4477:	
  8126  0D7E  0020               	movlb	0	; select bank0
  8127  0D7F  0851               	movf	81,w	;volatile
  8128                           
  8129                           ; Switch size 1, requested type "space"
  8130                           ; Number of cases is 5, Range of values is 0 to 34
  8131                           ; switch strategies available:
  8132                           ; Name         Instructions Cycles
  8133                           ; simple_byte           16     9 (average)
  8134                           ; direct_byte           76     6 (fixed)
  8135                           ; jumptable            260     6 (fixed)
  8136                           ;	Chosen strategy is simple_byte
  8137  0D80  3A00               	xorlw	0	; case 0
  8138  0D81  1903               	skipnz
  8139  0D82  2D43               	goto	i1l4445
  8140  0D83  3A01               	xorlw	1	; case 1
  8141  0D84  1903               	skipnz
  8142  0D85  2D4F               	goto	i1l4453
  8143  0D86  3A21               	xorlw	33	; case 32
  8144  0D87  1903               	skipnz
  8145  0D88  2D56               	goto	i1l4457
  8146  0D89  3A01               	xorlw	1	; case 33
  8147  0D8A  1903               	skipnz
  8148  0D8B  2D67               	goto	i1l4465
  8149  0D8C  3A03               	xorlw	3	; case 34
  8150  0D8D  1903               	skipnz
  8151  0D8E  2D75               	goto	i1l4471
  8152  0D8F  2D90               	goto	i1l690
  8153  0D90                     i1l690:	
  8154  0D90  0008               	return
  8155  0D91                     __end_of_USBCheckCDCRequest:	
  8156                           
  8157                           	psect	text31
  8158  0C8A                     __ptext31:	
  8159 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8160 ;; Defined at:
  8161 ;;		line 75 in file "../src/app_led_usb_status.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;		None
  8166 ;; Return value:  Size  Location     Type
  8167 ;;		None               void
  8168 ;; Registers used:
  8169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;Total ram usage:        0 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    1
  8182 ;; This function calls:
  8183 ;;		_LED_Off
  8184 ;;		_LED_On
  8185 ;; This function is called by:
  8186 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function _APP_LEDUpdateUSBStatus
  8192  0C8A                     _APP_LEDUpdateUSBStatus:	
  8193                           
  8194                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  8195                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  8196                           
  8197                           ;incstack = 0
  8198                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8199  0C8A  003D               	movlb	29	; select bank29
  8200  0C8B  1C8E               	btfss	14,1	;volatile
  8201  0C8C  2CCC               	goto	i1l4427
  8202                           
  8203                           ;app_led_usb_status.c: 80: {
  8204                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
  8205  0C8D  3001               	movlw	1
  8206  0C8E  3189  215F         	fcall	_LED_Off
  8207                           
  8208                           ;app_led_usb_status.c: 82: return;
  8209  0C90  0008               	return
  8210  0C91                     i1l4401:	
  8211                           ;app_led_usb_status.c: 86: {
  8212                           ;app_led_usb_status.c: 87: case CONFIGURED_STATE:
  8213                           
  8214                           ;app_led_usb_status.c: 83: }
  8215                           ;app_led_usb_status.c: 85: switch(USBDeviceState)
  8216                           
  8217                           
  8218                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  8219  0C91  3001               	movlw	1
  8220  0C92  0023               	movlb	3	; select bank3
  8221  0C93  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8222  0C94  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8223  0C95  1D03               	skipz
  8224  0C96  2C9C               	goto	i1l4405
  8225                           
  8226                           ;app_led_usb_status.c: 91: {
  8227                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
  8228  0C97  3001               	movlw	1
  8229  0C98  3189  2178  318C   	fcall	_LED_On
  8230                           
  8231                           ;app_led_usb_status.c: 93: }
  8232  0C9B  2CD2               	goto	i1l4429
  8233  0C9C                     i1l4405:	
  8234                           
  8235                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  8236  0C9C  304B               	movlw	75
  8237  0C9D  0023               	movlb	3	; select bank3
  8238  0C9E  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8239  0C9F  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8240  0CA0  1D03               	skipz
  8241  0CA1  2CA7               	goto	i1l4409
  8242                           
  8243                           ;app_led_usb_status.c: 95: {
  8244                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
  8245  0CA2  3001               	movlw	1
  8246  0CA3  3189  215F  318C   	fcall	_LED_Off
  8247                           
  8248                           ;app_led_usb_status.c: 97: }
  8249  0CA6  2CD2               	goto	i1l4429
  8250  0CA7                     i1l4409:	
  8251                           
  8252                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  8253  0CA7  3000               	movlw	0
  8254  0CA8  0023               	movlb	3	; select bank3
  8255  0CA9  0241               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8256  0CAA  3097               	movlw	151
  8257  0CAB  2CC5               	goto	L13
  8258  0CAC                     i1l4413:	
  8259                           ;app_led_usb_status.c: 104: default:
  8260                           
  8261                           ;app_led_usb_status.c: 101: }
  8262                           ;app_led_usb_status.c: 102: break;
  8263                           
  8264                           ;app_led_usb_status.c: 99: {
  8265                           ;app_led_usb_status.c: 100: ledCount = 0;
  8266                           
  8267                           
  8268                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  8269  0CAC  3001               	movlw	1
  8270  0CAD  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8271  0CAE  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8272  0CAF  1D03               	skipz
  8273  0CB0  2CB6               	goto	i1l4417
  8274                           
  8275                           ;app_led_usb_status.c: 108: {
  8276                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
  8277  0CB1  3001               	movlw	1
  8278  0CB2  3189  2178  318C   	fcall	_LED_On
  8279                           
  8280                           ;app_led_usb_status.c: 110: }
  8281  0CB5  2CD2               	goto	i1l4429
  8282  0CB6                     i1l4417:	
  8283                           
  8284                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  8285  0CB6  3032               	movlw	50
  8286  0CB7  0023               	movlb	3	; select bank3
  8287  0CB8  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8288  0CB9  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8289  0CBA  1D03               	skipz
  8290  0CBB  2CC1               	goto	i1l4421
  8291                           
  8292                           ;app_led_usb_status.c: 112: {
  8293                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
  8294  0CBC  3001               	movlw	1
  8295  0CBD  3189  215F  318C   	fcall	_LED_Off
  8296                           
  8297                           ;app_led_usb_status.c: 114: }
  8298  0CC0  2CD2               	goto	i1l4429
  8299  0CC1                     i1l4421:	
  8300                           
  8301                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  8302  0CC1  3003               	movlw	3
  8303  0CC2  0023               	movlb	3	; select bank3
  8304  0CC3  0241               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8305  0CC4  30B7               	movlw	183
  8306  0CC5                     L13:	
  8307  0CC5  1903               	skipnz
  8308  0CC6  0240               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8309  0CC7  1C03               	skipc
  8310  0CC8  2CD2               	goto	i1l4429
  8311                           
  8312                           ;app_led_usb_status.c: 116: {
  8313                           ;app_led_usb_status.c: 117: ledCount = 0;
  8314  0CC9  01C0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+384)
  8315  0CCA  01C1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384)
  8316                           
  8317                           ;app_led_usb_status.c: 120: }
  8318                           
  8319                           ;app_led_usb_status.c: 118: }
  8320                           ;app_led_usb_status.c: 119: break;
  8321  0CCB  2CD2               	goto	i1l4429
  8322  0CCC                     i1l4427:	
  8323  0CCC  0023               	movlb	3	; select bank3
  8324  0CCD  084E               	movf	_USBDeviceState^(0+384),w	;volatile
  8325                           
  8326                           ; Switch size 1, requested type "space"
  8327                           ; Number of cases is 1, Range of values is 32 to 32
  8328                           ; switch strategies available:
  8329                           ; Name         Instructions Cycles
  8330                           ; simple_byte            4     3 (average)
  8331                           ; direct_byte           11     9 (fixed)
  8332                           ; jumptable            263     9 (fixed)
  8333                           ;	Chosen strategy is simple_byte
  8334  0CCE  3A20               	xorlw	32	; case 32
  8335  0CCF  1903               	skipnz
  8336  0CD0  2C91               	goto	i1l4401
  8337  0CD1  2CAC               	goto	i1l4413
  8338  0CD2                     i1l4429:	
  8339                           
  8340                           ;app_led_usb_status.c: 123: ledCount++;
  8341  0CD2  3001               	movlw	1
  8342  0CD3  0023               	movlb	3	; select bank3
  8343  0CD4  07C0               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),f
  8344  0CD5  3000               	movlw	0
  8345  0CD6  3DC1               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),f
  8346  0CD7  0008               	return
  8347  0CD8                     __end_of_APP_LEDUpdateUSBStatus:	
  8348                           
  8349                           	psect	text32
  8350  0978                     __ptext32:	
  8351 ;; *************** function _LED_On *****************
  8352 ;; Defined at:
  8353 ;;		line 59 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  led             1    wreg     enum E2
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  led             1    0[COMMON] enum E2
  8358 ;; Return value:  Size  Location     Type
  8359 ;;		None               void
  8360 ;; Registers used:
  8361 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;Total ram usage:        1 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_APP_LEDUpdateUSBStatus
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _LED_On
  8382  0978                     _LED_On:	
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  8386                           ;LED_On@led stored from wreg
  8387  0978  00F0               	movwf	LED_On@led
  8388                           
  8389                           ;leds.c: 61: switch(led)
  8390  0979  2986               	goto	i1l4377
  8391  097A                     i1l215:	
  8392                           ;leds.c: 62: {
  8393                           ;leds.c: 63: case LED_D1:
  8394                           
  8395                           
  8396                           ;leds.c: 64: LATCbits.LATC0 = 1;
  8397  097A  0022               	movlb	2	; select bank2
  8398  097B  140E               	bsf	14,0	;volatile
  8399                           
  8400                           ;leds.c: 65: break;
  8401  097C  0008               	return
  8402  097D                     i1l217:	
  8403                           ;leds.c: 67: case LED_D2:
  8404                           
  8405                           
  8406                           ;leds.c: 68: LATCbits.LATC1 = 1;
  8407  097D  0022               	movlb	2	; select bank2
  8408  097E  148E               	bsf	14,1	;volatile
  8409                           
  8410                           ;leds.c: 69: break;
  8411  097F  0008               	return
  8412  0980                     i1l218:	
  8413                           ;leds.c: 71: case LED_D3:
  8414                           
  8415                           
  8416                           ;leds.c: 72: LATCbits.LATC2 = 1;
  8417  0980  0022               	movlb	2	; select bank2
  8418  0981  150E               	bsf	14,2	;volatile
  8419                           
  8420                           ;leds.c: 73: break;
  8421  0982  0008               	return
  8422  0983                     i1l219:	
  8423                           ;leds.c: 75: case LED_D4:
  8424                           
  8425                           
  8426                           ;leds.c: 76: LATCbits.LATC3 = 1;
  8427  0983  0022               	movlb	2	; select bank2
  8428  0984  158E               	bsf	14,3	;volatile
  8429                           
  8430                           ;leds.c: 81: }
  8431                           
  8432                           ;leds.c: 80: break;
  8433                           
  8434                           ;leds.c: 79: case LED_NONE:
  8435                           
  8436                           ;leds.c: 77: break;
  8437  0985  0008               	return
  8438  0986                     i1l4377:	
  8439  0986  0870               	movf	LED_On@led,w
  8440                           
  8441                           ; Switch size 1, requested type "space"
  8442                           ; Number of cases is 5, Range of values is 0 to 4
  8443                           ; switch strategies available:
  8444                           ; Name         Instructions Cycles
  8445                           ; direct_byte           16     6 (fixed)
  8446                           ; simple_byte           16     9 (average)
  8447                           ; jumptable            260     6 (fixed)
  8448                           ;	Chosen strategy is direct_byte
  8449  0987  0084               	movwf	4
  8450  0988  3005               	movlw	5
  8451  0989  0204               	subwf	4,w
  8452  098A  1803               	skipnc
  8453  098B  0008               	return
  8454  098C  3188               	movlp	high i1S5661
  8455  098D  3504               	lslf	4,w
  8456  098E  3E24               	addlw	low i1S5661
  8457  098F  0082               	movwf	2
  8458  0990                     i1l221:	
  8459  0990  0008               	return
  8460  0991                     __end_of_LED_On:	
  8461                           
  8462                           	psect	swtext3
  8463  0824                     __pswtext3:	
  8464  0824                     i1S5661:	
  8465  0824  3189  2990         	ljmp	i1l221
  8466  0826  3189  297A         	ljmp	i1l215
  8467  0828  3189  297D         	ljmp	i1l217
  8468  082A  3189  2980         	ljmp	i1l218
  8469  082C  3189  2983         	ljmp	i1l219
  8470                           
  8471                           	psect	text33
  8472  095F                     __ptext33:	
  8473 ;; *************** function _LED_Off *****************
  8474 ;; Defined at:
  8475 ;;		line 100 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  led             1    wreg     enum E2
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  led             1    0[COMMON] enum E2
  8480 ;; Return value:  Size  Location     Type
  8481 ;;		None               void
  8482 ;; Registers used:
  8483 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;Total ram usage:        1 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_APP_LEDUpdateUSBStatus
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _LED_Off
  8504  095F                     _LED_Off:	
  8505                           
  8506                           ;incstack = 0
  8507                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  8508                           ;LED_Off@led stored from wreg
  8509  095F  00F0               	movwf	LED_Off@led
  8510                           
  8511                           ;leds.c: 102: switch(led)
  8512  0960  296D               	goto	i1l4367
  8513  0961                     i1l225:	
  8514                           ;leds.c: 103: {
  8515                           ;leds.c: 104: case LED_D1:
  8516                           
  8517                           
  8518                           ;leds.c: 105: LATCbits.LATC0 = 0;
  8519  0961  0022               	movlb	2	; select bank2
  8520  0962  100E               	bcf	14,0	;volatile
  8521                           
  8522                           ;leds.c: 106: break;
  8523  0963  0008               	return
  8524  0964                     i1l227:	
  8525                           ;leds.c: 108: case LED_D2:
  8526                           
  8527                           
  8528                           ;leds.c: 109: LATCbits.LATC1 = 0;
  8529  0964  0022               	movlb	2	; select bank2
  8530  0965  108E               	bcf	14,1	;volatile
  8531                           
  8532                           ;leds.c: 110: break;
  8533  0966  0008               	return
  8534  0967                     i1l228:	
  8535                           ;leds.c: 112: case LED_D3:
  8536                           
  8537                           
  8538                           ;leds.c: 113: LATCbits.LATC2 = 0;
  8539  0967  0022               	movlb	2	; select bank2
  8540  0968  110E               	bcf	14,2	;volatile
  8541                           
  8542                           ;leds.c: 114: break;
  8543  0969  0008               	return
  8544  096A                     i1l229:	
  8545                           ;leds.c: 116: case LED_D4:
  8546                           
  8547                           
  8548                           ;leds.c: 117: LATCbits.LATC3 = 0;
  8549  096A  0022               	movlb	2	; select bank2
  8550  096B  118E               	bcf	14,3	;volatile
  8551                           
  8552                           ;leds.c: 122: }
  8553                           
  8554                           ;leds.c: 121: break;
  8555                           
  8556                           ;leds.c: 120: case LED_NONE:
  8557                           
  8558                           ;leds.c: 118: break;
  8559  096C  0008               	return
  8560  096D                     i1l4367:	
  8561  096D  0870               	movf	LED_Off@led,w
  8562                           
  8563                           ; Switch size 1, requested type "space"
  8564                           ; Number of cases is 5, Range of values is 0 to 4
  8565                           ; switch strategies available:
  8566                           ; Name         Instructions Cycles
  8567                           ; direct_byte           16     6 (fixed)
  8568                           ; simple_byte           16     9 (average)
  8569                           ; jumptable            260     6 (fixed)
  8570                           ;	Chosen strategy is direct_byte
  8571  096E  0084               	movwf	4
  8572  096F  3005               	movlw	5
  8573  0970  0204               	subwf	4,w
  8574  0971  1803               	skipnc
  8575  0972  0008               	return
  8576  0973  3188               	movlp	high i1S5663
  8577  0974  3504               	lslf	4,w
  8578  0975  3E2E               	addlw	low i1S5663
  8579  0976  0082               	movwf	2
  8580  0977                     i1l231:	
  8581  0977  0008               	return
  8582  0978                     __end_of_LED_Off:	
  8583                           
  8584                           	psect	swtext4
  8585  082E                     __pswtext4:	
  8586  082E                     i1S5663:	
  8587  082E  3189  2977         	ljmp	i1l231
  8588  0830  3189  2961         	ljmp	i1l225
  8589  0832  3189  2964         	ljmp	i1l227
  8590  0834  3189  2967         	ljmp	i1l228
  8591  0836  3189  296A         	ljmp	i1l229
  8592                           
  8593                           	psect	text34
  8594  0907                     __ptext34:	
  8595 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  8596 ;; Defined at:
  8597 ;;		line 55 in file "../src/app_device_cdc_basic.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;		None               void
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:        1 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    3
  8618 ;; This function calls:
  8619 ;;		_CDCInitEP
  8620 ;; This function is called by:
  8621 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _APP_DeviceCDCBasicDemoInitialize
  8627  0907                     _APP_DeviceCDCBasicDemoInitialize:	
  8628                           
  8629                           ;app_device_cdc_basic.c: 57: CDCInitEP();
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _APP_DeviceCDCBasicDemoInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  8633  0907  318A  22E6         	fcall	_CDCInitEP
  8634                           
  8635                           ;app_device_cdc_basic.c: 60: line_coding.bCharFormat = 0;
  8636  0909  0023               	movlb	3	; select bank3
  8637  090A  01E8               	clrf	(_line_coding^(0+384)+4)
  8638                           
  8639                           ;app_device_cdc_basic.c: 61: line_coding.bDataBits = 8;
  8640  090B  3008               	movlw	8
  8641  090C  00FD               	movwf	??_APP_DeviceCDCBasicDemoInitialize
  8642  090D  087D               	movf	??_APP_DeviceCDCBasicDemoInitialize,w
  8643  090E  00EA               	movwf	(_line_coding^(0+384)+6)
  8644                           
  8645                           ;app_device_cdc_basic.c: 62: line_coding.bParityType = 0;
  8646  090F  01E9               	clrf	(_line_coding^(0+384)+5)
  8647                           
  8648                           ;app_device_cdc_basic.c: 63: line_coding.dwDTERate = 9600;
  8649  0910  3000               	movlw	0
  8650  0911  00E7               	movwf	(_line_coding+3)^(0+384)
  8651  0912  3000               	movlw	0
  8652  0913  00E6               	movwf	(_line_coding+2)^(0+384)
  8653  0914  3025               	movlw	37
  8654  0915  00E5               	movwf	(_line_coding+1)^(0+384)
  8655  0916  3080               	movlw	128
  8656  0917  00E4               	movwf	_line_coding^(0+384)
  8657                           
  8658                           ;app_device_cdc_basic.c: 65: buttonPressed = 0;
  8659  0918  01D2               	clrf	_buttonPressed^(0+384)
  8660  0919  0008               	return
  8661  091A                     __end_of_APP_DeviceCDCBasicDemoInitialize:	
  8662                           
  8663                           	psect	text35
  8664  0AE6                     __ptext35:	
  8665 ;; *************** function _CDCInitEP *****************
  8666 ;; Defined at:
  8667 ;;		line 351 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;		None               void
  8674 ;; Registers used:
  8675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;Total ram usage:        2 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    2
  8688 ;; This function calls:
  8689 ;;		_USBEnableEndpoint
  8690 ;;		i1_USBTransferOnePacket
  8691 ;; This function is called by:
  8692 ;;		_APP_DeviceCDCBasicDemoInitialize
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _CDCInitEP
  8698  0AE6                     _CDCInitEP:	
  8699                           
  8700                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  8701                           
  8702                           ;incstack = 0
  8703                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8704  0AE6  3000               	movlw	0
  8705  0AE7  0023               	movlb	3	; select bank3
  8706  0AE8  00E7               	movwf	(_line_coding+3)^(0+384)
  8707  0AE9  3000               	movlw	0
  8708  0AEA  00E6               	movwf	(_line_coding+2)^(0+384)
  8709  0AEB  304B               	movlw	75
  8710  0AEC  00E5               	movwf	(_line_coding+1)^(0+384)
  8711  0AED  3000               	movlw	0
  8712  0AEE  00E4               	movwf	_line_coding^(0+384)
  8713                           
  8714                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  8715  0AEF  01E8               	clrf	(_line_coding^(0+384)+4)
  8716                           
  8717                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  8718  0AF0  01E9               	clrf	(_line_coding^(0+384)+5)
  8719                           
  8720                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  8721  0AF1  3008               	movlw	8
  8722  0AF2  0020               	movlb	0	; select bank0
  8723  0AF3  00E0               	movwf	??_CDCInitEP
  8724  0AF4  0860               	movf	??_CDCInitEP,w
  8725  0AF5  0023               	movlb	3	; select bank3
  8726  0AF6  00EA               	movwf	(_line_coding^(0+384)+6)
  8727                           
  8728                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  8729  0AF7  01D4               	clrf	_cdc_rx_len^(0+384)
  8730                           
  8731                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  8732  0AF8  301A               	movlw	26
  8733  0AF9  0020               	movlb	0	; select bank0
  8734  0AFA  00E0               	movwf	??_CDCInitEP
  8735  0AFB  0860               	movf	??_CDCInitEP,w
  8736  0AFC  00F7               	movwf	USBEnableEndpoint@options
  8737  0AFD  3001               	movlw	1
  8738  0AFE  318A  223E  318A   	fcall	_USBEnableEndpoint
  8739                           
  8740                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8741  0B01  301E               	movlw	30
  8742  0B02  0020               	movlb	0	; select bank0
  8743  0B03  00E0               	movwf	??_CDCInitEP
  8744  0B04  0860               	movf	??_CDCInitEP,w
  8745  0B05  00F7               	movwf	USBEnableEndpoint@options
  8746  0B06  3002               	movlw	2
  8747  0B07  318A  223E  318A   	fcall	_USBEnableEndpoint
  8748                           
  8749                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8750  0B0A  01F0               	clrf	i1USBTransferOnePacket@dir
  8751  0B0B  3020               	movlw	32
  8752  0B0C  00F1               	movwf	i1USBTransferOnePacket@data
  8753  0B0D  3001               	movlw	1
  8754  0B0E  00F2               	movwf	i1USBTransferOnePacket@data+1
  8755  0B0F  3040               	movlw	64
  8756  0B10  0020               	movlb	0	; select bank0
  8757  0B11  00E0               	movwf	??_CDCInitEP
  8758  0B12  0860               	movf	??_CDCInitEP,w
  8759  0B13  00F3               	movwf	i1USBTransferOnePacket@len
  8760  0B14  3002               	movlw	2
  8761  0B15  318B  2358         	fcall	i1_USBTransferOnePacket
  8762  0B17  0020               	movlb	0	; select bank0
  8763  0B18  00E1               	movwf	??_CDCInitEP+1
  8764  0B19  0861               	movf	??_CDCInitEP+1,w
  8765  0B1A  0023               	movlb	3	; select bank3
  8766  0B1B  00C8               	movwf	_CDCDataOutHandle^(0+384)
  8767                           
  8768                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  8769  0B1C  01C7               	clrf	_CDCDataInHandle^(0+384)
  8770                           
  8771                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  8772  0B1D  01D5               	clrf	_cdc_trf_state^(0+384)
  8773  0B1E  0008               	return
  8774  0B1F                     __end_of_CDCInitEP:	
  8775                           
  8776                           	psect	text36
  8777  0B58                     __ptext36:	
  8778 ;; *************** function i1_USBTransferOnePacket *****************
  8779 ;; Defined at:
  8780 ;;		line 989 in file "../../../../../../framework/usb/src/usb_device.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  ep              1    wreg     unsigned char 
  8783 ;;  dir             1    0[COMMON] unsigned char 
  8784 ;;  data            2    1[COMMON] PTR unsigned char 
  8785 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8786 ;;  len             1    3[COMMON] unsigned char 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  ep              1    6[COMMON] unsigned char 
  8789 ;;  USBTransferO    1    7[COMMON] PTR volatile struct __BD
  8790 ;;		 -> NULL(0), BDT(48), 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      PTR void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;Total ram usage:        8 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_CDCInitEP
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function i1_USBTransferOnePacket
  8815  0B58                     i1_USBTransferOnePacket:	
  8816                           
  8817                           ;incstack = 0
  8818                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8819                           ;i1USBTransferOnePacket@ep stored from wreg
  8820  0B58  00F6               	movwf	i1USBTransferOnePacket@ep
  8821                           
  8822                           ;usb_device.c: 991: volatile BDT_ENTRY* handle;
  8823                           ;usb_device.c: 994: if(dir != 0)
  8824  0B59  0870               	movf	i1USBTransferOnePacket@dir,w
  8825  0B5A  1903               	btfsc	3,2
  8826  0B5B  2B5F               	goto	i1l4319
  8827                           
  8828                           ;usb_device.c: 995: {
  8829                           ;usb_device.c: 997: handle = pBDTEntryIn[ep];
  8830  0B5C  0876               	movf	i1USBTransferOnePacket@ep,w
  8831  0B5D  3EBA               	addlw	_pBDTEntryIn& (0+255)
  8832  0B5E  2B61               	goto	L14
  8833  0B5F                     i1l4319:	
  8834                           ;usb_device.c: 998: }
  8835                           
  8836                           
  8837                           ;usb_device.c: 999: else
  8838                           ;usb_device.c: 1000: {
  8839                           ;usb_device.c: 1002: handle = pBDTEntryOut[ep];
  8840  0B5F  0876               	movf	i1USBTransferOnePacket@ep,w
  8841  0B60  3EBD               	addlw	_pBDTEntryOut& (0+255)
  8842  0B61                     L14:	
  8843  0B61  0086               	movwf	6
  8844  0B62  3001               	movlw	1	; select bank3/4
  8845  0B63  0087               	movwf	7
  8846  0B64  0801               	movf	1,w
  8847  0B65  00F4               	movwf	??i1_USBTransferOnePacket
  8848  0B66  0874               	movf	??i1_USBTransferOnePacket,w
  8849  0B67  00F7               	movwf	i1USBTransferOnePacket@handle
  8850                           
  8851                           ;usb_device.c: 1003: }
  8852                           ;usb_device.c: 1007: if(handle == 0)
  8853  0B68  08F7               	movf	i1USBTransferOnePacket@handle,f
  8854  0B69  1D03               	skipz
  8855  0B6A  2B6D               	goto	i1l4327
  8856                           
  8857                           ;usb_device.c: 1008: {
  8858                           ;usb_device.c: 1009: return 0;
  8859  0B6B  3000               	movlw	0
  8860  0B6C  0008               	return
  8861  0B6D                     i1l4327:	
  8862                           
  8863                           ;usb_device.c: 1010: }
  8864                           ;usb_device.c: 1023: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8865  0B6D  30FF               	movlw	255
  8866  0B6E  0571               	andwf	i1USBTransferOnePacket@data,w
  8867  0B6F  00F4               	movwf	??i1_USBTransferOnePacket
  8868  0B70  307F               	movlw	127
  8869  0B71  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8870  0B72  00F5               	movwf	??i1_USBTransferOnePacket+1
  8871  0B73  0877               	movf	i1USBTransferOnePacket@handle,w
  8872  0B74  3E02               	addlw	2
  8873  0B75  0086               	movwf	6
  8874  0B76  0187               	clrf	7
  8875  0B77  0874               	movf	??i1_USBTransferOnePacket,w
  8876  0B78  3FC0               	movwi [0]fsr1
  8877  0B79  0875               	movf	??i1_USBTransferOnePacket+1,w
  8878  0B7A  3FC1               	movwi [1]fsr1
  8879                           
  8880                           ;usb_device.c: 1024: handle->CNT = len;
  8881  0B7B  0873               	movf	i1USBTransferOnePacket@len,w
  8882  0B7C  00F4               	movwf	??i1_USBTransferOnePacket
  8883  0B7D  0A77               	incf	i1USBTransferOnePacket@handle,w
  8884  0B7E  0086               	movwf	6
  8885  0B7F  0187               	clrf	7
  8886  0B80  0874               	movf	??i1_USBTransferOnePacket,w
  8887  0B81  0081               	movwf	1
  8888                           
  8889                           ;usb_device.c: 1025: handle->STAT.Val &= 0x40;
  8890  0B82  3040               	movlw	64
  8891  0B83  00F4               	movwf	??i1_USBTransferOnePacket
  8892  0B84  0877               	movf	i1USBTransferOnePacket@handle,w
  8893  0B85  0086               	movwf	6
  8894  0B86  0187               	clrf	7
  8895  0B87  0874               	movf	??i1_USBTransferOnePacket,w
  8896  0B88  0581               	andwf	1,f
  8897                           
  8898                           ;usb_device.c: 1026: handle->STAT.Val |= (0x08 & 0x08);
  8899  0B89  0877               	movf	i1USBTransferOnePacket@handle,w
  8900  0B8A  0086               	movwf	6
  8901  0B8B  0187               	clrf	7
  8902  0B8C  1581               	bsf	1,3
  8903                           
  8904                           ;usb_device.c: 1027: handle->STAT.Val |= 0x80;
  8905  0B8D  0877               	movf	i1USBTransferOnePacket@handle,w
  8906  0B8E  0086               	movwf	6
  8907  0B8F  0187               	clrf	7
  8908  0B90  1781               	bsf	1,7
  8909                           
  8910                           ;usb_device.c: 1030: if(dir != 0)
  8911  0B91  0870               	movf	i1USBTransferOnePacket@dir,w
  8912  0B92  1903               	btfsc	3,2
  8913  0B93  2B99               	goto	i1l4339
  8914                           
  8915                           ;usb_device.c: 1031: {
  8916                           ;usb_device.c: 1033: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8917  0B94  3004               	movlw	4
  8918  0B95  00F4               	movwf	??i1_USBTransferOnePacket
  8919  0B96  0876               	movf	i1USBTransferOnePacket@ep,w
  8920  0B97  3EBA               	addlw	_pBDTEntryIn& (0+255)
  8921  0B98  2B9D               	goto	L15
  8922  0B99                     i1l4339:	
  8923                           ;usb_device.c: 1034: }
  8924                           
  8925                           
  8926                           ;usb_device.c: 1035: else
  8927                           ;usb_device.c: 1036: {
  8928                           ;usb_device.c: 1038: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8929  0B99  3004               	movlw	4
  8930  0B9A  00F4               	movwf	??i1_USBTransferOnePacket
  8931  0B9B  0876               	movf	i1USBTransferOnePacket@ep,w
  8932  0B9C  3EBD               	addlw	_pBDTEntryOut& (0+255)
  8933  0B9D                     L15:	
  8934  0B9D  0086               	movwf	6
  8935  0B9E  3001               	movlw	1	; select bank3/4
  8936  0B9F  0087               	movwf	7
  8937  0BA0  0874               	movf	??i1_USBTransferOnePacket,w
  8938  0BA1  0681               	xorwf	1,f
  8939                           
  8940                           ;usb_device.c: 1039: }
  8941                           ;usb_device.c: 1040: return (void*)handle;
  8942  0BA2  0877               	movf	i1USBTransferOnePacket@handle,w
  8943  0BA3  0008               	return
  8944  0BA4                     __end_ofi1_USBTransferOnePacket:	
  8945                           
  8946                           	psect	text37
  8947  0A3E                     __ptext37:	
  8948 ;; *************** function _USBEnableEndpoint *****************
  8949 ;; Defined at:
  8950 ;;		line 872 in file "../../../../../../framework/usb/src/usb_device.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  ep              1    wreg     unsigned char 
  8953 ;;  options         1    7[COMMON] unsigned char 
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;  ep              1   12[COMMON] unsigned char 
  8956 ;;  p               2   10[COMMON] PTR unsigned char 
  8957 ;;		 -> UEP0(1), 
  8958 ;; Return value:  Size  Location     Type
  8959 ;;		None               void
  8960 ;; Registers used:
  8961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8967 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;Total ram usage:        6 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; Hardware stack levels required when called:    1
  8974 ;; This function calls:
  8975 ;;		_USBConfigureEndpoint
  8976 ;; This function is called by:
  8977 ;;		_CDCInitEP
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           
  8982                           ;psect for function _USBEnableEndpoint
  8983  0A3E                     _USBEnableEndpoint:	
  8984                           
  8985                           ;incstack = 0
  8986                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8987                           ;USBEnableEndpoint@ep stored from wreg
  8988  0A3E  00FC               	movwf	USBEnableEndpoint@ep
  8989                           
  8990                           ;usb_device.c: 874: unsigned char* p;
  8991                           ;usb_device.c: 878: if(options & 0x04)
  8992  0A3F  1D77               	btfss	USBEnableEndpoint@options,2
  8993  0A40  2A46               	goto	i1l4307
  8994                           
  8995                           ;usb_device.c: 879: {
  8996                           ;usb_device.c: 880: USBConfigureEndpoint(ep, 0);
  8997  0A41  01F0               	clrf	USBConfigureEndpoint@direction
  8998  0A42  087C               	movf	USBEnableEndpoint@ep,w
  8999  0A43  3187  27BC  318A   	fcall	_USBConfigureEndpoint
  9000  0A46                     i1l4307:	
  9001                           
  9002                           ;usb_device.c: 881: }
  9003                           ;usb_device.c: 882: if(options & 0x02)
  9004  0A46  1CF7               	btfss	USBEnableEndpoint@options,1
  9005  0A47  2A4D               	goto	i1l4311
  9006                           
  9007                           ;usb_device.c: 883: {
  9008                           ;usb_device.c: 884: USBConfigureEndpoint(ep, 1);
  9009  0A48  01F0               	clrf	USBConfigureEndpoint@direction
  9010  0A49  0AF0               	incf	USBConfigureEndpoint@direction,f
  9011  0A4A  087C               	movf	USBEnableEndpoint@ep,w
  9012  0A4B  3187  27BC         	fcall	_USBConfigureEndpoint
  9013  0A4D                     i1l4311:	
  9014                           
  9015                           ;usb_device.c: 885: }
  9016                           ;usb_device.c: 893: p = (unsigned char*)(&UEP0+ep);
  9017  0A4D  087C               	movf	USBEnableEndpoint@ep,w
  9018  0A4E  3E98               	addlw	152
  9019  0A4F  00F8               	movwf	??_USBEnableEndpoint
  9020  0A50  01F9               	clrf	??_USBEnableEndpoint+1
  9021  0A51  300E               	movlw	14
  9022  0A52  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  9023  0A53  0878               	movf	??_USBEnableEndpoint,w
  9024  0A54  00FA               	movwf	USBEnableEndpoint@p
  9025  0A55  0879               	movf	??_USBEnableEndpoint+1,w
  9026  0A56  00FB               	movwf	USBEnableEndpoint@p+1
  9027                           
  9028                           ;usb_device.c: 895: *p = options;
  9029  0A57  087A               	movf	USBEnableEndpoint@p,w
  9030  0A58  0086               	movwf	6
  9031  0A59  087B               	movf	USBEnableEndpoint@p+1,w
  9032  0A5A  0087               	movwf	7
  9033  0A5B  0877               	movf	USBEnableEndpoint@options,w
  9034  0A5C  0081               	movwf	1
  9035  0A5D  0008               	return
  9036  0A5E                     __end_of_USBEnableEndpoint:	
  9037                           
  9038                           	psect	text38
  9039  07BC                     __ptext38:	
  9040 ;; *************** function _USBConfigureEndpoint *****************
  9041 ;; Defined at:
  9042 ;;		line 1537 in file "../../../../../../framework/usb/src/usb_device.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  EPNum           1    wreg     unsigned char 
  9045 ;;  direction       1    0[COMMON] unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  EPNum           1    5[COMMON] unsigned char 
  9048 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  9049 ;;		 -> BDT(48), 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9059 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;Total ram usage:        7 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_USBEnableEndpoint
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           
  9073                           ;psect for function _USBConfigureEndpoint
  9074  07BC                     _USBConfigureEndpoint:	
  9075                           
  9076                           ;incstack = 0
  9077                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  9078                           ;USBConfigureEndpoint@EPNum stored from wreg
  9079  07BC  00F5               	movwf	USBConfigureEndpoint@EPNum
  9080                           
  9081                           ;usb_device.c: 1539: volatile BDT_ENTRY* handle;
  9082                           ;usb_device.c: 1543: handle = (volatile BDT_ENTRY*)&BDT[0];
  9083  07BD  3020               	movlw	32
  9084  07BE  00F1               	movwf	??_USBConfigureEndpoint
  9085  07BF  0871               	movf	??_USBConfigureEndpoint,w
  9086  07C0  00F6               	movwf	USBConfigureEndpoint@handle
  9087                           
  9088                           ;usb_device.c: 1544: handle += (4*EPNum+2*direction+0u);
  9089  07C1  0870               	movf	USBConfigureEndpoint@direction,w
  9090  07C2  00F1               	movwf	??_USBConfigureEndpoint
  9091  07C3  3001               	movlw	1
  9092  07C4                     u367_25:	
  9093  07C4  35F1               	lslf	??_USBConfigureEndpoint,f
  9094  07C5  0B89               	decfsz	9,f
  9095  07C6  2FC4               	goto	u367_25
  9096  07C7  0875               	movf	USBConfigureEndpoint@EPNum,w
  9097  07C8  00F2               	movwf	??_USBConfigureEndpoint+1
  9098  07C9  3001               	movlw	1
  9099  07CA                     u368_25:	
  9100  07CA  35F2               	lslf	??_USBConfigureEndpoint+1,f
  9101  07CB  3EFF               	addlw	-1
  9102  07CC  1D03               	skipz
  9103  07CD  2FCA               	goto	u368_25
  9104  07CE  3572               	lslf	??_USBConfigureEndpoint+1,w
  9105  07CF  0771               	addwf	??_USBConfigureEndpoint,w
  9106  07D0  00F3               	movwf	??_USBConfigureEndpoint+2
  9107  07D1  3001               	movlw	1
  9108  07D2                     u369_25:	
  9109  07D2  35F3               	lslf	??_USBConfigureEndpoint+2,f
  9110  07D3  3EFF               	addlw	-1
  9111  07D4  1D03               	skipz
  9112  07D5  2FD2               	goto	u369_25
  9113  07D6  3573               	lslf	??_USBConfigureEndpoint+2,w
  9114  07D7  00F4               	movwf	??_USBConfigureEndpoint+3
  9115  07D8  0874               	movf	??_USBConfigureEndpoint+3,w
  9116  07D9  07F6               	addwf	USBConfigureEndpoint@handle,f
  9117                           
  9118                           ;usb_device.c: 1546: handle->STAT.UOWN = 0;
  9119  07DA  0876               	movf	USBConfigureEndpoint@handle,w
  9120  07DB  0086               	movwf	6
  9121  07DC  0187               	clrf	7
  9122  07DD  1381               	bcf	1,7
  9123                           
  9124                           ;usb_device.c: 1551: if(direction == 0)
  9125  07DE  08F0               	movf	USBConfigureEndpoint@direction,f
  9126  07DF  1D03               	skipz
  9127  07E0  2FE6               	goto	i1l4297
  9128                           
  9129                           ;usb_device.c: 1552: {
  9130                           ;usb_device.c: 1553: pBDTEntryOut[EPNum] = handle;
  9131  07E1  0876               	movf	USBConfigureEndpoint@handle,w
  9132  07E2  00F1               	movwf	??_USBConfigureEndpoint
  9133  07E3  0875               	movf	USBConfigureEndpoint@EPNum,w
  9134  07E4  3EBD               	addlw	_pBDTEntryOut& (0+255)
  9135  07E5  2FEA               	goto	L16
  9136  07E6                     i1l4297:	
  9137                           ;usb_device.c: 1554: }
  9138                           
  9139                           
  9140                           ;usb_device.c: 1555: else
  9141                           ;usb_device.c: 1556: {
  9142                           ;usb_device.c: 1557: pBDTEntryIn[EPNum] = handle;
  9143  07E6  0876               	movf	USBConfigureEndpoint@handle,w
  9144  07E7  00F1               	movwf	??_USBConfigureEndpoint
  9145  07E8  0875               	movf	USBConfigureEndpoint@EPNum,w
  9146  07E9  3EBA               	addlw	_pBDTEntryIn& (0+255)
  9147  07EA                     L16:	
  9148  07EA  0086               	movwf	6
  9149  07EB  3001               	movlw	1	; select bank3/4
  9150  07EC  0087               	movwf	7
  9151  07ED  0871               	movf	??_USBConfigureEndpoint,w
  9152  07EE  0081               	movwf	1
  9153                           
  9154                           ;usb_device.c: 1558: }
  9155                           ;usb_device.c: 1561: handle->STAT.DTS = 0;
  9156  07EF  0876               	movf	USBConfigureEndpoint@handle,w
  9157  07F0  0086               	movwf	6
  9158  07F1  0187               	clrf	7
  9159  07F2  1301               	bcf	1,6
  9160                           
  9161                           ;usb_device.c: 1562: (handle+1)->STAT.DTS = 1;
  9162  07F3  0876               	movf	USBConfigureEndpoint@handle,w
  9163  07F4  3E04               	addlw	4
  9164  07F5  0086               	movwf	6
  9165  07F6  0187               	clrf	7
  9166  07F7  1701               	bsf	1,6
  9167  07F8  0008               	return
  9168  07F9                     __end_of_USBConfigureEndpoint:	
  9169                           
  9170                           	psect	text39
  9171  0A84                     __ptext39:	
  9172 ;; *************** function _USBCtrlTrfOutHandler *****************
  9173 ;; Defined at:
  9174 ;;		line 2535 in file "../../../../../../framework/usb/src/usb_device.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;		None               void
  9181 ;; Registers used:
  9182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    2
  9195 ;; This function calls:
  9196 ;;		_USBCtrlTrfRxService
  9197 ;; This function is called by:
  9198 ;;		_USBCtrlEPService
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           
  9203                           ;psect for function _USBCtrlTrfOutHandler
  9204  0A84                     _USBCtrlTrfOutHandler:	
  9205                           
  9206                           ;usb_device.c: 2537: if(controlTransferState == 2)
  9207                           
  9208                           ;incstack = 0
  9209                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9210  0A84  0023               	movlb	3	; select bank3
  9211  0A85  0857               	movf	_controlTransferState^(0+384),w	;volatile
  9212  0A86  3A02               	xorlw	2
  9213  0A87  1D03               	skipz
  9214  0A88  2A8C               	goto	i1l4977
  9215                           
  9216                           ;usb_device.c: 2538: {
  9217                           ;usb_device.c: 2539: USBCtrlTrfRxService();
  9218  0A89  3185  2523         	fcall	_USBCtrlTrfRxService
  9219                           
  9220                           ;usb_device.c: 2540: }
  9221  0A8B  0008               	return
  9222  0A8C                     i1l4977:	
  9223                           
  9224                           ;usb_device.c: 2541: else
  9225                           ;usb_device.c: 2542: {
  9226                           ;usb_device.c: 2545: controlTransferState = 0;
  9227  0A8C  0023               	movlb	3	; select bank3
  9228  0A8D  01D7               	clrf	_controlTransferState^(0+384)	;volatile
  9229                           
  9230                           ;usb_device.c: 2552: if(BothEP0OutUOWNsSet == 0)
  9231  0A8E  08C6               	movf	_BothEP0OutUOWNsSet^(0+384),f	;volatile
  9232  0A8F  1D03               	skipz
  9233  0A90  2AB1               	goto	i1l4983
  9234                           
  9235                           ;usb_device.c: 2553: {
  9236                           ;usb_device.c: 2554: pBDTEntryEP0OutNext->CNT = 8;
  9237  0A91  3008               	movlw	8
  9238  0A92  00F6               	movwf	??_USBCtrlTrfOutHandler
  9239  0A93  0021               	movlb	1	; select bank1
  9240  0A94  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9241  0A95  0086               	movwf	6
  9242  0A96  0187               	clrf	7
  9243  0A97  0876               	movf	??_USBCtrlTrfOutHandler,w
  9244  0A98  0081               	movwf	1
  9245                           
  9246                           ;usb_device.c: 2555: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9247  0A99  3050               	movlw	80
  9248  0A9A  00F6               	movwf	??_USBCtrlTrfOutHandler
  9249  0A9B  3000               	movlw	0
  9250  0A9C  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9251  0A9D  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9252  0A9E  3E02               	addlw	2
  9253  0A9F  0086               	movwf	6
  9254  0AA0  0187               	clrf	7
  9255  0AA1  0876               	movf	??_USBCtrlTrfOutHandler,w
  9256  0AA2  3FC0               	movwi [0]fsr1
  9257  0AA3  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9258  0AA4  3FC1               	movwi [1]fsr1
  9259                           
  9260                           ;usb_device.c: 2556: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9261  0AA5  300C               	movlw	12
  9262  0AA6  00F6               	movwf	??_USBCtrlTrfOutHandler
  9263  0AA7  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9264  0AA8  0086               	movwf	6
  9265  0AA9  0187               	clrf	7
  9266  0AAA  0876               	movf	??_USBCtrlTrfOutHandler,w
  9267  0AAB  0081               	movwf	1
  9268                           
  9269                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9270  0AAC  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9271  0AAD  0086               	movwf	6
  9272  0AAE  0187               	clrf	7
  9273  0AAF  1781               	bsf	1,7
  9274                           
  9275                           ;usb_device.c: 2558: }
  9276  0AB0  0008               	return
  9277  0AB1                     i1l4983:	
  9278                           
  9279                           ;usb_device.c: 2559: else
  9280                           ;usb_device.c: 2560: {
  9281                           ;usb_device.c: 2561: BothEP0OutUOWNsSet = 0;
  9282  0AB1  0023               	movlb	3	; select bank3
  9283  0AB2  01C6               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9284  0AB3  0008               	return
  9285  0AB4                     __end_of_USBCtrlTrfOutHandler:	
  9286                           
  9287                           	psect	text40
  9288  0523                     __ptext40:	
  9289 ;; *************** function _USBCtrlTrfRxService *****************
  9290 ;; Defined at:
  9291 ;;		line 1846 in file "../../../../../../framework/usb/src/usb_device.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  byteToRead      1    5[COMMON] unsigned char 
  9296 ;;  i               1    4[COMMON] unsigned char 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;		None               void
  9299 ;; Registers used:
  9300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;Total ram usage:        4 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    1
  9313 ;; This function calls:
  9314 ;;		_USBCtrlEPAllowStatusStage
  9315 ;; This function is called by:
  9316 ;;		_USBCtrlTrfOutHandler
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _USBCtrlTrfRxService
  9322  0523                     _USBCtrlTrfRxService:	
  9323                           
  9324                           ;usb_device.c: 1848: uint8_t byteToRead;
  9325                           ;usb_device.c: 1849: uint8_t i;
  9326                           ;usb_device.c: 1853: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9327                           
  9328                           ;incstack = 0
  9329                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9330  0523  0021               	movlb	1	; select bank1
  9331  0524  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9332  0525  0086               	movwf	6
  9333  0526  0187               	clrf	7
  9334  0527  3F41               	moviw [1]fsr1
  9335  0528  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9336                           
  9337                           ;usb_device.c: 1859: if(byteToRead > outPipes[0].wCount.Val)
  9338  0529  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9339  052A  00F2               	movwf	??_USBCtrlTrfRxService
  9340  052B  01F3               	clrf	??_USBCtrlTrfRxService+1
  9341  052C  0873               	movf	??_USBCtrlTrfRxService+1,w
  9342  052D  0023               	movlb	3	; select bank3
  9343  052E  022E               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9344  052F  1D03               	skipz
  9345  0530  2D33               	goto	u438_25
  9346  0531  0872               	movf	??_USBCtrlTrfRxService,w
  9347  0532  022D               	subwf	(_outPipes^(0+384)+3),w	;volatile
  9348  0533                     u438_25:	
  9349  0533  1803               	skipnc
  9350  0534  2D39               	goto	i1l505
  9351                           
  9352                           ;usb_device.c: 1860: {
  9353                           ;usb_device.c: 1861: byteToRead = outPipes[0].wCount.Val;
  9354  0535  082D               	movf	(_outPipes^(0+384)+3),w	;volatile
  9355  0536  00F2               	movwf	??_USBCtrlTrfRxService
  9356  0537  0872               	movf	??_USBCtrlTrfRxService,w
  9357  0538  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9358  0539                     i1l505:	
  9359                           
  9360                           ;usb_device.c: 1862: }
  9361                           ;usb_device.c: 1864: outPipes[0].wCount.Val -= byteToRead;
  9362  0539  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9363  053A  00F2               	movwf	??_USBCtrlTrfRxService
  9364  053B  01F3               	clrf	??_USBCtrlTrfRxService+1
  9365  053C  0872               	movf	??_USBCtrlTrfRxService,w
  9366  053D  02AD               	subwf	(_outPipes^(0+384)+3),f	;volatile
  9367  053E  0873               	movf	??_USBCtrlTrfRxService+1,w
  9368  053F  3BAE               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  9369                           
  9370                           ;usb_device.c: 1868: for(i=0;i<byteToRead;i++)
  9371  0540  01F4               	clrf	USBCtrlTrfRxService@i
  9372  0541                     i1l4857:	
  9373  0541  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9374  0542  0274               	subwf	USBCtrlTrfRxService@i,w
  9375  0543  1803               	btfsc	3,0
  9376  0544  2D5A               	goto	i1l4859
  9377                           
  9378                           ;usb_device.c: 1869: {
  9379                           ;usb_device.c: 1870: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9380  0545  0874               	movf	USBCtrlTrfRxService@i,w
  9381  0546  3E58               	addlw	88
  9382  0547  0086               	movwf	6
  9383  0548  0187               	clrf	7
  9384  0549  0801               	movf	1,w
  9385  054A  00F2               	movwf	??_USBCtrlTrfRxService
  9386  054B  082A               	movf	_outPipes^(0+384),w	;volatile
  9387  054C  0086               	movwf	6
  9388  054D  3001               	movlw	1	; select bank2/3
  9389  054E  0087               	movwf	7
  9390  054F  0872               	movf	??_USBCtrlTrfRxService,w
  9391  0550  0081               	movwf	1
  9392  0551  3001               	movlw	1
  9393  0552  00F2               	movwf	??_USBCtrlTrfRxService
  9394  0553  0872               	movf	??_USBCtrlTrfRxService,w
  9395  0554  07AA               	addwf	_outPipes^(0+384),f	;volatile
  9396  0555  3001               	movlw	1
  9397  0556  00F2               	movwf	??_USBCtrlTrfRxService
  9398  0557  0872               	movf	??_USBCtrlTrfRxService,w
  9399  0558  07F4               	addwf	USBCtrlTrfRxService@i,f
  9400  0559  2D41               	goto	i1l4857
  9401  055A                     i1l4859:	
  9402                           
  9403                           ;usb_device.c: 1871: }
  9404                           ;usb_device.c: 1875: if(outPipes[0].wCount.Val > 0)
  9405  055A  3003               	movlw	3
  9406  055B  3EAA               	addlw	_outPipes& (0+255)
  9407  055C  0086               	movwf	6
  9408  055D  3001               	movlw	1	; select bank3/4
  9409  055E  0087               	movwf	7
  9410  055F  0016               	moviw fsr1++
  9411  0560  0401               	iorwf	1,w
  9412  0561  1903               	skipnz
  9413  0562  2D94               	goto	i1l4867
  9414                           
  9415                           ;usb_device.c: 1876: {
  9416                           ;usb_device.c: 1877: pBDTEntryEP0OutNext->CNT = 8;
  9417  0563  3008               	movlw	8
  9418  0564  00F2               	movwf	??_USBCtrlTrfRxService
  9419  0565  0021               	movlb	1	; select bank1
  9420  0566  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9421  0567  0086               	movwf	6
  9422  0568  0187               	clrf	7
  9423  0569  0872               	movf	??_USBCtrlTrfRxService,w
  9424  056A  0081               	movwf	1
  9425                           
  9426                           ;usb_device.c: 1878: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9427  056B  3058               	movlw	88
  9428  056C  00F2               	movwf	??_USBCtrlTrfRxService
  9429  056D  3000               	movlw	0
  9430  056E  00F3               	movwf	??_USBCtrlTrfRxService+1
  9431  056F  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9432  0570  3E02               	addlw	2
  9433  0571  0086               	movwf	6
  9434  0572  0187               	clrf	7
  9435  0573  0872               	movf	??_USBCtrlTrfRxService,w
  9436  0574  3FC0               	movwi [0]fsr1
  9437  0575  0873               	movf	??_USBCtrlTrfRxService+1,w
  9438  0576  3FC1               	movwi [1]fsr1
  9439                           
  9440                           ;usb_device.c: 1879: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9441  0577  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9442  0578  0086               	movwf	6
  9443  0579  0187               	clrf	7
  9444  057A  1B01               	btfsc	1,6
  9445  057B  2D88               	goto	i1l4865
  9446                           
  9447                           ;usb_device.c: 1880: {
  9448                           ;usb_device.c: 1881: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9449  057C  3048               	movlw	72
  9450  057D  00F2               	movwf	??_USBCtrlTrfRxService
  9451  057E  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9452  057F  0086               	movwf	6
  9453  0580  0187               	clrf	7
  9454  0581  0872               	movf	??_USBCtrlTrfRxService,w
  9455  0582  0081               	movwf	1
  9456                           
  9457                           ;usb_device.c: 1882: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9458  0583  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9459  0584  0086               	movwf	6
  9460  0585  0187               	clrf	7
  9461  0586  1781               	bsf	1,7
  9462                           
  9463                           ;usb_device.c: 1883: }
  9464  0587  0008               	return
  9465  0588                     i1l4865:	
  9466                           
  9467                           ;usb_device.c: 1884: else
  9468                           ;usb_device.c: 1885: {
  9469                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9470  0588  3008               	movlw	8
  9471  0589  00F2               	movwf	??_USBCtrlTrfRxService
  9472  058A  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9473  058B  0086               	movwf	6
  9474  058C  0187               	clrf	7
  9475  058D  0872               	movf	??_USBCtrlTrfRxService,w
  9476  058E  0081               	movwf	1
  9477                           
  9478                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9479  058F  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9480  0590  0086               	movwf	6
  9481  0591  0187               	clrf	7
  9482  0592  1781               	bsf	1,7
  9483                           
  9484                           ;usb_device.c: 1888: }
  9485                           ;usb_device.c: 1889: }
  9486  0593  0008               	return
  9487  0594                     i1l4867:	
  9488                           
  9489                           ;usb_device.c: 1890: else
  9490                           ;usb_device.c: 1891: {
  9491                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->CNT = 8;
  9492  0594  3008               	movlw	8
  9493  0595  00F2               	movwf	??_USBCtrlTrfRxService
  9494  0596  0021               	movlb	1	; select bank1
  9495  0597  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9496  0598  0086               	movwf	6
  9497  0599  0187               	clrf	7
  9498  059A  0872               	movf	??_USBCtrlTrfRxService,w
  9499  059B  0081               	movwf	1
  9500                           
  9501                           ;usb_device.c: 1896: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9502  059C  3050               	movlw	80
  9503  059D  00F2               	movwf	??_USBCtrlTrfRxService
  9504  059E  3000               	movlw	0
  9505  059F  00F3               	movwf	??_USBCtrlTrfRxService+1
  9506  05A0  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9507  05A1  3E02               	addlw	2
  9508  05A2  0086               	movwf	6
  9509  05A3  0187               	clrf	7
  9510  05A4  0872               	movf	??_USBCtrlTrfRxService,w
  9511  05A5  3FC0               	movwi [0]fsr1
  9512  05A6  0873               	movf	??_USBCtrlTrfRxService+1,w
  9513  05A7  3FC1               	movwi [1]fsr1
  9514                           
  9515                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9516  05A8  3004               	movlw	4
  9517  05A9  00F2               	movwf	??_USBCtrlTrfRxService
  9518  05AA  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9519  05AB  0086               	movwf	6
  9520  05AC  0187               	clrf	7
  9521  05AD  0872               	movf	??_USBCtrlTrfRxService,w
  9522  05AE  0081               	movwf	1
  9523                           
  9524                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9525  05AF  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9526  05B0  0086               	movwf	6
  9527  05B1  0187               	clrf	7
  9528  05B2  1781               	bsf	1,7
  9529                           
  9530                           ;usb_device.c: 1909: {
  9531                           ;usb_device.c: 1915: outPipes[0].pFunc();
  9532  05B3  0023               	movlb	3	; select bank3
  9533  05B4  082F               	movf	(_outPipes+5)^(0+384),w	;volatile
  9534                           
  9535                           ;usb_device.c: 1920: }
  9536                           ;usb_device.c: 1921: outPipes[0].info.bits.busy = 0;
  9537  05B5  13AC               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9538                           
  9539                           ;usb_device.c: 1935: if(USBDeferStatusStagePacket == 0)
  9540  05B6  08CD               	movf	_USBDeferStatusStagePacket^(0+384),f	;volatile
  9541  05B7  1D03               	skipz
  9542  05B8  0008               	return
  9543                           
  9544                           ;usb_device.c: 1936: {
  9545                           ;usb_device.c: 1937: USBCtrlEPAllowStatusStage();
  9546  05B9  318E  26BA         	fcall	_USBCtrlEPAllowStatusStage
  9547  05BB  0008               	return
  9548  05BC                     __end_of_USBCtrlTrfRxService:	
  9549                           
  9550                           	psect	text41
  9551  0EBA                     __ptext41:	
  9552 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9553 ;; Defined at:
  9554 ;;		line 1410 in file "../../../../../../framework/usb/src/usb_device.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;		None               void
  9561 ;; Registers used:
  9562 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_USBDeviceTasks
  9578 ;;		_USBCtrlEPServiceComplete
  9579 ;;		_USBCtrlTrfRxService
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _USBCtrlEPAllowStatusStage
  9585  0EBA                     _USBCtrlEPAllowStatusStage:	
  9586                           
  9587                           ;usb_device.c: 1417: if(USBStatusStageEnabledFlag1 == 0)
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9591  0EBA  0023               	movlb	3	; select bank3
  9592  0EBB  08CF               	movf	_USBStatusStageEnabledFlag1^(0+384),f	;volatile
  9593  0EBC  1D03               	skipz
  9594  0EBD  0008               	return
  9595                           
  9596                           ;usb_device.c: 1418: {
  9597                           ;usb_device.c: 1419: USBStatusStageEnabledFlag1 = 1;
  9598  0EBE  3001               	movlw	1
  9599  0EBF  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9600  0EC0  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9601  0EC1  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9602                           
  9603                           ;usb_device.c: 1420: if(USBStatusStageEnabledFlag2 == 0)
  9604  0EC2  08D0               	movf	_USBStatusStageEnabledFlag2^(0+384),f	;volatile
  9605  0EC3  1D03               	skipz
  9606  0EC4  0008               	return
  9607                           
  9608                           ;usb_device.c: 1421: {
  9609                           ;usb_device.c: 1422: USBStatusStageEnabledFlag2 = 1;
  9610  0EC5  3001               	movlw	1
  9611  0EC6  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9612  0EC7  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9613  0EC8  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9614                           
  9615                           ;usb_device.c: 1426: if(controlTransferState == 2)
  9616  0EC9  0857               	movf	_controlTransferState^(0+384),w	;volatile
  9617  0ECA  3A02               	xorlw	2
  9618  0ECB  1D03               	skipz
  9619  0ECC  2EDD               	goto	i1l4565
  9620                           
  9621                           ;usb_device.c: 1427: {
  9622                           ;usb_device.c: 1428: pBDTEntryIn[0]->CNT = 0;
  9623  0ECD  0A3A               	incf	_pBDTEntryIn^(0+384),w
  9624  0ECE  0086               	movwf	6
  9625  0ECF  0187               	clrf	7
  9626  0ED0  0181               	clrf	1
  9627                           
  9628                           ;usb_device.c: 1429: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9629  0ED1  3048               	movlw	72
  9630  0ED2  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9631  0ED3  083A               	movf	_pBDTEntryIn^(0+384),w
  9632  0ED4  0086               	movwf	6
  9633  0ED5  0187               	clrf	7
  9634  0ED6  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9635  0ED7  0081               	movwf	1
  9636                           
  9637                           ;usb_device.c: 1430: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9638  0ED8  083A               	movf	_pBDTEntryIn^(0+384),w
  9639  0ED9  0086               	movwf	6
  9640  0EDA  0187               	clrf	7
  9641  0EDB  1781               	bsf	1,7
  9642                           
  9643                           ;usb_device.c: 1431: }
  9644  0EDC  0008               	return
  9645  0EDD                     i1l4565:	
  9646                           
  9647                           ;usb_device.c: 1432: else if(controlTransferState == 1)
  9648  0EDD  0857               	movf	_controlTransferState^(0+384),w	;volatile
  9649  0EDE  3A01               	xorlw	1
  9650  0EDF  1D03               	skipz
  9651  0EE0  0008               	return
  9652                           
  9653                           ;usb_device.c: 1433: {
  9654                           ;usb_device.c: 1434: BothEP0OutUOWNsSet = 0;
  9655  0EE1  01C6               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9656                           
  9657                           ;usb_device.c: 1439: pBDTEntryEP0OutCurrent->CNT = 8;
  9658  0EE2  3008               	movlw	8
  9659  0EE3  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9660  0EE4  0021               	movlb	1	; select bank1
  9661  0EE5  0A68               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9662  0EE6  0086               	movwf	6
  9663  0EE7  0187               	clrf	7
  9664  0EE8  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9665  0EE9  0081               	movwf	1
  9666                           
  9667                           ;usb_device.c: 1440: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9668  0EEA  3050               	movlw	80
  9669  0EEB  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9670  0EEC  3000               	movlw	0
  9671  0EED  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9672  0EEE  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9673  0EEF  3E02               	addlw	2
  9674  0EF0  0086               	movwf	6
  9675  0EF1  0187               	clrf	7
  9676  0EF2  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9677  0EF3  3FC0               	movwi [0]fsr1
  9678  0EF4  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9679  0EF5  3FC1               	movwi [1]fsr1
  9680                           
  9681                           ;usb_device.c: 1441: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9682  0EF6  3004               	movlw	4
  9683  0EF7  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9684  0EF8  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9685  0EF9  0086               	movwf	6
  9686  0EFA  0187               	clrf	7
  9687  0EFB  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9688  0EFC  0081               	movwf	1
  9689                           
  9690                           ;usb_device.c: 1442: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9691  0EFD  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9692  0EFE  0086               	movwf	6
  9693  0EFF  0187               	clrf	7
  9694  0F00  1781               	bsf	1,7
  9695                           
  9696                           ;usb_device.c: 1443: BothEP0OutUOWNsSet = 1;
  9697  0F01  3001               	movlw	1
  9698  0F02  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9699  0F03  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9700  0F04  0023               	movlb	3	; select bank3
  9701  0F05  00C6               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9702                           
  9703                           ;usb_device.c: 1447: pBDTEntryEP0OutNext->CNT = 8;
  9704  0F06  3008               	movlw	8
  9705  0F07  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9706  0F08  0021               	movlb	1	; select bank1
  9707  0F09  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9708  0F0A  0086               	movwf	6
  9709  0F0B  0187               	clrf	7
  9710  0F0C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9711  0F0D  0081               	movwf	1
  9712                           
  9713                           ;usb_device.c: 1448: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9714  0F0E  3050               	movlw	80
  9715  0F0F  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9716  0F10  3000               	movlw	0
  9717  0F11  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9718  0F12  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9719  0F13  3E02               	addlw	2
  9720  0F14  0086               	movwf	6
  9721  0F15  0187               	clrf	7
  9722  0F16  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9723  0F17  3FC0               	movwi [0]fsr1
  9724  0F18  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9725  0F19  3FC1               	movwi [1]fsr1
  9726                           
  9727                           ;usb_device.c: 1449: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9728  0F1A  3080               	movlw	128
  9729  0F1B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9730  0F1C  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9731  0F1D  0086               	movwf	6
  9732  0F1E  0187               	clrf	7
  9733  0F1F  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9734  0F20  0081               	movwf	1
  9735  0F21  0008               	return
  9736  0F22                     __end_of_USBCtrlEPAllowStatusStage:	
  9737                           
  9738                           	psect	text42
  9739  0E56                     __ptext42:	
  9740 ;; *************** function _USBCtrlTrfInHandler *****************
  9741 ;; Defined at:
  9742 ;;		line 2589 in file "../../../../../../framework/usb/src/usb_device.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  lastDTS         1    5[COMMON] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;		None               void
  9749 ;; Registers used:
  9750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        3 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    1
  9763 ;; This function calls:
  9764 ;;		_USBCtrlTrfTxService
  9765 ;; This function is called by:
  9766 ;;		_USBCtrlEPService
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _USBCtrlTrfInHandler
  9772  0E56                     _USBCtrlTrfInHandler:	
  9773                           
  9774                           ;usb_device.c: 2591: uint8_t lastDTS;
  9775                           ;usb_device.c: 2593: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9776                           
  9777                           ;incstack = 0
  9778                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9779  0E56  0023               	movlb	3	; select bank3
  9780  0E57  083A               	movf	_pBDTEntryIn^(0+384),w
  9781  0E58  0086               	movwf	6
  9782  0E59  0187               	clrf	7
  9783  0E5A  3000               	movlw	0
  9784  0E5B  1B01               	btfsc	1,6
  9785  0E5C  3001               	movlw	1
  9786  0E5D  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9787                           
  9788                           ;usb_device.c: 2596: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9789  0E5E  3004               	movlw	4
  9790  0E5F  00F3               	movwf	??_USBCtrlTrfInHandler
  9791  0E60  0873               	movf	??_USBCtrlTrfInHandler,w
  9792  0E61  06BA               	xorwf	_pBDTEntryIn^(0+384),f
  9793                           
  9794                           ;usb_device.c: 2601: if(USBDeviceState == ADR_PENDING_STATE)
  9795  0E62  084E               	movf	_USBDeviceState^(0+384),w	;volatile
  9796  0E63  3A08               	xorlw	8
  9797  0E64  1D03               	skipz
  9798  0E65  2E75               	goto	i1l589
  9799                           
  9800                           ;usb_device.c: 2602: {
  9801                           ;usb_device.c: 2603: UADDR = (SetupPkt.bDevADR & 0x7F);
  9802  0E66  0020               	movlb	0	; select bank0
  9803  0E67  0852               	movf	82,w	;volatile
  9804  0E68  397F               	andlw	127
  9805  0E69  003D               	movlb	29	; select bank29
  9806  0E6A  0096               	movwf	22	;volatile
  9807                           
  9808                           ;usb_device.c: 2604: if(UADDR != 0u)
  9809  0E6B  0816               	movf	22,w	;volatile
  9810  0E6C  1903               	btfsc	3,2
  9811  0E6D  2E70               	goto	i1l4997
  9812                           
  9813                           ;usb_device.c: 2605: {
  9814                           ;usb_device.c: 2606: USBDeviceState=ADDRESS_STATE;
  9815  0E6E  3010               	movlw	16
  9816  0E6F  2E71               	goto	L17
  9817  0E70                     i1l4997:	
  9818                           ;usb_device.c: 2607: }
  9819                           
  9820                           
  9821                           ;usb_device.c: 2608: else
  9822                           ;usb_device.c: 2609: {
  9823                           ;usb_device.c: 2610: USBDeviceState=DEFAULT_STATE;
  9824  0E70  3004               	movlw	4
  9825  0E71                     L17:	
  9826  0E71  00F3               	movwf	??_USBCtrlTrfInHandler
  9827  0E72  0873               	movf	??_USBCtrlTrfInHandler,w
  9828  0E73  0023               	movlb	3	; select bank3
  9829  0E74  00CE               	movwf	_USBDeviceState^(0+384)	;volatile
  9830  0E75                     i1l589:	
  9831                           
  9832                           ;usb_device.c: 2611: }
  9833                           ;usb_device.c: 2612: }
  9834                           ;usb_device.c: 2615: if(controlTransferState == 1)
  9835  0E75  0857               	movf	_controlTransferState^(0+384),w	;volatile
  9836  0E76  3A01               	xorlw	1
  9837  0E77  1D03               	skipz
  9838  0E78  2EB4               	goto	i1l592
  9839                           
  9840                           ;usb_device.c: 2616: {
  9841                           ;usb_device.c: 2617: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9842  0E79  3058               	movlw	88
  9843  0E7A  00F3               	movwf	??_USBCtrlTrfInHandler
  9844  0E7B  3000               	movlw	0
  9845  0E7C  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9846  0E7D  083A               	movf	_pBDTEntryIn^(0+384),w
  9847  0E7E  3E02               	addlw	2
  9848  0E7F  0086               	movwf	6
  9849  0E80  0187               	clrf	7
  9850  0E81  0873               	movf	??_USBCtrlTrfInHandler,w
  9851  0E82  3FC0               	movwi [0]fsr1
  9852  0E83  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9853  0E84  3FC1               	movwi [1]fsr1
  9854                           
  9855                           ;usb_device.c: 2618: USBCtrlTrfTxService();
  9856  0E85  318F  2790  318E   	fcall	_USBCtrlTrfTxService
  9857                           
  9858                           ;usb_device.c: 2624: if(shortPacketStatus == 2)
  9859  0E88  0023               	movlb	3	; select bank3
  9860  0E89  085B               	movf	_shortPacketStatus^(0+384),w	;volatile
  9861  0E8A  3A02               	xorlw	2
  9862  0E8B  1D03               	skipz
  9863  0E8C  2E99               	goto	i1l5007
  9864                           
  9865                           ;usb_device.c: 2625: {
  9866                           ;usb_device.c: 2628: pBDTEntryIn[0]->STAT.Val = 0x04;
  9867  0E8D  3004               	movlw	4
  9868  0E8E  00F3               	movwf	??_USBCtrlTrfInHandler
  9869  0E8F  083A               	movf	_pBDTEntryIn^(0+384),w
  9870  0E90  0086               	movwf	6
  9871  0E91  0187               	clrf	7
  9872  0E92  0873               	movf	??_USBCtrlTrfInHandler,w
  9873  0E93  0081               	movwf	1
  9874                           
  9875                           ;usb_device.c: 2629: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9876  0E94  083A               	movf	_pBDTEntryIn^(0+384),w
  9877  0E95  0086               	movwf	6
  9878  0E96  0187               	clrf	7
  9879  0E97  1781               	bsf	1,7
  9880                           
  9881                           ;usb_device.c: 2630: }
  9882  0E98  0008               	return
  9883  0E99                     i1l5007:	
  9884                           
  9885                           ;usb_device.c: 2631: else
  9886                           ;usb_device.c: 2632: {
  9887                           ;usb_device.c: 2633: if(lastDTS == 0)
  9888  0E99  08F5               	movf	USBCtrlTrfInHandler@lastDTS,f
  9889  0E9A  1D03               	skipz
  9890  0E9B  2EA8               	goto	i1l5011
  9891                           
  9892                           ;usb_device.c: 2634: {
  9893                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9894  0E9C  3048               	movlw	72
  9895  0E9D  00F3               	movwf	??_USBCtrlTrfInHandler
  9896  0E9E  083A               	movf	_pBDTEntryIn^(0+384),w
  9897  0E9F  0086               	movwf	6
  9898  0EA0  0187               	clrf	7
  9899  0EA1  0873               	movf	??_USBCtrlTrfInHandler,w
  9900  0EA2  0081               	movwf	1
  9901                           
  9902                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9903  0EA3  083A               	movf	_pBDTEntryIn^(0+384),w
  9904  0EA4  0086               	movwf	6
  9905  0EA5  0187               	clrf	7
  9906  0EA6  1781               	bsf	1,7
  9907                           
  9908                           ;usb_device.c: 2637: }
  9909  0EA7  0008               	return
  9910  0EA8                     i1l5011:	
  9911                           
  9912                           ;usb_device.c: 2638: else
  9913                           ;usb_device.c: 2639: {
  9914                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9915  0EA8  3008               	movlw	8
  9916  0EA9  00F3               	movwf	??_USBCtrlTrfInHandler
  9917  0EAA  083A               	movf	_pBDTEntryIn^(0+384),w
  9918  0EAB  0086               	movwf	6
  9919  0EAC  0187               	clrf	7
  9920  0EAD  0873               	movf	??_USBCtrlTrfInHandler,w
  9921  0EAE  0081               	movwf	1
  9922                           
  9923                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9924  0EAF  083A               	movf	_pBDTEntryIn^(0+384),w
  9925  0EB0  0086               	movwf	6
  9926  0EB1  0187               	clrf	7
  9927  0EB2  1781               	bsf	1,7
  9928                           
  9929                           ;usb_device.c: 2642: }
  9930                           ;usb_device.c: 2643: }
  9931                           ;usb_device.c: 2644: }
  9932  0EB3  0008               	return
  9933  0EB4                     i1l592:	
  9934                           
  9935                           ;usb_device.c: 2645: else
  9936                           ;usb_device.c: 2646: {
  9937                           ;usb_device.c: 2650: if(outPipes[0].info.bits.busy == 1)
  9938  0EB4  1FAC               	btfss	(_outPipes^(0+384)+2),7	;volatile
  9939  0EB5  2EB8               	goto	i1l5015
  9940                           
  9941                           ;usb_device.c: 2653: {
  9942                           ;usb_device.c: 2654: outPipes[0].pFunc();
  9943  0EB6  082F               	movf	(_outPipes+5)^(0+384),w	;volatile
  9944                           
  9945                           ;usb_device.c: 2655: }
  9946                           ;usb_device.c: 2656: outPipes[0].info.bits.busy = 0;
  9947  0EB7  13AC               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9948  0EB8                     i1l5015:	
  9949                           
  9950                           ;usb_device.c: 2657: }
  9951                           ;usb_device.c: 2659: controlTransferState = 0;
  9952  0EB8  01D7               	clrf	_controlTransferState^(0+384)	;volatile
  9953  0EB9  0008               	return
  9954  0EBA                     __end_of_USBCtrlTrfInHandler:	
  9955                           
  9956                           	psect	text43
  9957  0F90                     __ptext43:	
  9958 ;; *************** function _USBCtrlTrfTxService *****************
  9959 ;; Defined at:
  9960 ;;		line 1765 in file "../../../../../../framework/usb/src/usb_device.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  byteToSend      1    2[COMMON] unsigned char 
  9965 ;; Return value:  Size  Location     Type
  9966 ;;		None               void
  9967 ;; Registers used:
  9968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        3 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; This function calls:
  9981 ;;		Nothing
  9982 ;; This function is called by:
  9983 ;;		_USBCtrlEPAllowDataStage
  9984 ;;		_USBCtrlTrfInHandler
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           
  9989                           ;psect for function _USBCtrlTrfTxService
  9990  0F90                     _USBCtrlTrfTxService:	
  9991                           
  9992                           ;usb_device.c: 1767: uint8_t byteToSend;
  9993                           ;usb_device.c: 1771: byteToSend = 8;
  9994                           
  9995                           ;incstack = 0
  9996                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9997  0F90  3008               	movlw	8
  9998  0F91  00F0               	movwf	??_USBCtrlTrfTxService
  9999  0F92  0870               	movf	??_USBCtrlTrfTxService,w
 10000  0F93  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10001                           
 10002                           ;usb_device.c: 1772: if(inPipes[0].wCount.Val < (uint8_t)8)
 10003  0F94  3000               	movlw	0
 10004  0F95  0021               	movlb	1	; select bank1
 10005  0F96  026E               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 10006  0F97  3008               	movlw	8
 10007  0F98  1903               	skipnz
 10008  0F99  026D               	subwf	(_inPipes^(0+128)+3),w	;volatile
 10009  0F9A  1803               	skipnc
 10010  0F9B  2FAE               	goto	i1l490
 10011                           
 10012                           ;usb_device.c: 1773: {
 10013                           ;usb_device.c: 1774: byteToSend = inPipes[0].wCount.Val;
 10014  0F9C  086D               	movf	(_inPipes^(0+128)+3),w	;volatile
 10015  0F9D  00F0               	movwf	??_USBCtrlTrfTxService
 10016  0F9E  0870               	movf	??_USBCtrlTrfTxService,w
 10017  0F9F  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10018                           
 10019                           ;usb_device.c: 1781: if(shortPacketStatus == 0)
 10020  0FA0  0023               	movlb	3	; select bank3
 10021  0FA1  08DB               	movf	_shortPacketStatus^(0+384),f	;volatile
 10022  0FA2  1D03               	skipz
 10023  0FA3  2FA6               	goto	i1l4511
 10024                           
 10025                           ;usb_device.c: 1782: {
 10026                           ;usb_device.c: 1783: shortPacketStatus = 1;
 10027  0FA4  3001               	movlw	1
 10028  0FA5  2FAB               	goto	L18
 10029  0FA6                     i1l4511:	
 10030                           ;usb_device.c: 1784: }
 10031                           
 10032                           
 10033                           ;usb_device.c: 1785: else if(shortPacketStatus == 1)
 10034  0FA6  085B               	movf	_shortPacketStatus^(0+384),w	;volatile
 10035  0FA7  3A01               	xorlw	1
 10036  0FA8  1D03               	skipz
 10037  0FA9  2FAE               	goto	i1l490
 10038                           
 10039                           ;usb_device.c: 1786: {
 10040                           ;usb_device.c: 1787: shortPacketStatus = 2;
 10041  0FAA  3002               	movlw	2
 10042  0FAB                     L18:	
 10043  0FAB  00F0               	movwf	??_USBCtrlTrfTxService
 10044  0FAC  0870               	movf	??_USBCtrlTrfTxService,w
 10045  0FAD  00DB               	movwf	_shortPacketStatus^(0+384)	;volatile
 10046  0FAE                     i1l490:	
 10047                           
 10048                           ;usb_device.c: 1788: }
 10049                           ;usb_device.c: 1789: }
 10050                           ;usb_device.c: 1793: inPipes[0].wCount.Val -= byteToSend;
 10051  0FAE  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10052  0FAF  00F0               	movwf	??_USBCtrlTrfTxService
 10053  0FB0  01F1               	clrf	??_USBCtrlTrfTxService+1
 10054  0FB1  0870               	movf	??_USBCtrlTrfTxService,w
 10055  0FB2  0021               	movlb	1	; select bank1
 10056  0FB3  02ED               	subwf	(_inPipes^(0+128)+3),f	;volatile
 10057  0FB4  0871               	movf	??_USBCtrlTrfTxService+1,w
 10058  0FB5  3BEE               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 10059                           
 10060                           ;usb_device.c: 1798: pBDTEntryIn[0]->CNT = byteToSend;
 10061  0FB6  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10062  0FB7  00F0               	movwf	??_USBCtrlTrfTxService
 10063  0FB8  0023               	movlb	3	; select bank3
 10064  0FB9  0A3A               	incf	_pBDTEntryIn^(0+384),w
 10065  0FBA  0086               	movwf	6
 10066  0FBB  0187               	clrf	7
 10067  0FBC  0870               	movf	??_USBCtrlTrfTxService,w
 10068  0FBD  0081               	movwf	1
 10069                           
 10070                           ;usb_device.c: 1802: pDst = (volatile uint8_t*)CtrlTrfData;
 10071  0FBE  3058               	movlw	88
 10072  0FBF  00F0               	movwf	??_USBCtrlTrfTxService
 10073  0FC0  0870               	movf	??_USBCtrlTrfTxService,w
 10074  0FC1  00DA               	movwf	_pDst^(0+384)
 10075                           
 10076                           ;usb_device.c: 1803: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10077  0FC2  0021               	movlb	1	; select bank1
 10078  0FC3  1C6C               	btfss	(_inPipes^(0+128)+2),0	;volatile
 10079  0FC4  2FDF               	goto	i1l4531
 10080  0FC5  2FFC               	goto	i1l4541
 10081  0FC6                     i1l4523:	
 10082                           ;usb_device.c: 1804: {
 10083                           ;usb_device.c: 1805: while(byteToSend)
 10084                           
 10085                           
 10086                           ;usb_device.c: 1806: {
 10087                           ;usb_device.c: 1807: *pDst++ = *inPipes[0].pSrc.bRom++;
 10088  0FC6  0021               	movlb	1	; select bank1
 10089  0FC7  086A               	movf	_inPipes^(0+128),w	;volatile
 10090  0FC8  0084               	movwf	4
 10091  0FC9  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
 10092  0FCA  0085               	movwf	5
 10093  0FCB  0800               	movf	0,w	;code access
 10094  0FCC  00F0               	movwf	??_USBCtrlTrfTxService
 10095  0FCD  0023               	movlb	3	; select bank3
 10096  0FCE  085A               	movf	_pDst^(0+384),w
 10097  0FCF  0086               	movwf	6
 10098  0FD0  0187               	clrf	7
 10099  0FD1  0870               	movf	??_USBCtrlTrfTxService,w
 10100  0FD2  0081               	movwf	1
 10101  0FD3  3001               	movlw	1
 10102  0FD4  0021               	movlb	1	; select bank1
 10103  0FD5  07EA               	addwf	_inPipes^(0+128),f	;volatile
 10104  0FD6  3000               	movlw	0
 10105  0FD7  3DEB               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 10106  0FD8  3001               	movlw	1
 10107  0FD9  00F0               	movwf	??_USBCtrlTrfTxService
 10108  0FDA  0870               	movf	??_USBCtrlTrfTxService,w
 10109  0FDB  0023               	movlb	3	; select bank3
 10110  0FDC  07DA               	addwf	_pDst^(0+384),f
 10111                           
 10112                           ;usb_device.c: 1808: byteToSend--;
 10113  0FDD  3001               	movlw	1
 10114  0FDE  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10115  0FDF                     i1l4531:	
 10116  0FDF  08F2               	movf	USBCtrlTrfTxService@byteToSend,f
 10117  0FE0  1903               	btfsc	3,2
 10118  0FE1  0008               	return
 10119  0FE2  2FC6               	goto	i1l4523
 10120  0FE3                     i1l4533:	
 10121                           ;usb_device.c: 1811: else
 10122                           ;usb_device.c: 1812: {
 10123                           ;usb_device.c: 1813: while(byteToSend)
 10124                           
 10125                           ;usb_device.c: 1809: }
 10126                           ;usb_device.c: 1810: }
 10127                           
 10128                           
 10129                           ;usb_device.c: 1814: {
 10130                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRam++;
 10131  0FE3  0021               	movlb	1	; select bank1
 10132  0FE4  086A               	movf	_inPipes^(0+128),w	;volatile
 10133  0FE5  0084               	movwf	4
 10134  0FE6  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
 10135  0FE7  0085               	movwf	5
 10136  0FE8  0800               	movf	0,w	;code access
 10137  0FE9  00F0               	movwf	??_USBCtrlTrfTxService
 10138  0FEA  0023               	movlb	3	; select bank3
 10139  0FEB  085A               	movf	_pDst^(0+384),w
 10140  0FEC  0086               	movwf	6
 10141  0FED  0187               	clrf	7
 10142  0FEE  0870               	movf	??_USBCtrlTrfTxService,w
 10143  0FEF  0081               	movwf	1
 10144  0FF0  3001               	movlw	1
 10145  0FF1  0021               	movlb	1	; select bank1
 10146  0FF2  07EA               	addwf	_inPipes^(0+128),f	;volatile
 10147  0FF3  3000               	movlw	0
 10148  0FF4  3DEB               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 10149  0FF5  3001               	movlw	1
 10150  0FF6  00F0               	movwf	??_USBCtrlTrfTxService
 10151  0FF7  0870               	movf	??_USBCtrlTrfTxService,w
 10152  0FF8  0023               	movlb	3	; select bank3
 10153  0FF9  07DA               	addwf	_pDst^(0+384),f
 10154                           
 10155                           ;usb_device.c: 1816: byteToSend--;
 10156  0FFA  3001               	movlw	1
 10157  0FFB  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10158  0FFC                     i1l4541:	
 10159  0FFC  08F2               	movf	USBCtrlTrfTxService@byteToSend,f
 10160  0FFD  1903               	btfsc	3,2
 10161  0FFE  0008               	return
 10162  0FFF  2FE3               	goto	i1l4533
 10163  1000                     __end_of_USBCtrlTrfTxService:	
 10164  007E                     btemp	set	126	;btemp
 10165  007E                     wtemp	set	126
 10166  007E                     wtemp0	set	126
 10167  0080                     wtemp1	set	128
 10168  0082                     wtemp2	set	130
 10169  0084                     wtemp3	set	132
 10170  0086                     wtemp4	set	134
 10171  0088                     wtemp5	set	136
 10172  007F                     wtemp6	set	127
 10173  007E                     ttemp	set	126
 10174  007E                     ttemp0	set	126
 10175  0081                     ttemp1	set	129
 10176  0084                     ttemp2	set	132
 10177  0087                     ttemp3	set	135
 10178  007F                     ttemp4	set	127
 10179  007E                     ltemp	set	126
 10180  007E                     ltemp0	set	126
 10181  0082                     ltemp1	set	130
 10182  0086                     ltemp2	set	134
 10183  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    197
    Data        18
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      8      15
    BANK2            16     16      16
    BANK3            80      0      79
    BANK4            80      2      20
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK4[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK4[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1703_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1703_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1703_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1703_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S628$pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    S618$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S618$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S594$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S594$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S594$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S594$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceCDCBasicDemoInitialize
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCDCBasicDemoInitialize->_CDCInitEP

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_APP_DeviceCDCBasicDemoTasks
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_CDCTxService
    _APP_DeviceCDCBasicDemoTasks->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5612
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        6     6      0     396
                                              0 BANK2      6     6      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      93
                                              1 BANK2      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          4     4      0    5123
                                             14 BANK2      2     2      0
                                              0 BANK4      2     2      0
                   _BUTTON_IsPressed
                       _CDCTxService
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        4     4      0     233
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         6     5      1    2202
                                              8 BANK2      6     5      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         6     6      0    2164
                                              8 BANK2      6     6      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 8     4      4    1926
                                              0 BANK2      8     4      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   35595
                                              7 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   35595
                                              4 BANK1      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      6     6      0     272
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    4741
                                              8 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    4741
                                              8 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     4     4      0   21032
                                              0 BANK1      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   20596
                                             15 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0     136
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   15719
                                             14 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    5615
                                              8 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     639
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              6     6      0    5295
                                              8 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    4741
                                              2 BANK0      6     0      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      62
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceCDCBasicDemoInitialize                     1     1      0    1528
                                             13 COMMON     1     1      0
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            2     2      0    1528
                                              0 BANK0      2     2      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i1_USBTransferOnePacket                               8     4      4     576
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     952
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     524
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     167
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     167
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     170
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0     136
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckCDCRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckCDCRequest
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      8       F       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10     10      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      2      14      13       25.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     120      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     120      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sun Apr 13 14:38:56 2014

                               _USB_SD_Ptr 0307                                          pc 0002  
                              __CFG_CP$OFF 0000                                         l14 095E  
                              ?_LED_Enable 0070                              _USBDeviceInit 03CC  
                       __size_of_CDCInitEP 0039       USER_USB_CALLBACK_EVENT_HANDLER@event 0062  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 0064                                        l207 08F4  
                                      l261 09C6                __end_of_USBStdGetDscHandler 074B  
                                      l255 09AF                                        l257 09B2  
                                      l258 09B5                                        l259 09B8  
                                      l452 09F5                                        l391 0413  
                                      _BDT 0020                                        _UIE 0E92  
                                      _UIR 0E90                     _APP_LEDUpdateUSBStatus 0C8A  
                               _USBSuspend 0A1F                       USBStdSetCfgHandler@i 006C  
                     USBStdSetCfgHandler@p 0069                               __CFG_BORV$LO 0000  
                                      wreg 0009                             _USBDeviceTasks 0149  
                             __CFG_FOSC$HS 0000                             _USBDeviceState 01CE  
                            _BUTTON_Enable 08EA                                       S5653 081A  
                    ??_USBCtrlTrfRxService 0072                             ??_getsUSBUSART 0169  
                 USBEnableEndpoint@options 0077                               __CFG_LVP$OFF 0000  
                          __end_of_LED_Off 0978                 USBConfigureEndpoint@handle 0076  
                                     l5101 0DF0                                       l5021 09BB  
                                     l5041 093A                                       l5123 0245  
                                     l5115 09A9                                       l5037 0933  
                                     l5125 0248                                       l5061 0AC5  
                                     l5047 093C                                       l5143 0277  
                                     l5049 0945                                       l5137 025A  
                                     l5129 024F                                       l5057 0ABF  
                                     l5091 0DBD                                       l5083 0DA6  
                                     l5149 0281                                       l5085 0DA9  
                                     l5069 0AD5                                       l5253 0952  
                                     l5421 03FA                                       l5413 03ED  
                                     l5405 03DC                                       l5159 02A0  
                                     l5167 02BB                                       l5185 02EA  
                                     l5169 02C0                                       l5177 02DB  
                                     l5097 0DBF                                       l5249 094A  
                                     l5441 0418                                       l5187 02F0  
                                     l5179 02DF                                       l5099 0DDE  
                                     l5371 0F3A                                       l5443 0428  
                                     l5189 0303                                       l5461 045D  
                                     l5455 043D                                       l4921 0C45  
                                     l5385 0F67                                       l5377 0F4D  
                                     l5393 0F8D                                       l5369 0F38  
                                     l5379 0F54                                       l5387 0F6D  
                                     l4941 0C7F                                       l5389 0F80  
                                     l5487 09FA                                       l4929 0C53  
                                     l5497 0924                                       u5155 03FD  
                    ??_USBCtrlTrfTxService 0070                                       _UCFG 0E91  
                                     _UEP0 0E98                                       _UEP1 0E99  
                                     _UEIE 0E97                                       _UEIR 0E93  
                                     _UCON 0E8E                               __CFG_WRT$OFF 0000  
                          _CDCDataInHandle 01C7     USBStdFeatureReqHandler@current_ep_data 006C  
                                     _pDst 01DA                                       _main 091A  
                                     fsr0h 0005                                       fsr1h 0007  
                                     fsr0l 0004                                       indf0 0000  
                                     indf1 0001                                _BaudRateGen 01B0  
                                     fsr1l 0006                            _USBDeviceAttach 09E4  
                                     btemp 007E                                       ltemp 007E  
                                     start 0010                                       ttemp 007E  
                                     wtemp 007E                              __CFG_IESO$OFF 0000  
               __end_of_USBCheckStdRequest 0E56                     ??_USBCtrlTrfOutHandler 0076  
                      USBDeviceInit@i_1189 0164                  ??_USBStdFeatureReqHandler 0068  
                   __size_of_putrsUSBUSART 0032                   ??_USBStdGetStatusHandler 0070  
                           ?_USBDeviceInit 0070                                _writeBuffer 0320  
                                    ?_main 0070                              __CFG_WDTE$OFF 0000  
        __size_of_USBCtrlEPServiceComplete 0085                     __end_of_USBDeviceTasks 0231  
                ?_USBCtrlEPServiceComplete 0070                                      i1l130 0B57  
                                    i1l221 0990                                      i1l231 0977  
                                    i1l215 097A                                      i1l225 0961  
                                    i1l217 097D                                      i1l218 0980  
                                    i1l227 0964                                      i1l219 0983  
                                    i1l403 016D                                      i1l228 0967  
                                    i1l229 096A                                      i1l413 01D7  
                                    i1l414 022E                                      i1l505 0539  
                                    i1l604 0E55                                      i1l542 0BA8  
                                    i1l606 0DFB                                      i1l615 0E2E  
                                    i1l391 04C3                                      i1l640 0108  
                                    i1l545 0BE3                                      i1l490 0FAE  
                                    i1l546 0BB2                                      i1l627 00A1  
                                    i1l547 0BB5                                      i1l628 00A2  
                                    i1l477 068E                                      i1l592 0EB4  
                                    i1l690 0D90                                      i1l589 0E75  
                                    _UADDR 0E96                                      _USTAT 0E8F  
       __size_of_USBCtrlEPAllowStatusStage 0068                             __CFG_FCMEN$OFF 0000  
                           ?_BUTTON_Enable 0070            __end_of_USBCtrlEPAllowDataStage 0D2F  
                                    _sd000 03C8                                      _sd001 034E  
                                    _sd002 0382                  __size_of_BUTTON_IsPressed 0017  
                           __CFG_BOREN$OFF 0000                                      ltemp0 007E  
                                    ltemp1 0082                                      ltemp2 0086  
                                    ltemp3 0080                        __size_of_LED_Enable 001B  
                        __end_of_CDCInitEP 0B1F                                      ttemp0 007E  
                                    ttemp1 0081                                      ttemp2 0084  
                                    ttemp3 0087                                      ttemp4 007F  
                                    status 0003                                      wtemp0 007E  
                                    wtemp1 0080                                      wtemp2 0082  
                                    wtemp3 0084                                      wtemp4 0086  
                                    wtemp5 0088                                      wtemp6 007F  
                          putUSBUSART@data 0162               __size_of_USBStdSetCfgHandler 0091  
                           __CFG_MCLRE$OFF 0000                            __initialization 0012  
                             __end_of_main 0930                      _control_signal_bitmap 01D8  
                           __CFG_LPBOR$OFF 0000                  __size_of_USBCtrlEPService 0071  
                                   ??_main 0170                            ?_USBDeviceTasks 0070  
                              ?_USBSuspend 0070                                  ??_LED_Off 0070  
                      __CFG_USBLSCLK$48MHz 0000                            i1_USBDeviceInit 047E  
                             _cdc_mem_type 01D3                              _putrsUSBUSART 0AB4  
                  __end_of_USBDeviceAttach 0A01                                     _ADCON0 009D  
                                   _ADCON1 009E                                     _ADCON2 009F  
                         _CDCDataOutHandle 01C8                          _getsUSBUSART$2071 016C  
                                   i1S5661 0824                                     i1S5663 082E  
                                   i1S5655 0800                                     _ADRESH 009C  
                                   _ADRESL 009B                            getsUSBUSART@len 0168  
                   SYSTEM_Initialize@state 0161                      __size_of_CDCTxService 00D5  
                                   i1l5011 0EA8                                     i1l5015 0EB8  
                                   i1l5007 0E99                                     i1l4311 0A4D  
                                   i1l4401 0C91                                     i1l5201 0A16  
                                   i1l4307 0A46                                     i1l4421 0CC1  
                                   i1l4413 0CAC                                     i1l4405 0C9C  
                                   i1l4511 0FA6                                     i1l4327 0B6D  
                                   i1l4319 0B5F                                     i1l5231 0779  
                                   i1l5303 01A0                                     i1l4417 0CB6  
                                   i1l4409 0CA7                                     i1l5241 07AD  
                                   i1l3721 0A7D                                     i1l5313 01B2  
                                   i1l4523 0FC6                                     i1l4531 0FDF  
                                   i1l4339 0B99                                     i1l4427 0CCC  
                                   i1l4611 05C8                                     i1l5243 07B0  
                                   i1l3723 0A7F                                     i1l4533 0FE3  
                                   i1l4541 0FFC                                     i1l4429 0CD2  
                                   i1l4453 0D4F                                     i1l4445 0D43  
                                   i1l5237 079E                                     i1l3805 04C8  
                                   i1l5309 01AC                                     i1l4367 096D  
                                   i1l4471 0D75                                     i1l3807 04D6  
                                   i1l5327 01CF                                     i1l5319 01B9  
                                   i1l4297 07E6                                     i1l4377 0986  
                                   i1l4465 0D67                                     i1l4457 0D56  
                                   i1l4481 0B20                                     i1l3825 0507  
                                   i1l5353 0212                                     i1l5337 01DD  
                                   i1l4483 0B23                                     i1l4707 0BD7  
                                   i1l4651 0637                                     i1l4635 0604  
                                   i1l4619 05D9                                     i1l3819 04E7  
                                   i1l5355 0222                                     i1l5347 01F9  
                                   i1l5275 0167                                     i1l5267 015A  
                                   i1l4565 0EDD                                     i1l4477 0D7E  
                                   i1l4485 0B26                                     i1l4493 0B2F  
                                   i1l4741 0086                                     i1l4725 0057  
                                   i1l4549 09CD                                     i1l4629 05F0  
                                   i1l4805 065E                                     i1l4487 0B29  
                                   i1l4727 0059                                     i1l4671 0717  
                                   i1l4663 06E7                                     i1l4911 0E4A  
                                   i1l4591 0CFF                                     _LED_On 0978  
                                   i1l4489 0B2C                                     i1l4761 00CA  
                                   i1l4681 073B                                     i1l4673 071A  
                                   i1l4817 069C                                     i1l4825 06A5  
                                   i1l4809 0662                                     i1l3785 04AA  
                                   i1l3777 049E                                     i1l3769 048D  
                                   i1l5297 018C                                     i1l5289 0180  
                                   i1l4659 06DD                                     i1l4907 0E3B  
                                   i1l4595 0D14                                     i1l4765 00D3  
                                   i1l4749 00AA                                     i1l4685 073E  
                                   i1l4791 0134                                     i1l4775 00F7  
                                   i1l4759 00C3                                     i1l4679 0738  
                                   i1l4865 0588                                     i1l4857 0541  
                                   i1l5657 0B38                                     i1l4785 010E  
                                   i1l4777 00FC                                     i1l4697 0BBE  
                                   i1l4881 0E04                                     i1l4867 0594  
                                   i1l4859 055A                                     i1l5659 0B52  
                                   i1l4883 0E07                                     i1l4789 012C  
                                   i1l4893 0E18                                     i1l4885 0E0A  
                                   i1l4983 0AB1                                     i1l4895 0E1B  
                                   i1l4977 0A8C                                     i1l4897 0E1E  
                                   i1l4997 0E70                                     u307_25 04AD  
                                   u438_25 0533                                     u367_25 07C4  
                                   u368_25 07CA                                     u369_25 07D2  
                                   u393_25 09D7                                     u477_25 075A  
                                   u399_25 0D09                              CDCTxService@i 016C  
             i1USBTransferOnePacket@handle 0077                             __CFG_PWRTE$OFF 0000  
                        _shortPacketStatus 01DB                            USBDeviceTasks@i 00E6  
              USBStdFeatureReqHandler@pUEP 006A                   USBTransferOnePacket@data 0161  
               USBCtrlTrfInHandler@lastDTS 0075                            ??_USBDeviceInit 0160  
                             ?_putUSBUSART 0160                             __CFG_STVREN$ON 0000  
                     __end_of_getsUSBUSART 0DF3                          _USBEnableEndpoint 0A3E  
          __size_of_USBStdGetStatusHandler 004C                                     _memset 09C7  
                       ?_USBEnableEndpoint 0077              __size_of_USBTransferOnePacket 004D  
                          ??_BUTTON_Enable 0160                               _CDCTxService 0231  
                           ?_putrsUSBUSART 0070                        ??_USBEnableEndpoint 0078  
                              _CtrlTrfData 0058               ?_APP_DeviceCDCBasicDemoTasks 0070  
                     _controlTransferState 01D7                          _SYSTEM_Initialize 0947  
                  __end_of__initialization 003D                 i1USBTransferOnePacket@data 0071  
                       ?_SYSTEM_Initialize 0070                   __size_of_USBStallHandler 0026  
                      __size_of_USBSuspend 001F                             __pcstackCOMMON 0070  
                __end_of_USBEnableEndpoint 0A5E                              __end_of_sd000 03CC  
                            __end_of_sd001 0382                              __end_of_sd002 03B6  
                             __pidataBANK4 08F5                        ??_SYSTEM_Initialize 0161  
                                LED_On@led 0070           __size_of_USBCtrlEPAllowDataStage 0057  
                             ??_LED_Enable 0160              __size_of_USBConfigureEndpoint 003D  
                  __end_ofi1_USBDeviceInit 0523                __end_of_USBCtrlTrfInHandler 0EBA  
                  ?_APP_LEDUpdateUSBStatus 0070                          _CDCTxService$2119 016A  
                               _cdc_notice 01A0                                 _cdc_rx_len 01D4  
                               _cdc_tx_len 01D6                              _buttonMessage 0220  
                 ??_USBCtrlTrfSetupHandler 006F                           ?_USBDeviceAttach 0070  
                __end_of_SYSTEM_Initialize 095F                           _BUTTON_IsPressed 0930  
                   _USBStdGetStatusHandler 0BA4                              _buttonPressed 01D2  
                               __pbssBANK1 00E8                                 __pbssBANK3 01A0  
                               __pbssBANK5 02A0                                 __pbssBANK6 0320  
                                  ?_LED_On 0070              ??_APP_DeviceCDCBasicDemoTasks 016E  
 __end_of_APP_DeviceCDCBasicDemoInitialize 091A  __size_of_APP_DeviceCDCBasicDemoInitialize 0013  
       ??_APP_DeviceCDCBasicDemoInitialize 007D          ?_APP_DeviceCDCBasicDemoInitialize 0070  
         _APP_DeviceCDCBasicDemoInitialize 0907                         __end_of_LED_Enable 09C7  
              __size_of_USBWakeFromSuspend 001E                                _pBDTEntryIn 01BA  
         __end_of_USBCtrlEPServiceComplete 06D2                __size_of_USBCheckCDCRequest 0062  
                               __pmaintext 091A                       USBCtrlTrfRxService@i 0074  
                            LED_Enable@led 0160                            __CFG_PLLMULT$4x 0000  
           __end_of_APP_LEDUpdateUSBStatus 0CD8                                 __pintentry 0004  
             APP_DeviceCDCBasicDemoTasks@i 0233                                    ?_memset 0070  
                               _device_dsc 03B6                           _USBCtrlEPService 074B  
                               _ep_data_in 01B4                __end_of_USBCtrlTrfRxService 05BC  
                       _USBCheckStdRequest 0DF3                          _configDescriptor1 030B  
                          ??_putrsUSBUSART 0160                                    _LED_Off 095F  
              __end_of_USBCtrlTrfTxService 1000                        _USBStdSetCfgHandler 05BC  
                      ?_USBCheckStdRequest 0070               __size_of_USBStdGetDscHandler 0079  
                                  _UIEbits 0E92                                 __stringtab 0306  
                                  _UIRbits 0E90                            __size_of_LED_On 0019  
                            _cdc_trf_state 01D5                   ??i1_USBTransferOnePacket 0074  
           APP_LEDUpdateUSBStatus@ledCount 01C0                                    _pCDCDst 01C2  
                                  _pCDCSrc 01C4                      __size_of_getsUSBUSART 0062  
                     ?_USBStdSetCfgHandler 0070                                  _CDCInitEP 0AE6  
               __size_of_USBEnableEndpoint 0020                                 _readBuffer 02A0  
                     ??_USBCheckStdRequest 006E              __size_of_USBCtrlTrfOutHandler 0030  
                         ??_USBDeviceTasks 00E4                          ??_USBStallHandler 0070  
     __size_of_APP_DeviceCDCBasicDemoTasks 006E                           ?i1_USBDeviceInit 0070  
                     __size_of_putUSBUSART 001B                         getsUSBUSART@buffer 016B  
                          __size_of_memset 001D                  __end_of_configDescriptor1 034E  
                                  __ptext1 03CC                                    __ptext2 09E4  
                                  __ptext3 0947                                    __ptext4 09AC  
                                  __ptext5 08EA                                    __ptext6 0F22  
                                  __ptext7 0AB4                                    __ptext8 0991  
                                  __ptext9 0D91                                    _inPipes 00EA  
              _USBDeferOUTDataStagePackets 01CC                               ??_USBSuspend 0068  
                       __end_of_USB_CD_Ptr 030B                 __size_of_SYSTEM_Initialize 0018  
          __size_of_USBCtrlTrfSetupHandler 004D                                    clrloop0 07FA  
                     end_of_initialization 003D                               _getsUSBUSART 0D91  
                       __end_of_USB_SD_Ptr 030A                        _pBDTEntryEP0OutNext 00E9  
                                  init_ram 08E4                                    memset@c 0072  
                                  memset@n 0074                                    memset@p 0076  
                                  initloop 08E5            _dummy_encapsulated_cmd_response 01DC  
                 ?_USBStdFeatureReqHandler 0070                      ??_USBStdSetCfgHandler 0068  
                               ?_CDCInitEP 0070                         __end_of_USBSuspend 0A3E  
                  _USBCtrlEPAllowDataStage 0CD8                   _USBCtrlEPServiceComplete 064D  
               _USBStatusStageEnabledFlag1 01CF                 _USBStatusStageEnabledFlag2 01D0  
                       USBEnableEndpoint@p 007A                                  _PORTAbits 000C  
                                _TRISBbits 008D                                  _TRISCbits 008E  
                       _BothEP0OutUOWNsSet 01C6                  USBStdSetCfgHandler@i_1530 006B  
                USBConfigureEndpoint@EPNum 0075                 ?_USBCtrlEPAllowStatusStage 0070  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0066    APP_DeviceCDCBasicDemoTasks@numBytesRead 0232  
                                _USTATcopy 01EE                   i1USBTransferOnePacket@ep 0076  
             __end_of_USBTransferOnePacket 0C8A                             __end_of_LED_On 0991  
          __size_ofi1_USBTransferOnePacket 004C                          putUSBUSART@length 0160  
                       __CFG_PLLEN$ENABLED 0000                      i1USBDeviceInit@i_1189 0074  
                   _USBCtrlTrfSetupHandler 0BF0                   __end_of_BUTTON_IsPressed 0947  
                    __end_of_USBDeviceInit 047E                                 LED_Off@led 0070  
                       putrsUSBUSART@pData 0161                             __end_of_memset 09E4  
                        _USBBusIsSuspended 01CA                        start_initialization 0012  
                  ?_USBStdGetStatusHandler 0070                      __end_of_BUTTON_Enable 08F5  
            USBCtrlTrfRxService@byteToRead 0075                                _cdc_data_rx 0120  
                              _cdc_data_tx 00A0               __end_of_USBConfigureEndpoint 07F9  
          __end_of_USBStdFeatureReqHandler 0149                                   ??_LED_On 0070  
        __end_of_USBCtrlEPAllowStatusStage 0F22                   __end_of_USBCtrlEPService 07BC  
                ??_USBCtrlEPAllowDataStage 0073                                ??_CDCInitEP 0060  
                           USBDeviceInit@i 0165                             USBDeviceInit@p 0162  
                   _pBDTEntryEP0OutCurrent 00E8                    USBTransferOnePacket@dir 0160  
                  USBTransferOnePacket@len 0163                        _USBStdGetDscHandler 06D2  
                              __pdataBANK4 0220                                   ??_memset 0076  
                   i1_USBTransferOnePacket 0B58                     BUTTON_IsPressed@button 0160  
                   _USBActiveConfiguration 01ED             __end_of_USBStdGetStatusHandler 0BF0  
                i1USBTransferOnePacket@dir 0070                  i1USBTransferOnePacket@len 0073  
                                 ?_LED_Off 0070                                  ___latbits 0002  
                            __pcstackBANK0 0060                              __pcstackBANK1 00E0  
                            __pcstackBANK2 0160               __size_of_USBCtrlTrfInHandler 0064  
                            __pcstackBANK4 0232                       ?_USBStdGetDscHandler 0070  
               __end_of_USBWakeFromSuspend 0A1F                            _USBStallHandler 0A5E  
                             _pBDTEntryOut 01BD                 __end_of_USBCheckCDCRequest 0D91  
                 __size_of_USBDeviceAttach 001D                                  __pstrings 0306  
                                __pswtext1 081A                                  __pswtext2 0800  
                                __pswtext3 0824                                  __pswtext4 082E  
                     _USBTransferOnePacket 0C3D                      __end_of_putrsUSBUSART 0AE6  
             __end_of_USBCtrlTrfOutHandler 0AB4                      ??_USBStdGetDscHandler 0070  
                              _ep_data_out 01B7        __end_of_APP_DeviceCDCBasicDemoTasks 0F90  
              _APP_DeviceCDCBasicDemoTasks 0F22               __size_of_USBCtrlTrfRxService 0099  
            USBConfigureEndpoint@direction 0070               __size_of_USBCtrlTrfTxService 0070  
                                 _LATCbits 010E                 ??_USBCtrlEPServiceComplete 0075  
                                clear_ram0 07F9                                   _PIE2bits 0092  
                                 _PIR2bits 0012                  USBCtrlEPService@setup_cnt 00E3  
                            ??_putUSBUSART 0161                                   _UEP0bits 0E98  
               _USBDeferINDataStagePackets 01CB                __size_of_USBCheckStdRequest 0063  
                                 _UCONbits 0E8E                       _USBConfigureEndpoint 07BC  
         __size_of_USBStdFeatureReqHandler 0109                                 _ADCON0bits 009D  
                    ?_USBTransferOnePacket 0160                          _SYS_InterruptHigh 0004  
                            ?_CDCTxService 0070                               _RemoteWakeup 01C9  
                         __size_of_LED_Off 0019                         ?_SYS_InterruptHigh 0070  
                 __size_ofi1_USBDeviceInit 00A5                    __end_of_USBStallHandler 0A84  
                        putrsUSBUSART@data 0162                ??_USBCtrlEPAllowStatusStage 0070  
              __end_of_USBStdSetCfgHandler 064D                        ??_SYS_InterruptHigh 00E7  
                       __end_of_device_dsc 03C8                   ??_APP_LEDUpdateUSBStatus 0071  
                  ?_USBCtrlTrfSetupHandler 0070                    USBStdGetStatusHandler@p 0071  
                   USBTransferOnePacket@ep 0166                                   _SetupPkt 0050  
                    ?_USBConfigureEndpoint 0070                          ??_USBDeviceAttach 0160  
                        ?_BUTTON_IsPressed 0070                  __end_of_SYS_InterruptHigh 0010  
                       __end_of__stringtab 0307                         ??_BUTTON_IsPressed 0160  
                      __end_of_putUSBUSART 09AC                                _line_coding 01E4  
                               _ANSELBbits 018D                             ??_CDCTxService 0168  
                  __size_of_USBDeviceTasks 00E8                                   __ptext10 0231  
                                 __ptext11 0C3D                                   __ptext20 0BF0  
                                 __ptext12 0930                                   __ptext21 064D  
                                 __ptext30 0D2F                                   __ptext22 0CD8  
                                 __ptext14 0149                                   __ptext31 0C8A  
                                 __ptext23 0DF3                                   __ptext15 047E  
                                 __ptext40 0523                                   __ptext32 0978  
                                 __ptext24 05BC                                   __ptext16 0A01  
                                 __ptext41 0EBA                                   __ptext33 095F  
                                 __ptext25 09C7                                   __ptext17 0A1F  
                                 __ptext42 0E56                                   __ptext34 0907  
                                 __ptext26 0BA4                                   __ptext18 0A5E  
                                 __ptext43 0F90                                   __ptext35 0AE6  
                                 __ptext27 06D2                                   __ptext19 074B  
                                 __ptext36 0B58                                   __ptext28 0040  
                                 __ptext37 0A3E                                   __ptext29 0B1F  
                                 __ptext38 07BC                                   __ptext39 0A84  
           __end_of_USBCtrlTrfSetupHandler 0C3D                              __size_of_main 0016  
                        ?_USBCtrlEPService 0070                         ??_USBCtrlEPService 00E0  
                      _USBCtrlTrfInHandler 0E56                        BUTTON_Enable@button 0160  
                                 _outPipes 01AA                       _USBCtrlTrfOutHandler 0A84  
                  ?i1_USBTransferOnePacket 0070                  _USBCtrlEPAllowStatusStage 0EBA  
                               _LED_Enable 09AC                     ??_USBTransferOnePacket 0164  
                         putrsUSBUSART@len 0163                  _USBDeferStatusStagePacket 01CD  
                 CDCTxService@byte_to_send 016D                           i1USBDeviceInit@i 0075  
                         i1USBDeviceInit@p 0072                                 _INTCONbits 000B  
                     ?_USBCtrlTrfInHandler 0070              USBCtrlTrfTxService@byteToSend 0072  
                                 memset@p1 0070                           ?_USBStallHandler 0070  
                 USBStdFeatureReqHandler@p 006D                                   intlevel1 0000  
                   __size_of_USBDeviceInit 00B2    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B58  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039           ?_USER_USB_CALLBACK_EVENT_HANDLER 0062  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 007E            _USER_USB_CALLBACK_EVENT_HANDLER 0B1F  
                        ??i1_USBDeviceInit 0070                          __CFG_CLKOUTEN$OFF 0000  
          __size_of_APP_LEDUpdateUSBStatus 004E             __end_ofi1_USBTransferOnePacket 0BA4  
                   ??_USBConfigureEndpoint 0071                      ?_USBCtrlTrfOutHandler 0070  
                   __size_of_BUTTON_Enable 000B                                _putUSBUSART 0991  
                     __CFG_CPUDIV$NOCLKDIV 0000                        _USBCtrlTrfRxService 0523  
                       _USBWakeFromSuspend 0A01                    _USBStdFeatureReqHandler 0040  
                       _USBCheckCDCRequest 0D2F                        _USBCtrlTrfTxService 0F90  
               __size_of_SYS_InterruptHigh 000C                        ?_USBWakeFromSuspend 0070  
                    ??_USBCtrlTrfInHandler 0073                      _USBAlternateInterface 01EB  
                      ?_USBCheckCDCRequest 0070                        USBEnableEndpoint@ep 007C  
                          _endpoint_number 01D9                       ?_USBCtrlTrfRxService 0070  
                            ?_getsUSBUSART 0168                   ?_USBCtrlEPAllowDataStage 0070  
                     ?_USBCtrlTrfTxService 0070               _USBStatusStageTimeoutCounter 01D1  
                     ??_USBWakeFromSuspend 0068                 USBTransferOnePacket@handle 0167  
                     __end_of_CDCTxService 0306                       ??_USBCheckCDCRequest 0070  
                               _USB_CD_Ptr 030A  
